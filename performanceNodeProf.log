v8-version,9,4,146,26,-node.22,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff785310000,0x7ff789123000,0
shared-library,C:\\Windows\\SYSTEM32\\ntdll.dll,0x7ff827830000,0x7ff827a28000,0
shared-library,C:\\Windows\\System32\\KERNEL32.DLL,0x7ff827450000,0x7ff82750f000,0
shared-library,C:\\Windows\\System32\\KERNELBASE.dll,0x7ff825140000,0x7ff825412000,0
shared-library,C:\\Windows\\System32\\WS2_32.dll,0x7ff826f00000,0x7ff826f6b000,0
shared-library,C:\\Windows\\System32\\RPCRT4.dll,0x7ff827510000,0x7ff827635000,0
shared-library,C:\\Windows\\System32\\PSAPI.DLL,0x7ff825bc0000,0x7ff825bc8000,0
shared-library,C:\\Windows\\System32\\ADVAPI32.dll,0x7ff8260b0000,0x7ff82615e000,0
shared-library,C:\\Windows\\System32\\msvcrt.dll,0x7ff826fd0000,0x7ff82706e000,0
shared-library,C:\\Windows\\System32\\sechost.dll,0x7ff826d80000,0x7ff826e1c000,0
shared-library,C:\\Windows\\System32\\USER32.dll,0x7ff827640000,0x7ff8277e1000,0
shared-library,C:\\Windows\\System32\\win32u.dll,0x7ff825600000,0x7ff825622000,0
shared-library,C:\\Windows\\System32\\GDI32.dll,0x7ff825870000,0x7ff82589b000,0
shared-library,C:\\Windows\\System32\\gdi32full.dll,0x7ff825450000,0x7ff82555f000,0
shared-library,C:\\Windows\\System32\\msvcp_win.dll,0x7ff825560000,0x7ff8255fd000,0
shared-library,C:\\Windows\\System32\\ucrtbase.dll,0x7ff824f20000,0x7ff825020000,0
shared-library,C:\\Windows\\System32\\CRYPT32.dll,0x7ff825630000,0x7ff825786000,0
shared-library,C:\\Windows\\System32\\bcrypt.dll,0x7ff825420000,0x7ff825447000,0
shared-library,C:\\Windows\\SYSTEM32\\dbghelp.dll,0x7ff822c60000,0x7ff822e44000,0
shared-library,C:\\Windows\\SYSTEM32\\IPHLPAPI.DLL,0x7ff824380000,0x7ff8243bb000,0
shared-library,C:\\Windows\\SYSTEM32\\USERENV.dll,0x7ff824e20000,0x7ff824e4e000,0
shared-library,C:\\Windows\\SYSTEM32\\WINMM.dll,0x7ff81a000000,0x7ff81a027000,0
shared-library,C:\\Windows\\SYSTEM32\\CRYPTBASE.DLL,0x7ff8248f0000,0x7ff8248fc000,0
shared-library,C:\\Windows\\System32\\IMM32.DLL,0x7ff825a50000,0x7ff825a82000,0
shared-library,C:\\Windows\\SYSTEM32\\powrprof.dll,0x7ff8244a0000,0x7ff8244eb000,0
shared-library,C:\\Windows\\SYSTEM32\\UMPDC.dll,0x7ff824360000,0x7ff824372000,0
shared-library,C:\\Windows\\system32\\uxtheme.dll,0x7ff822450000,0x7ff8224ee000,0
shared-library,C:\\Windows\\System32\\combase.dll,0x7ff825bd0000,0x7ff825f25000,0
shared-library,C:\\Windows\\system32\\mswsock.dll,0x7ff8246e0000,0x7ff82474a000,0
shared-library,C:\\Windows\\SYSTEM32\\kernel.appcore.dll,0x7ff823790000,0x7ff8237a2000,0
shared-library,C:\\Windows\\System32\\bcryptPrimitives.dll,0x7ff8257e0000,0x7ff825862000,0
shared-library-end
tick,0x7ff82516306e,279775,0,0x0,6
profiler,begin,1000
new,CodeRange,0x1c660910000,0
new,MemoryChunk,0x584100000,262144
new,MemoryChunk,0x24f11b40000,262144
new,MemoryChunk,0x1fd6a840000,262144
new,MemoryChunk,0xed146c0000,262144
new,MemoryChunk,0x2bfc7ac0000,262144
heap-capacity,1031072
heap-available,2198652736
new,MemoryChunk,0xaf8d780000,262144
new,MemoryChunk,0xdf1df80000,262144
new,MemoryChunk,0x15342180000,262144
new,MemoryChunk,0x2f67da00000,262144
new,MemoryChunk,0x2e9b6d00000,262144
new,MemoryChunk,0x1d7f5400000,262144
new,MemoryChunk,0x1d44cc00000,262144
new,MemoryChunk,0x1c660940000,262144
new,MemoryChunk,0x23d9d900000,262144
code-creation,Builtin,2,285223,0x7ff785e713e4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,285259,0x7ff785e71944,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,285270,0x7ff785e71b24,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,285279,0x7ff785e71da4,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,285288,0x7ff785e71e84,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,285297,0x7ff785e72004,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,285306,0x7ff785e720a4,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,285314,0x7ff785e720e4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,285323,0x7ff785e72264,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,285332,0x7ff785e72424,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,285417,0x7ff785e725e4,104,CallBoundFunction
code-creation,Builtin,2,285433,0x7ff785e72664,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,285441,0x7ff785e726e4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,285450,0x7ff785e72764,120,Call_ReceiverIsAny
code-creation,Builtin,2,285457,0x7ff785e727e4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,285466,0x7ff785e72be4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,285475,0x7ff785e72fe4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,285484,0x7ff785e73424,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,285493,0x7ff785e73864,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,285501,0x7ff785e73ca4,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,285509,0x7ff785e740e4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,285518,0x7ff785e744a4,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,285527,0x7ff785e74864,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,285535,0x7ff785e74c24,736,CallProxy
code-creation,Builtin,2,285543,0x7ff785e74f24,148,CallVarargs
code-creation,Builtin,2,285550,0x7ff785e74fc4,944,CallWithSpread
code-creation,Builtin,2,285558,0x7ff785e75384,1956,CallWithSpread_Baseline
code-creation,Builtin,2,285567,0x7ff785e75b44,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,285575,0x7ff785e762e4,864,CallWithArrayLike
code-creation,Builtin,2,285583,0x7ff785e76664,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,285591,0x7ff785e76d84,156,CallForwardVarargs
code-creation,Builtin,2,285599,0x7ff785e76e24,156,CallFunctionForwardVarargs
code-creation,Builtin,2,285607,0x7ff785e76ec4,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,285616,0x7ff785e76f64,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,285624,0x7ff785e77064,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,285633,0x7ff785e771a4,28,ConstructFunction
code-creation,Builtin,2,285641,0x7ff785e771c4,104,ConstructBoundFunction
code-creation,Builtin,2,285649,0x7ff785e77244,28,ConstructedNonConstructable
code-creation,Builtin,2,285657,0x7ff785e77264,100,Construct
code-creation,Builtin,2,285664,0x7ff785e772e4,148,ConstructVarargs
code-creation,Builtin,2,285672,0x7ff785e77384,968,ConstructWithSpread
code-creation,Builtin,2,285680,0x7ff785e77764,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,285688,0x7ff785e77e44,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,285696,0x7ff785e78544,924,ConstructWithArrayLike
code-creation,Builtin,2,285704,0x7ff785e788e4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,285712,0x7ff785e78f64,196,ConstructForwardVarargs
code-creation,Builtin,2,285720,0x7ff785e79044,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,285728,0x7ff785e79124,804,Construct_Baseline
code-creation,Builtin,2,285736,0x7ff785e79464,820,Construct_WithFeedback
code-creation,Builtin,2,285744,0x7ff785e797a4,476,JSConstructStubGeneric
code-creation,Builtin,2,285752,0x7ff785e79984,376,JSBuiltinsConstructStub
code-creation,Builtin,2,285760,0x7ff785e79b04,676,FastNewObject
code-creation,Builtin,2,285768,0x7ff785e79dc4,292,FastNewClosure
code-creation,Builtin,2,285775,0x7ff785e79f04,720,ConstructProxy
code-creation,Builtin,2,285783,0x7ff785e7a1e4,360,JSEntry
code-creation,Builtin,2,285790,0x7ff785e7a364,360,JSConstructEntry
code-creation,Builtin,2,285798,0x7ff785e7a4e4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,285806,0x7ff785e7a664,96,JSEntryTrampoline
code-creation,Builtin,2,285813,0x7ff785e7a6e4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,285823,0x7ff785e7a764,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,285832,0x7ff785e7a884,1116,StringCodePointAt
code-creation,Builtin,2,285840,0x7ff785e7ace4,1552,StringFromCodePointAt
code-creation,Builtin,2,285848,0x7ff785e7b304,544,StringEqual
code-creation,Builtin,2,285857,0x7ff785e7b544,276,StringGreaterThan
code-creation,Builtin,2,285902,0x7ff785e7b664,276,StringGreaterThanOrEqual
code-creation,Builtin,2,285914,0x7ff785e7b784,276,StringLessThan
code-creation,Builtin,2,285922,0x7ff785e7b8a4,276,StringLessThanOrEqual
code-creation,Builtin,2,285930,0x7ff785e7b9c4,2492,StringSubstring
code-creation,Builtin,2,285937,0x7ff785e7c384,80,OrderedHashTableHealIndex
code-creation,Builtin,2,285945,0x7ff785e7c3e4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,285953,0x7ff785e7c884,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,285961,0x7ff785e7c8e4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,285970,0x7ff785e7c944,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,285978,0x7ff785e7c9a4,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,285986,0x7ff785e7ca04,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,285995,0x7ff785e7ca64,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,286003,0x7ff785e7cac4,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,286011,0x7ff785e7cb24,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,286019,0x7ff785e7cc04,52,InterpreterOnStackReplacement
code-creation,Builtin,2,286027,0x7ff785e7cc44,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,286035,0x7ff785e7cea4,56,BaselineOnStackReplacement
code-creation,Builtin,2,286043,0x7ff785e7cee4,84,BaselineLeaveFrame
code-creation,Builtin,2,286051,0x7ff785e7cf44,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,286059,0x7ff785e7d024,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,286068,0x7ff785e7d124,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,286076,0x7ff785e7d204,1004,CompileLazy
code-creation,Builtin,2,286084,0x7ff785e7d604,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,286092,0x7ff785e7d664,252,InstantiateAsmJs
code-creation,Builtin,2,286099,0x7ff785e7d764,32,NotifyDeoptimized
code-creation,Builtin,2,286107,0x7ff785e7d7a4,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,286115,0x7ff785e7dac4,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,286123,0x7ff785e7dde4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,286131,0x7ff785e7e104,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,286139,0x7ff785e7e424,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,286146,0x7ff785e7e464,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,286155,0x7ff785e7e4a4,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,286163,0x7ff785e7e4e4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,286171,0x7ff785e7e544,288,CallApiCallback
code-creation,Builtin,2,286178,0x7ff785e7e684,268,CallApiGetter
code-creation,Builtin,2,286186,0x7ff785e7e7a4,12,HandleApiCall
code-creation,Builtin,2,286194,0x7ff785e7e7c4,12,HandleApiCallAsFunction
code-creation,Builtin,2,286201,0x7ff785e7e7e4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,286209,0x7ff785e7e804,64,AllocateInYoungGeneration
code-creation,Builtin,2,286217,0x7ff785e7e864,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,286225,0x7ff785e7e8a4,64,AllocateInOldGeneration
code-creation,Builtin,2,286233,0x7ff785e7e904,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,286241,0x7ff785e7e944,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,286249,0x7ff785e7eb04,496,GrowFastDoubleElements
code-creation,Builtin,2,286257,0x7ff785e7ed04,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,286265,0x7ff785e7eea4,388,DebugBreakTrampoline
code-creation,Builtin,2,286273,0x7ff785e7f044,180,ToNumber
code-creation,Builtin,2,286280,0x7ff785e7f104,292,ToNumber_Baseline
code-creation,Builtin,2,286288,0x7ff785e7f244,360,ToNumeric_Baseline
code-creation,Builtin,2,286296,0x7ff785e7f3c4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,286304,0x7ff785e7f444,212,ToNumberConvertBigInt
code-creation,Builtin,2,286311,0x7ff785e7f524,132,Typeof
code-creation,Builtin,2,286319,0x7ff785e7f5c4,104,BigIntToI64
code-creation,Builtin,2,286326,0x7ff785e7f644,4,BigIntToI32Pair
code-creation,Builtin,2,286336,0x7ff785e7f664,232,I64ToBigInt
code-creation,Builtin,2,286344,0x7ff785e7f764,4,I32PairToBigInt
code-creation,Builtin,2,286352,0x7ff785e7f784,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,286360,0x7ff785e7f804,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,286368,0x7ff785e808a4,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,286376,0x7ff785e846a4,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,286384,0x7ff785e847c4,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,286392,0x7ff785e84804,12,LoadIC_StringLength
code-creation,Builtin,2,286399,0x7ff785e84824,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,286407,0x7ff785e84844,3056,LoadIC_NoFeedback
code-creation,Builtin,2,286415,0x7ff785e85444,32,StoreGlobalIC_Slow
code-creation,Builtin,2,286423,0x7ff785e85484,7332,StoreIC_NoFeedback
code-creation,Builtin,2,286430,0x7ff785e87144,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,286438,0x7ff785e87204,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,286446,0x7ff785e87264,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,286455,0x7ff785e87364,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,286464,0x7ff785e87464,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,286472,0x7ff785e87564,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,286481,0x7ff785e87664,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,286489,0x7ff785e8ae84,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,286498,0x7ff785e8d424,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,286506,0x7ff785e90864,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,286515,0x7ff785e92044,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,286523,0x7ff785e94184,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,286532,0x7ff785e98d44,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,286541,0x7ff785e9ae84,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,286550,0x7ff785e9d9a4,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,286558,0x7ff785e9dcc4,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,286566,0x7ff785e9dd84,72,HasIndexedInterceptorIC
code-creation,Builtin,2,286574,0x7ff785e9dde4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,286582,0x7ff785e9de64,224,DynamicCheckMaps
code-creation,Builtin,2,286591,0x7ff785e9df64,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,286599,0x7ff785e9dfe4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,286608,0x7ff785e9e0a4,152,EnqueueMicrotask
code-creation,Builtin,2,286615,0x7ff785e9e144,8,RunMicrotasksTrampoline
code-creation,Builtin,2,286623,0x7ff785e9e164,3476,RunMicrotasks
code-creation,Builtin,2,286631,0x7ff785e9ef04,2636,HasProperty
code-creation,Builtin,2,286639,0x7ff785e9f964,1156,DeleteProperty
code-creation,Builtin,2,286647,0x7ff785e9fe04,1972,CopyDataProperties
code-creation,Builtin,2,286654,0x7ff785ea05c4,9184,SetDataProperties
code-creation,Builtin,2,286662,0x7ff785ea29c4,28,Abort
code-creation,Builtin,2,286670,0x7ff785ea29e4,28,AbortCSAAssert
code-creation,Builtin,2,286677,0x7ff785ea2a04,12,EmptyFunction
code-creation,Builtin,2,286685,0x7ff785ea2a24,12,Illegal
code-creation,Builtin,2,286692,0x7ff785ea2a44,12,StrictPoisonPillThrower
code-creation,Builtin,2,286700,0x7ff785ea2a64,12,UnsupportedThrower
code-creation,Builtin,2,286707,0x7ff785ea2a84,64,ReturnReceiver
code-creation,Builtin,2,286715,0x7ff785ea2ae4,28,ArrayConstructor
code-creation,Builtin,2,286723,0x7ff785ea2b04,404,ArrayConstructorImpl
code-creation,Builtin,2,286731,0x7ff785ea2ca4,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,286739,0x7ff785ea2d84,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,286748,0x7ff785ea2e64,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,286904,0x7ff785ea2f24,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,287350,0x7ff785ea2fe4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,287371,0x7ff785ea30a4,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,287380,0x7ff785ea3164,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,287390,0x7ff785ea3224,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,287399,0x7ff785ea32e4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,287408,0x7ff785ea3504,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,287417,0x7ff785ea3704,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,287426,0x7ff785ea38c4,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,287435,0x7ff785ea3a64,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,287444,0x7ff785ea3c24,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,287453,0x7ff785ea3dc4,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,287462,0x7ff785ea3fa4,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,287471,0x7ff785ea4144,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,287479,0x7ff785ea41a4,12,ArrayConcat
code-creation,Builtin,2,287487,0x7ff785ea41c4,12,ArrayPrototypeFill
code-creation,Builtin,2,287495,0x7ff785ea41e4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,287503,0x7ff785ea45a4,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,287511,0x7ff785ea4644,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,287518,0x7ff785ea4724,548,ArrayIncludes
code-creation,Builtin,2,287526,0x7ff785ea4964,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,287534,0x7ff785ea4cc4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,287542,0x7ff785ea4d44,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,287550,0x7ff785ea4dc4,552,ArrayIndexOf
code-creation,Builtin,2,287558,0x7ff785ea5004,12,ArrayPop
code-creation,Builtin,2,287565,0x7ff785ea5024,616,ArrayPrototypePop
code-creation,Builtin,2,287573,0x7ff785ea52a4,12,ArrayPush
code-creation,Builtin,2,287580,0x7ff785ea52c4,2424,ArrayPrototypePush
code-creation,Builtin,2,287588,0x7ff785ea5c44,12,ArrayShift
code-creation,Builtin,2,287595,0x7ff785ea5c64,12,ArrayUnshift
code-creation,Builtin,2,287603,0x7ff785ea5c84,956,CloneFastJSArray
code-creation,Builtin,2,287610,0x7ff785ea6044,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,287618,0x7ff785ea68e4,976,ExtractFastJSArray
code-creation,Builtin,2,287626,0x7ff785ea6cc4,260,ArrayPrototypeEntries
code-creation,Builtin,2,287634,0x7ff785ea6de4,248,ArrayPrototypeKeys
code-creation,Builtin,2,287641,0x7ff785ea6ee4,260,ArrayPrototypeValues
code-creation,Builtin,2,287649,0x7ff785ea7004,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,287657,0x7ff785ea8164,4168,FlattenIntoArray
code-creation,Builtin,2,287664,0x7ff785ea91c4,4172,FlatMapIntoArray
code-creation,Builtin,2,287672,0x7ff785eaa224,372,ArrayPrototypeFlat
code-creation,Builtin,2,287680,0x7ff785eaa3a4,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,287687,0x7ff785eaa564,12,ArrayBufferConstructor
code-creation,Builtin,2,287695,0x7ff785eaa584,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,287703,0x7ff785eaa5a4,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,287711,0x7ff785eaa5c4,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,287719,0x7ff785eaa5e4,804,AsyncFunctionEnter
code-creation,Builtin,2,287727,0x7ff785eaa924,132,AsyncFunctionReject
code-creation,Builtin,2,287735,0x7ff785eaa9c4,128,AsyncFunctionResolve
code-creation,Builtin,2,287742,0x7ff785eaaa64,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,287751,0x7ff785eaaa84,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,287759,0x7ff785eab584,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,287769,0x7ff785eac084,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,287779,0x7ff785eac144,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,287787,0x7ff785eac204,12,BigIntConstructor
code-creation,Builtin,2,287795,0x7ff785eac224,12,BigIntAsUintN
code-creation,Builtin,2,287803,0x7ff785eac244,12,BigIntAsIntN
code-creation,Builtin,2,287811,0x7ff785eac264,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,287826,0x7ff785eac284,12,BigIntPrototypeToString
code-creation,Builtin,2,287834,0x7ff785eac2a4,12,BigIntPrototypeValueOf
code-creation,Builtin,2,287842,0x7ff785eac2c4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,287850,0x7ff785eac2e4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,287859,0x7ff785eac304,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,287867,0x7ff785eac324,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,287875,0x7ff785eac344,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,287883,0x7ff785eac364,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,287891,0x7ff785eac384,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,287899,0x7ff785eac3a4,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,287908,0x7ff785eac3c4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,287916,0x7ff785eac3e4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,287924,0x7ff785eac404,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,287932,0x7ff785eac424,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,287940,0x7ff785eac444,12,CallSitePrototypeGetThis
code-creation,Builtin,2,287948,0x7ff785eac464,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,287956,0x7ff785eac484,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,287964,0x7ff785eac4a4,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,287972,0x7ff785eac4c4,12,CallSitePrototypeIsEval
code-creation,Builtin,2,287980,0x7ff785eac4e4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,287988,0x7ff785eac504,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,287996,0x7ff785eac524,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,288004,0x7ff785eac544,12,CallSitePrototypeToString
code-creation,Builtin,2,288012,0x7ff785eac564,12,ConsoleDebug
code-creation,Builtin,2,288019,0x7ff785eac584,12,ConsoleError
code-creation,Builtin,2,288027,0x7ff785eac5a4,12,ConsoleInfo
code-creation,Builtin,2,288034,0x7ff785eac5c4,12,ConsoleLog
code-creation,Builtin,2,288042,0x7ff785eac5e4,12,ConsoleWarn
code-creation,Builtin,2,288049,0x7ff785eac604,12,ConsoleDir
code-creation,Builtin,2,288057,0x7ff785eac624,12,ConsoleDirXml
code-creation,Builtin,2,288064,0x7ff785eac644,12,ConsoleTable
code-creation,Builtin,2,288072,0x7ff785eac664,12,ConsoleTrace
code-creation,Builtin,2,288079,0x7ff785eac684,12,ConsoleGroup
code-creation,Builtin,2,288087,0x7ff785eac6a4,12,ConsoleGroupCollapsed
code-creation,Builtin,2,288094,0x7ff785eac6c4,12,ConsoleGroupEnd
code-creation,Builtin,2,288102,0x7ff785eac6e4,12,ConsoleClear
code-creation,Builtin,2,288109,0x7ff785eac704,12,ConsoleCount
code-creation,Builtin,2,288117,0x7ff785eac724,12,ConsoleCountReset
code-creation,Builtin,2,288125,0x7ff785eac744,12,ConsoleAssert
code-creation,Builtin,2,288132,0x7ff785eac764,12,ConsoleProfile
code-creation,Builtin,2,288139,0x7ff785eac784,12,ConsoleProfileEnd
code-creation,Builtin,2,288147,0x7ff785eac7a4,12,ConsoleTime
code-creation,Builtin,2,288155,0x7ff785eac7c4,12,ConsoleTimeLog
code-creation,Builtin,2,288162,0x7ff785eac7e4,12,ConsoleTimeEnd
code-creation,Builtin,2,288170,0x7ff785eac804,12,ConsoleTimeStamp
code-creation,Builtin,2,288177,0x7ff785eac824,12,ConsoleContext
code-creation,Builtin,2,288185,0x7ff785eac844,12,DataViewConstructor
code-creation,Builtin,2,288192,0x7ff785eac864,12,DateConstructor
code-creation,Builtin,2,288200,0x7ff785eac884,216,DatePrototypeGetDate
code-creation,Builtin,2,288208,0x7ff785eac964,216,DatePrototypeGetDay
code-creation,Builtin,2,288216,0x7ff785eaca44,216,DatePrototypeGetFullYear
code-creation,Builtin,2,288224,0x7ff785eacb24,216,DatePrototypeGetHours
code-creation,Builtin,2,288234,0x7ff785eacc04,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,288243,0x7ff785eacce4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,288251,0x7ff785eacdc4,216,DatePrototypeGetMonth
code-creation,Builtin,2,288260,0x7ff785eacea4,216,DatePrototypeGetSeconds
code-creation,Builtin,2,288268,0x7ff785eacf84,124,DatePrototypeGetTime
code-creation,Builtin,2,288276,0x7ff785ead004,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,288284,0x7ff785ead0e4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,288292,0x7ff785ead1c4,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,288300,0x7ff785ead2a4,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,288308,0x7ff785ead384,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,288316,0x7ff785ead464,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,288324,0x7ff785ead544,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,288332,0x7ff785ead624,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,288340,0x7ff785ead704,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,288348,0x7ff785ead7e4,124,DatePrototypeValueOf
code-creation,Builtin,2,288356,0x7ff785ead864,352,DatePrototypeToPrimitive
code-creation,Builtin,2,288364,0x7ff785ead9e4,12,DatePrototypeGetYear
code-creation,Builtin,2,288372,0x7ff785eada04,12,DatePrototypeSetYear
code-creation,Builtin,2,288380,0x7ff785eada24,12,DateNow
code-creation,Builtin,2,288387,0x7ff785eada44,12,DateParse
code-creation,Builtin,2,288395,0x7ff785eada64,12,DatePrototypeSetDate
code-creation,Builtin,2,288403,0x7ff785eada84,12,DatePrototypeSetFullYear
code-creation,Builtin,2,288410,0x7ff785eadaa4,12,DatePrototypeSetHours
code-creation,Builtin,2,288418,0x7ff785eadac4,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,288426,0x7ff785eadae4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,288434,0x7ff785eadb04,12,DatePrototypeSetMonth
code-creation,Builtin,2,288442,0x7ff785eadb24,12,DatePrototypeSetSeconds
code-creation,Builtin,2,288450,0x7ff785eadb44,12,DatePrototypeSetTime
code-creation,Builtin,2,288457,0x7ff785eadb64,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,288465,0x7ff785eadb84,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,288473,0x7ff785eadba4,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,288481,0x7ff785eadbc4,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,288489,0x7ff785eadbe4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,288497,0x7ff785eadc04,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,288505,0x7ff785eadc24,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,288513,0x7ff785eadc44,12,DatePrototypeToDateString
code-creation,Builtin,2,288521,0x7ff785eadc64,12,DatePrototypeToISOString
code-creation,Builtin,2,288529,0x7ff785eadc84,12,DatePrototypeToUTCString
code-creation,Builtin,2,288537,0x7ff785eadca4,12,DatePrototypeToString
code-creation,Builtin,2,288545,0x7ff785eadcc4,12,DatePrototypeToTimeString
code-creation,Builtin,2,288553,0x7ff785eadce4,12,DatePrototypeToJson
code-creation,Builtin,2,288561,0x7ff785eadd04,12,DateUTC
code-creation,Builtin,2,288568,0x7ff785eadd24,12,ErrorConstructor
code-creation,Builtin,2,288576,0x7ff785eadd44,12,ErrorCaptureStackTrace
code-creation,Builtin,2,288583,0x7ff785eadd64,12,ErrorPrototypeToString
code-creation,Builtin,2,288591,0x7ff785eadd84,12,FunctionConstructor
code-creation,Builtin,2,288599,0x7ff785eadda4,68,FunctionPrototypeApply
code-creation,Builtin,2,288607,0x7ff785eade04,12,FunctionPrototypeBind
code-creation,Builtin,2,288615,0x7ff785eade24,32,FunctionPrototypeCall
code-creation,Builtin,2,288623,0x7ff785eade64,12,FunctionPrototypeToString
code-creation,Builtin,2,288631,0x7ff785eade84,192,CreateIterResultObject
code-creation,Builtin,2,288639,0x7ff785eadf64,788,CreateGeneratorObject
code-creation,Builtin,2,288647,0x7ff785eae284,12,GeneratorFunctionConstructor
code-creation,Builtin,2,288655,0x7ff785eae2a4,412,GeneratorPrototypeNext
code-creation,Builtin,2,288663,0x7ff785eae444,420,GeneratorPrototypeReturn
code-creation,Builtin,2,288671,0x7ff785eae604,424,GeneratorPrototypeThrow
code-creation,Builtin,2,288681,0x7ff785eae7c4,12,AsyncFunctionConstructor
code-creation,Builtin,2,288690,0x7ff785eae7e4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,288699,0x7ff785eae964,88,ResumeGeneratorBaseline
code-creation,Builtin,2,288706,0x7ff785eae9c4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,288715,0x7ff785eaea04,12,GlobalDecodeURI
code-creation,Builtin,2,288723,0x7ff785eaea24,12,GlobalDecodeURIComponent
code-creation,Builtin,2,288731,0x7ff785eaea44,12,GlobalEncodeURI
code-creation,Builtin,2,288739,0x7ff785eaea64,12,GlobalEncodeURIComponent
code-creation,Builtin,2,288747,0x7ff785eaea84,12,GlobalEscape
code-creation,Builtin,2,288755,0x7ff785eaeaa4,12,GlobalUnescape
code-creation,Builtin,2,288762,0x7ff785eaeac4,12,GlobalEval
code-creation,Builtin,2,288770,0x7ff785eaeae4,132,GlobalIsFinite
code-creation,Builtin,2,288778,0x7ff785eaeb84,124,GlobalIsNaN
code-creation,Builtin,2,288785,0x7ff785eaec04,12,JsonParse
code-creation,Builtin,2,288793,0x7ff785eaec24,12,JsonStringify
code-creation,Builtin,2,288801,0x7ff785eaec44,4608,LoadIC
code-creation,Builtin,2,288809,0x7ff785eafe64,4296,LoadIC_Megamorphic
code-creation,Builtin,2,288821,0x7ff785eb0f44,4520,LoadIC_Noninlined
code-creation,Builtin,2,288829,0x7ff785eb2104,44,LoadICTrampoline
code-creation,Builtin,2,288836,0x7ff785eb2144,24,LoadICBaseline
code-creation,Builtin,2,288844,0x7ff785eb2164,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,288852,0x7ff785eb21a4,7376,LoadSuperIC
code-creation,Builtin,2,288860,0x7ff785eb3e84,24,LoadSuperICBaseline
code-creation,Builtin,2,288868,0x7ff785eb3ea4,8148,KeyedLoadIC
code-creation,Builtin,2,288875,0x7ff785eb5e84,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,288883,0x7ff785eb91c4,44,KeyedLoadICTrampoline
code-creation,Builtin,2,288891,0x7ff785eb9204,24,KeyedLoadICBaseline
code-creation,Builtin,2,288899,0x7ff785eb9224,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,288907,0x7ff785eb9264,5104,StoreGlobalIC
code-creation,Builtin,2,288914,0x7ff785eba664,44,StoreGlobalICTrampoline
code-creation,Builtin,2,288922,0x7ff785eba6a4,24,StoreGlobalICBaseline
code-creation,Builtin,2,288930,0x7ff785eba6c4,5340,StoreIC
code-creation,Builtin,2,288937,0x7ff785ebbba4,44,StoreICTrampoline
code-creation,Builtin,2,288945,0x7ff785ebbbe4,24,StoreICBaseline
code-creation,Builtin,2,288953,0x7ff785ebbc04,5780,KeyedStoreIC
code-creation,Builtin,2,288960,0x7ff785ebd2a4,44,KeyedStoreICTrampoline
code-creation,Builtin,2,288968,0x7ff785ebd2e4,24,KeyedStoreICBaseline
code-creation,Builtin,2,288976,0x7ff785ebd304,404,StoreInArrayLiteralIC
code-creation,Builtin,2,288984,0x7ff785ebd4a4,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,288992,0x7ff785ebd4c4,140,LookupContextBaseline
code-creation,Builtin,2,289000,0x7ff785ebd564,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,289009,0x7ff785ebd604,3244,LoadGlobalIC
code-creation,Builtin,2,289016,0x7ff785ebe2c4,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,289025,0x7ff785ebef64,44,LoadGlobalICTrampoline
code-creation,Builtin,2,289033,0x7ff785ebefa4,24,LoadGlobalICBaseline
code-creation,Builtin,2,289040,0x7ff785ebefc4,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,289049,0x7ff785ebf004,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,289057,0x7ff785ebf024,140,LookupGlobalICBaseline
code-creation,Builtin,2,289064,0x7ff785ebf0c4,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,289073,0x7ff785ebf164,2064,CloneObjectIC
code-creation,Builtin,2,289080,0x7ff785ebf984,24,CloneObjectICBaseline
code-creation,Builtin,2,289088,0x7ff785ebf9a4,1988,CloneObjectIC_Slow
code-creation,Builtin,2,289096,0x7ff785ec0184,2756,KeyedHasIC
code-creation,Builtin,2,289103,0x7ff785ec0c64,24,KeyedHasICBaseline
code-creation,Builtin,2,289111,0x7ff785ec0c84,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,289119,0x7ff785ec16e4,1436,IterableToList
code-creation,Builtin,2,289127,0x7ff785ec1c84,1240,IterableToFixedArray
code-creation,Builtin,2,289135,0x7ff785ec2164,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,289203,0x7ff785ec2464,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,289217,0x7ff785ec24a4,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,289225,0x7ff785ec2524,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,289233,0x7ff785ec2904,1616,StringListFromIterable
code-creation,Builtin,2,289241,0x7ff785ec2f64,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,289249,0x7ff785ec3444,4156,MapConstructor
code-creation,Builtin,2,289256,0x7ff785ec4484,1996,MapPrototypeSet
code-creation,Builtin,2,289264,0x7ff785ec4c64,1524,MapPrototypeDelete
code-creation,Builtin,2,289272,0x7ff785ec5264,204,MapPrototypeGet
code-creation,Builtin,2,289279,0x7ff785ec5344,164,MapPrototypeHas
code-creation,Builtin,2,289287,0x7ff785ec5404,12,MapPrototypeClear
code-creation,Builtin,2,289295,0x7ff785ec5424,284,MapPrototypeEntries
code-creation,Builtin,2,289302,0x7ff785ec5544,144,MapPrototypeGetSize
code-creation,Builtin,2,289310,0x7ff785ec55e4,492,MapPrototypeForEach
code-creation,Builtin,2,289318,0x7ff785ec57e4,284,MapPrototypeKeys
code-creation,Builtin,2,289325,0x7ff785ec5904,284,MapPrototypeValues
code-creation,Builtin,2,289333,0x7ff785ec5a24,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,289341,0x7ff785ec5e44,1168,MapIteratorToList
code-creation,Builtin,2,289349,0x7ff785ec62e4,12,NumberPrototypeToExponential
code-creation,Builtin,2,289357,0x7ff785ec6304,12,NumberPrototypeToFixed
code-creation,Builtin,2,289364,0x7ff785ec6324,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,289372,0x7ff785ec6344,12,NumberPrototypeToPrecision
code-creation,Builtin,2,289380,0x7ff785ec6364,328,SameValue
code-creation,Builtin,2,289387,0x7ff785ec64c4,204,SameValueNumbersOnly
code-creation,Builtin,2,289395,0x7ff785ec65a4,792,Add_Baseline
code-creation,Builtin,2,289403,0x7ff785ec68c4,828,Subtract_Baseline
code-creation,Builtin,2,289410,0x7ff785ec6c04,808,Multiply_Baseline
code-creation,Builtin,2,289418,0x7ff785ec6f44,832,Divide_Baseline
code-creation,Builtin,2,289425,0x7ff785ec72a4,764,Modulus_Baseline
code-creation,Builtin,2,289433,0x7ff785ec75a4,808,Exponentiate_Baseline
code-creation,Builtin,2,289441,0x7ff785ec78e4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,289448,0x7ff785ec7bc4,700,BitwiseOr_Baseline
code-creation,Builtin,2,289456,0x7ff785ec7e84,708,BitwiseXor_Baseline
code-creation,Builtin,2,289464,0x7ff785ec8164,720,ShiftLeft_Baseline
code-creation,Builtin,2,289471,0x7ff785ec8444,720,ShiftRight_Baseline
code-creation,Builtin,2,289479,0x7ff785ec8724,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,289487,0x7ff785ec8a84,720,Add_WithFeedback
code-creation,Builtin,2,289495,0x7ff785ec8d64,780,Subtract_WithFeedback
code-creation,Builtin,2,289502,0x7ff785ec9084,776,Multiply_WithFeedback
code-creation,Builtin,2,289510,0x7ff785ec93a4,804,Divide_WithFeedback
code-creation,Builtin,2,289518,0x7ff785ec96e4,724,Modulus_WithFeedback
code-creation,Builtin,2,289526,0x7ff785ec99c4,764,Exponentiate_WithFeedback
code-creation,Builtin,2,289534,0x7ff785ec9cc4,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,289541,0x7ff785ec9f84,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,289549,0x7ff785eca244,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,289557,0x7ff785eca504,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,289565,0x7ff785eca7c4,692,ShiftRight_WithFeedback
code-creation,Builtin,2,289573,0x7ff785ecaa84,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,289581,0x7ff785ecadc4,1696,Equal_Baseline
code-creation,Builtin,2,289588,0x7ff785ecb484,908,StrictEqual_Baseline
code-creation,Builtin,2,289596,0x7ff785ecb824,1264,LessThan_Baseline
code-creation,Builtin,2,289604,0x7ff785ecbd24,1264,GreaterThan_Baseline
code-creation,Builtin,2,289612,0x7ff785ecc224,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,289620,0x7ff785ecc724,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,289628,0x7ff785eccc24,1620,Equal_WithFeedback
code-creation,Builtin,2,289636,0x7ff785ecd284,940,StrictEqual_WithFeedback
code-creation,Builtin,2,289644,0x7ff785ecd644,1240,LessThan_WithFeedback
code-creation,Builtin,2,289653,0x7ff785ecdb24,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,289662,0x7ff785ece004,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,289670,0x7ff785ece4e4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,289678,0x7ff785ece9c4,332,BitwiseNot_Baseline
code-creation,Builtin,2,289686,0x7ff785eceb24,460,Decrement_Baseline
code-creation,Builtin,2,289693,0x7ff785eced04,464,Increment_Baseline
code-creation,Builtin,2,289701,0x7ff785eceee4,488,Negate_Baseline
code-creation,Builtin,2,289709,0x7ff785ecf0e4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,289717,0x7ff785ecf224,440,Decrement_WithFeedback
code-creation,Builtin,2,289725,0x7ff785ecf3e4,444,Increment_WithFeedback
code-creation,Builtin,2,289733,0x7ff785ecf5a4,472,Negate_WithFeedback
code-creation,Builtin,2,289741,0x7ff785ecf784,252,ObjectAssign
code-creation,Builtin,2,289748,0x7ff785ecf884,864,ObjectCreate
code-creation,Builtin,2,289756,0x7ff785ecfc04,12,ObjectDefineGetter
code-creation,Builtin,2,289763,0x7ff785ecfc24,12,ObjectDefineProperties
code-creation,Builtin,2,289771,0x7ff785ecfc44,12,ObjectDefineProperty
code-creation,Builtin,2,289779,0x7ff785ecfc64,12,ObjectDefineSetter
code-creation,Builtin,2,289787,0x7ff785ecfc84,1516,ObjectEntries
code-creation,Builtin,2,289794,0x7ff785ed0284,12,ObjectFreeze
code-creation,Builtin,2,289802,0x7ff785ed02a4,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,289810,0x7ff785ed18a4,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,289825,0x7ff785ed18c4,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,289833,0x7ff785ed1b24,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,289841,0x7ff785ed1b44,164,ObjectHasOwn
code-creation,Builtin,2,289849,0x7ff785ed1c04,388,ObjectIs
code-creation,Builtin,2,289856,0x7ff785ed1da4,12,ObjectIsFrozen
code-creation,Builtin,2,289864,0x7ff785ed1dc4,12,ObjectIsSealed
code-creation,Builtin,2,289871,0x7ff785ed1de4,536,ObjectKeys
code-creation,Builtin,2,289879,0x7ff785ed2004,12,ObjectLookupGetter
code-creation,Builtin,2,289886,0x7ff785ed2024,12,ObjectLookupSetter
code-creation,Builtin,2,289894,0x7ff785ed2044,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,289902,0x7ff785ed2944,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,289910,0x7ff785ed2a24,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,289919,0x7ff785ed2a44,12,ObjectPrototypeGetProto
code-creation,Builtin,2,289927,0x7ff785ed2a64,12,ObjectPrototypeSetProto
code-creation,Builtin,2,289934,0x7ff785ed2a84,12,ObjectSeal
code-creation,Builtin,2,289942,0x7ff785ed2aa4,1108,ObjectToString
code-creation,Builtin,2,289949,0x7ff785ed2f04,1284,ObjectValues
code-creation,Builtin,2,289957,0x7ff785ed3424,280,OrdinaryHasInstance
code-creation,Builtin,2,289965,0x7ff785ed3544,344,InstanceOf
code-creation,Builtin,2,289972,0x7ff785ed36a4,632,InstanceOf_WithFeedback
code-creation,Builtin,2,289980,0x7ff785ed3924,648,InstanceOf_Baseline
code-creation,Builtin,2,289988,0x7ff785ed3bc4,268,ForInEnumerate
code-creation,Builtin,2,289996,0x7ff785ed3ce4,148,ForInPrepare
code-creation,Builtin,2,290003,0x7ff785ed3d84,2584,ForInFilter
code-creation,Builtin,2,290011,0x7ff785ed47a4,52,ReflectApply
code-creation,Builtin,2,290019,0x7ff785ed47e4,60,ReflectConstruct
code-creation,Builtin,2,290027,0x7ff785ed4824,12,ReflectDefineProperty
code-creation,Builtin,2,290035,0x7ff785ed4844,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,290043,0x7ff785ed4864,12,ReflectOwnKeys
code-creation,Builtin,2,290051,0x7ff785ed4884,12,ReflectSet
code-creation,Builtin,2,290059,0x7ff785ed48a4,12,RegExpCapture1Getter
code-creation,Builtin,2,290067,0x7ff785ed48c4,12,RegExpCapture2Getter
code-creation,Builtin,2,290075,0x7ff785ed48e4,12,RegExpCapture3Getter
code-creation,Builtin,2,290082,0x7ff785ed4904,12,RegExpCapture4Getter
code-creation,Builtin,2,290090,0x7ff785ed4924,12,RegExpCapture5Getter
code-creation,Builtin,2,290098,0x7ff785ed4944,12,RegExpCapture6Getter
code-creation,Builtin,2,290105,0x7ff785ed4964,12,RegExpCapture7Getter
code-creation,Builtin,2,290113,0x7ff785ed4984,12,RegExpCapture8Getter
code-creation,Builtin,2,290122,0x7ff785ed49a4,12,RegExpCapture9Getter
code-creation,Builtin,2,290131,0x7ff785ed49c4,2212,RegExpConstructor
code-creation,Builtin,2,290139,0x7ff785ed5284,12,RegExpInputGetter
code-creation,Builtin,2,290147,0x7ff785ed52a4,12,RegExpInputSetter
code-creation,Builtin,2,290154,0x7ff785ed52c4,12,RegExpLastMatchGetter
code-creation,Builtin,2,290162,0x7ff785ed52e4,12,RegExpLastParenGetter
code-creation,Builtin,2,290170,0x7ff785ed5304,12,RegExpLeftContextGetter
code-creation,Builtin,2,290178,0x7ff785ed5324,908,RegExpPrototypeCompile
code-creation,Builtin,2,290185,0x7ff785ed56c4,12,RegExpPrototypeToString
code-creation,Builtin,2,290194,0x7ff785ed56e4,12,RegExpRightContextGetter
code-creation,Builtin,2,290202,0x7ff785ed5704,252,RegExpExecAtom
code-creation,Builtin,2,290209,0x7ff785ed5804,1040,RegExpExecInternal
code-creation,Builtin,2,290217,0x7ff785ed5c24,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,290225,0x7ff785ed5c44,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,290233,0x7ff785ed5c64,2684,SetConstructor
code-creation,Builtin,2,290241,0x7ff785ed66e4,1284,SetPrototypeHas
code-creation,Builtin,2,290249,0x7ff785ed6c04,1736,SetPrototypeAdd
code-creation,Builtin,2,290256,0x7ff785ed72e4,1476,SetPrototypeDelete
code-creation,Builtin,2,290264,0x7ff785ed78c4,12,SetPrototypeClear
code-creation,Builtin,2,290272,0x7ff785ed78e4,284,SetPrototypeEntries
code-creation,Builtin,2,290279,0x7ff785ed7a04,144,SetPrototypeGetSize
code-creation,Builtin,2,290287,0x7ff785ed7aa4,444,SetPrototypeForEach
code-creation,Builtin,2,290295,0x7ff785ed7c64,284,SetPrototypeValues
code-creation,Builtin,2,290302,0x7ff785ed7d84,988,SetIteratorPrototypeNext
code-creation,Builtin,2,290310,0x7ff785ed8164,1112,SetOrSetIteratorToList
code-creation,Builtin,2,290318,0x7ff785ed85c4,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,290326,0x7ff785ed85e4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,290334,0x7ff785ed8604,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,290342,0x7ff785ed8624,1280,AtomicsLoad
code-creation,Builtin,2,290350,0x7ff785ed8b44,1008,AtomicsStore
code-creation,Builtin,2,290357,0x7ff785ed8f44,1704,AtomicsExchange
code-creation,Builtin,2,290365,0x7ff785ed9604,2092,AtomicsCompareExchange
code-creation,Builtin,2,290373,0x7ff785ed9e44,1804,AtomicsAdd
code-creation,Builtin,2,290380,0x7ff785eda564,1804,AtomicsSub
code-creation,Builtin,2,290388,0x7ff785edac84,1804,AtomicsAnd
code-creation,Builtin,2,290395,0x7ff785edb3a4,1804,AtomicsOr
code-creation,Builtin,2,290402,0x7ff785edbac4,1804,AtomicsXor
code-creation,Builtin,2,290410,0x7ff785edc1e4,12,AtomicsNotify
code-creation,Builtin,2,290417,0x7ff785edc204,12,AtomicsIsLockFree
code-creation,Builtin,2,290425,0x7ff785edc224,12,AtomicsWait
code-creation,Builtin,2,290432,0x7ff785edc244,12,AtomicsWaitAsync
code-creation,Builtin,2,290440,0x7ff785edc264,12,StringFromCodePoint
code-creation,Builtin,2,290448,0x7ff785edc284,1428,StringFromCharCode
code-creation,Builtin,2,290455,0x7ff785edc824,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,290463,0x7ff785edc844,4360,StringPrototypeMatchAll
code-creation,Builtin,2,290471,0x7ff785edd964,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,290479,0x7ff785edd984,1228,StringPrototypeReplace
code-creation,Builtin,2,290486,0x7ff785edde64,2900,StringPrototypeSplit
code-creation,Builtin,2,290494,0x7ff785ede9c4,12,StringRaw
code-creation,Builtin,2,290501,0x7ff785ede9e4,12,SymbolConstructor
code-creation,Builtin,2,290509,0x7ff785edea04,12,SymbolFor
code-creation,Builtin,2,290517,0x7ff785edea24,12,SymbolKeyFor
code-creation,Builtin,2,290524,0x7ff785edea44,88,TypedArrayBaseConstructor
code-creation,Builtin,2,290532,0x7ff785edeaa4,256,TypedArrayConstructor
code-creation,Builtin,2,290540,0x7ff785edebc4,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,290548,0x7ff785edebe4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,290556,0x7ff785edef64,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,290564,0x7ff785edf0e4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,290572,0x7ff785edf344,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,290582,0x7ff785edf364,12,TypedArrayPrototypeFill
code-creation,Builtin,2,290590,0x7ff785edf384,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,290598,0x7ff785edf3a4,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,290606,0x7ff785edf3c4,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,290614,0x7ff785edf3e4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,290623,0x7ff785edf404,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,290632,0x7ff785edf544,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,290640,0x7ff785ee1f04,792,GenericJSToWasmWrapper
code-creation,Builtin,2,290648,0x7ff785ee2224,148,WasmCompileLazy
code-creation,Builtin,2,290655,0x7ff785ee22c4,168,WasmDebugBreak
code-creation,Builtin,2,290663,0x7ff785ee2384,16,WasmOnStackReplace
code-creation,Builtin,2,290671,0x7ff785ee23a4,140,WasmFloat32ToNumber
code-creation,Builtin,2,290679,0x7ff785ee2444,152,WasmFloat64ToNumber
code-creation,Builtin,2,290687,0x7ff785ee24e4,4,WasmI32AtomicWait32
code-creation,Builtin,2,290695,0x7ff785ee2504,4,WasmI64AtomicWait32
code-creation,Builtin,2,290702,0x7ff785ee2524,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,290711,0x7ff785ee2544,4320,WeakMapConstructor
code-creation,Builtin,2,290727,0x7ff785ee3644,196,WeakMapLookupHashIndex
code-creation,Builtin,2,290736,0x7ff785ee3724,220,WeakMapGet
code-creation,Builtin,2,290744,0x7ff785ee3804,176,WeakMapPrototypeHas
code-creation,Builtin,2,290752,0x7ff785ee38c4,204,WeakMapPrototypeSet
code-creation,Builtin,2,290760,0x7ff785ee39a4,144,WeakMapPrototypeDelete
code-creation,Builtin,2,290768,0x7ff785ee3a44,2876,WeakSetConstructor
code-creation,Builtin,2,290777,0x7ff785ee4584,176,WeakSetPrototypeHas
code-creation,Builtin,2,290785,0x7ff785ee4644,204,WeakSetPrototypeAdd
code-creation,Builtin,2,290793,0x7ff785ee4724,144,WeakSetPrototypeDelete
code-creation,Builtin,2,290802,0x7ff785ee47c4,372,WeakCollectionDelete
code-creation,Builtin,2,290810,0x7ff785ee4944,764,WeakCollectionSet
code-creation,Builtin,2,290826,0x7ff785ee4c44,296,AsyncGeneratorResolve
code-creation,Builtin,2,290835,0x7ff785ee4d84,100,AsyncGeneratorReject
code-creation,Builtin,2,290843,0x7ff785ee4e04,2760,AsyncGeneratorYield
code-creation,Builtin,2,290851,0x7ff785ee58e4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,290860,0x7ff785ee6424,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,290868,0x7ff785ee6564,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,290877,0x7ff785ee6584,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,290893,0x7ff785ee6984,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,290911,0x7ff785ee6da4,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,290919,0x7ff785ee71c4,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,290928,0x7ff785ee7c84,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,290937,0x7ff785ee8744,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,290945,0x7ff785ee87c4,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,290954,0x7ff785ee8864,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,290963,0x7ff785ee88e4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,290972,0x7ff785ee8964,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,290981,0x7ff785ee89e4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,290990,0x7ff785ee8a84,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,290999,0x7ff785ee90c4,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,291007,0x7ff785ee9784,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,291016,0x7ff785ee9e44,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,291025,0x7ff785ee9ec4,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,291034,0x7ff785ee9fa4,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,291043,0x7ff785eea084,200,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,291053,0x7ff785eea164,392,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,291064,0x7ff785eea304,392,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,291074,0x7ff785eea4a4,232,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,291084,0x7ff785eea5a4,232,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,291093,0x7ff785eea6a4,216,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,291103,0x7ff785eea784,408,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,291112,0x7ff785eea924,408,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,291121,0x7ff785eeaac4,4,DirectCEntry
code-creation,Builtin,2,291129,0x7ff785eeaae4,1096,StringAdd_CheckNone
code-creation,Builtin,2,291137,0x7ff785eeaf44,2484,SubString
code-creation,Builtin,2,291145,0x7ff785eeb904,16,StackCheck
code-creation,Builtin,2,291153,0x7ff785eeb924,84,DoubleToI
code-creation,Builtin,2,291161,0x7ff785eeb984,2236,GetProperty
code-creation,Builtin,2,291169,0x7ff785eec244,2308,GetPropertyWithReceiver
code-creation,Builtin,2,291178,0x7ff785eecb64,16004,SetProperty
code-creation,Builtin,2,291186,0x7ff785ef0a04,13480,SetPropertyInLiteral
code-creation,Builtin,2,291194,0x7ff785ef3ec4,8,MemCopyUint8Uint8
code-creation,Builtin,2,291202,0x7ff785ef3ee4,8,MemMove
code-creation,Builtin,2,291210,0x7ff785ef3f04,12,IsTraceCategoryEnabled
code-creation,Builtin,2,291218,0x7ff785ef3f24,12,Trace
code-creation,Builtin,2,291225,0x7ff785ef3f44,12,FinalizationRegistryUnregister
code-creation,Builtin,2,291234,0x7ff785ef3f64,416,AsyncModuleEvaluate
code-creation,Builtin,2,291242,0x7ff785ef4124,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,291250,0x7ff785ef4144,12,CallAsyncModuleRejected
code-creation,Builtin,2,291258,0x7ff785ef4164,260,AggregateErrorConstructor
code-creation,Builtin,2,291267,0x7ff785ef4284,856,ArrayPrototypeAt
code-creation,Builtin,2,291275,0x7ff785ef45e4,656,ArrayPrototypeConcat
code-creation,Builtin,2,291284,0x7ff785ef4884,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,291292,0x7ff785ef5f64,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,291301,0x7ff785ef6044,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,291309,0x7ff785ef62c4,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,291318,0x7ff785ef6fc4,1464,ArrayEvery
code-creation,Builtin,2,291326,0x7ff785ef7584,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,291334,0x7ff785ef76a4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,291343,0x7ff785ef7a84,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,291352,0x7ff785ef8884,4260,ArrayFilter
code-creation,Builtin,2,291359,0x7ff785ef9944,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,291368,0x7ff785ef9a24,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,291377,0x7ff785ef9a64,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,291386,0x7ff785ef9ba4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,291394,0x7ff785ef9dc4,1460,ArrayPrototypeFind
code-creation,Builtin,2,291402,0x7ff785efa384,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,291411,0x7ff785efa464,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,291420,0x7ff785efa4a4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,291429,0x7ff785efa5e4,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,291438,0x7ff785efa804,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,291446,0x7ff785efadc4,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,291455,0x7ff785efafa4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,291463,0x7ff785efb664,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,291472,0x7ff785efb844,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,291480,0x7ff785efbf04,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,291489,0x7ff785efbfe4,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,291500,0x7ff785efc0c4,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,291542,0x7ff785efcd24,1328,ArrayForEach
code-creation,Builtin,2,291555,0x7ff785efd264,3572,ArrayFrom
code-creation,Builtin,2,291563,0x7ff785efe064,148,ArrayIsArray
code-creation,Builtin,2,291571,0x7ff785efe104,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,291580,0x7ff785efe2a4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,291589,0x7ff785efe2e4,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,291598,0x7ff785efe384,312,ConvertToLocaleString
code-creation,Builtin,2,291606,0x7ff785efe4c4,752,JoinStackPush
code-creation,Builtin,2,291614,0x7ff785efe7c4,272,JoinStackPop
code-creation,Builtin,2,291622,0x7ff785efe8e4,6628,ArrayPrototypeJoin
code-creation,Builtin,2,291630,0x7ff785f002e4,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,291639,0x7ff785f017e4,236,ArrayPrototypeToString
code-creation,Builtin,2,291647,0x7ff785f018e4,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,291655,0x7ff785f03024,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,291664,0x7ff785f04244,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,291672,0x7ff785f05144,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,291681,0x7ff785f05264,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,291690,0x7ff785f05364,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,291698,0x7ff785f05584,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,291707,0x7ff785f06204,3912,ArrayMap
code-creation,Builtin,2,291714,0x7ff785f07164,1000,ArrayOf
code-creation,Builtin,2,291722,0x7ff785f07564,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,291731,0x7ff785f07724,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,291740,0x7ff785f07804,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,291749,0x7ff785f078e4,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,291757,0x7ff785f08584,2000,ArrayReduceRight
code-creation,Builtin,2,291765,0x7ff785f08d64,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,291774,0x7ff785f08e24,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,291783,0x7ff785f08f04,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,291792,0x7ff785f08fe4,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,291801,0x7ff785f09ca4,1604,ArrayReduce
code-creation,Builtin,2,291809,0x7ff785f0a304,3216,ArrayPrototypeReverse
code-creation,Builtin,2,291818,0x7ff785f0afa4,3592,ArrayPrototypeShift
code-creation,Builtin,2,291827,0x7ff785f0bdc4,5220,ArrayPrototypeSlice
code-creation,Builtin,2,291835,0x7ff785f0d244,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,291843,0x7ff785f0d324,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,291852,0x7ff785f0d584,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,291861,0x7ff785f0e284,1448,ArraySome
code-creation,Builtin,2,291868,0x7ff785f0e844,14216,ArrayPrototypeSplice
code-creation,Builtin,2,291877,0x7ff785f11fe4,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,291885,0x7ff785f12cc4,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,291894,0x7ff785f12e24,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,291902,0x7ff785f12f84,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,291911,0x7ff785f13064,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,291928,0x7ff785f131c4,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,291937,0x7ff785f132a4,96,ArrayBufferIsView
code-creation,Builtin,2,291953,0x7ff785f13324,396,ToInteger
code-creation,Builtin,2,291961,0x7ff785f134c4,3084,FastCreateDataProperty
code-creation,Builtin,2,291969,0x7ff785f140e4,676,CheckNumberInRange
code-creation,Builtin,2,291977,0x7ff785f143a4,584,CheckSameObject
code-creation,Builtin,2,291985,0x7ff785f14604,904,BooleanConstructor
code-creation,Builtin,2,291993,0x7ff785f149a4,164,BooleanPrototypeToString
code-creation,Builtin,2,292001,0x7ff785f14a64,156,BooleanPrototypeValueOf
code-creation,Builtin,2,292013,0x7ff785f14b04,1184,BigIntAddNoThrow
code-creation,Builtin,2,292022,0x7ff785f14fc4,1280,BigIntAdd
code-creation,Builtin,2,292030,0x7ff785f154e4,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,292039,0x7ff785f159a4,1280,BigIntSubtract
code-creation,Builtin,2,292047,0x7ff785f15ec4,284,BigIntUnaryMinus
code-creation,Builtin,2,292055,0x7ff785f15fe4,1360,ToString
code-creation,Builtin,2,292063,0x7ff785f16544,156,StringPrototypeToString
code-creation,Builtin,2,292071,0x7ff785f165e4,156,StringPrototypeValueOf
code-creation,Builtin,2,292080,0x7ff785f16684,2480,StringToList
code-creation,Builtin,2,292088,0x7ff785f17044,1012,StringPrototypeCharAt
code-creation,Builtin,2,292096,0x7ff785f17444,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,292104,0x7ff785f17704,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,292112,0x7ff785f17c24,400,StringPrototypeConcat
code-creation,Builtin,2,292121,0x7ff785f17dc4,992,StringConstructor
code-creation,Builtin,2,292129,0x7ff785f181c4,1436,StringAddConvertLeft
code-creation,Builtin,2,292137,0x7ff785f18764,1464,StringAddConvertRight
code-creation,Builtin,2,292145,0x7ff785f18d24,816,StringCharAt
code-creation,Builtin,2,292153,0x7ff785f19064,16,FastNewClosureBaseline
code-creation,Builtin,2,292161,0x7ff785f19084,196,FastNewFunctionContextEval
code-creation,Builtin,2,292169,0x7ff785f19164,196,FastNewFunctionContextFunction
code-creation,Builtin,2,292178,0x7ff785f19244,248,CreateRegExpLiteral
code-creation,Builtin,2,292186,0x7ff785f19344,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,292194,0x7ff785f19784,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,292202,0x7ff785f19984,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,292211,0x7ff785f1a064,384,ObjectConstructor
code-creation,Builtin,2,292219,0x7ff785f1a204,176,CreateEmptyLiteralObject
code-creation,Builtin,2,292227,0x7ff785f1a2c4,536,NumberConstructor
code-creation,Builtin,2,292235,0x7ff785f1a4e4,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,292244,0x7ff785f1a544,64,StringToNumber
code-creation,Builtin,2,292252,0x7ff785f1a5a4,184,NonNumberToNumber
code-creation,Builtin,2,292260,0x7ff785f1a664,240,NonNumberToNumeric
code-creation,Builtin,2,292268,0x7ff785f1a764,36,ToNumeric
code-creation,Builtin,2,292276,0x7ff785f1a7a4,1184,NumberToString
code-creation,Builtin,2,292284,0x7ff785f1ac64,92,ToBoolean
code-creation,Builtin,2,292291,0x7ff785f1acc4,96,ToBooleanForBaselineJump
code-creation,Builtin,2,292300,0x7ff785f1ad44,728,ToLength
code-creation,Builtin,2,292307,0x7ff785f1b024,1312,ToName
code-creation,Builtin,2,292315,0x7ff785f1b564,756,ToObject
code-creation,Builtin,2,292323,0x7ff785f1b864,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,292332,0x7ff785f1b944,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,292340,0x7ff785f1ba24,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,292348,0x7ff785f1bb04,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,292357,0x7ff785f1bc44,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,292365,0x7ff785f1bd84,216,FastConsoleAssert
code-creation,Builtin,2,292373,0x7ff785f1be64,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,292382,0x7ff785f1bf24,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,292390,0x7ff785f1c084,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,292398,0x7ff785f1c1e4,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,292407,0x7ff785f1c424,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,292415,0x7ff785f1c664,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,292424,0x7ff785f1c904,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,292432,0x7ff785f1cba4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,292440,0x7ff785f1cee4,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,292449,0x7ff785f1d1a4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,292457,0x7ff785f1d504,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,292466,0x7ff785f1d8a4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,292476,0x7ff785f1dc84,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,292485,0x7ff785f1e084,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,292494,0x7ff785f1e444,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,292502,0x7ff785f1e804,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,292510,0x7ff785f1ec24,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,292519,0x7ff785f1f044,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,292535,0x7ff785f1f484,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,292543,0x7ff785f1f8c4,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,292551,0x7ff785f1fce4,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,292559,0x7ff785f20144,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,292567,0x7ff785f20504,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,292575,0x7ff785f208c4,828,FinalizationRegistryConstructor
code-creation,Builtin,2,292583,0x7ff785f20c04,1152,FinalizationRegistryRegister
code-creation,Builtin,2,292591,0x7ff785f210a4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,292599,0x7ff785f21344,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,292607,0x7ff785f214a4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,292615,0x7ff785f21844,88,IncBlockCounter
code-creation,Builtin,2,292623,0x7ff785f218a4,228,GetTemplateObject
code-creation,Builtin,2,292630,0x7ff785f219a4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,292639,0x7ff785f219c4,92,ForInNext
code-creation,Builtin,2,292646,0x7ff785f21a24,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,292654,0x7ff785f21ac4,116,GetIteratorWithFeedback
code-creation,Builtin,2,292662,0x7ff785f21b44,100,GetIteratorBaseline
code-creation,Builtin,2,292670,0x7ff785f21bc4,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,292678,0x7ff785f21ce4,1084,CallIteratorWithFeedback
code-creation,Builtin,2,292686,0x7ff785f22124,288,MathAbs
code-creation,Builtin,2,292693,0x7ff785f22264,428,MathCeil
code-creation,Builtin,2,292701,0x7ff785f22424,432,MathFloor
code-creation,Builtin,2,292708,0x7ff785f225e4,488,MathRound
code-creation,Builtin,2,292716,0x7ff785f227e4,428,MathTrunc
code-creation,Builtin,2,292723,0x7ff785f229a4,368,MathPow
code-creation,Builtin,2,292730,0x7ff785f22b24,396,MathMax
code-creation,Builtin,2,292738,0x7ff785f22cc4,404,MathMin
code-creation,Builtin,2,292745,0x7ff785f22e64,320,MathAcos
code-creation,Builtin,2,292752,0x7ff785f22fc4,320,MathAcosh
code-creation,Builtin,2,292760,0x7ff785f23124,320,MathAsin
code-creation,Builtin,2,292767,0x7ff785f23284,320,MathAsinh
code-creation,Builtin,2,292775,0x7ff785f233e4,320,MathAtan
code-creation,Builtin,2,292782,0x7ff785f23544,416,MathAtan2
code-creation,Builtin,2,292790,0x7ff785f23704,320,MathAtanh
code-creation,Builtin,2,292797,0x7ff785f23864,320,MathCbrt
code-creation,Builtin,2,292805,0x7ff785f239c4,168,MathClz32
code-creation,Builtin,2,292812,0x7ff785f23a84,320,MathCos
code-creation,Builtin,2,292821,0x7ff785f23be4,320,MathCosh
code-creation,Builtin,2,292829,0x7ff785f23d44,320,MathExp
code-creation,Builtin,2,292836,0x7ff785f23ea4,320,MathExpm1
tick,0x7ff8278cd1c4,292872,0,0x0,6
code-creation,Builtin,2,292896,0x7ff785f24004,272,MathFround
code-creation,Builtin,2,292916,0x7ff785f24124,304,MathImul
code-creation,Builtin,2,292924,0x7ff785f24264,320,MathLog
code-creation,Builtin,2,292932,0x7ff785f243c4,320,MathLog1p
code-creation,Builtin,2,292940,0x7ff785f24524,320,MathLog10
code-creation,Builtin,2,292947,0x7ff785f24684,320,MathLog2
code-creation,Builtin,2,292955,0x7ff785f247e4,320,MathSin
code-creation,Builtin,2,292962,0x7ff785f24944,180,MathSign
code-creation,Builtin,2,292970,0x7ff785f24a04,320,MathSinh
code-creation,Builtin,2,292977,0x7ff785f24b64,268,MathSqrt
code-creation,Builtin,2,292985,0x7ff785f24c84,320,MathTan
code-creation,Builtin,2,292992,0x7ff785f24de4,320,MathTanh
code-creation,Builtin,2,293000,0x7ff785f24f44,1060,MathHypot
code-creation,Builtin,2,293007,0x7ff785f25384,332,MathRandom
code-creation,Builtin,2,293014,0x7ff785f254e4,2956,NumberPrototypeToString
code-creation,Builtin,2,293084,0x7ff785f26084,136,NumberIsFinite
code-creation,Builtin,2,293096,0x7ff785f26124,340,NumberIsInteger
code-creation,Builtin,2,293104,0x7ff785f26284,116,NumberIsNaN
code-creation,Builtin,2,293112,0x7ff785f26304,372,NumberIsSafeInteger
code-creation,Builtin,2,293120,0x7ff785f26484,156,NumberPrototypeValueOf
code-creation,Builtin,2,293175,0x7ff785f26524,196,NumberParseFloat
code-creation,Builtin,2,293183,0x7ff785f26604,248,ParseInt
code-creation,Builtin,2,293191,0x7ff785f26704,84,NumberParseInt
code-creation,Builtin,2,293198,0x7ff785f26764,860,Add
code-creation,Builtin,2,293206,0x7ff785f26ac4,424,Subtract
code-creation,Builtin,2,293213,0x7ff785f26c84,608,Multiply
code-creation,Builtin,2,293221,0x7ff785f26f04,532,Divide
code-creation,Builtin,2,293228,0x7ff785f27124,592,Modulus
code-creation,Builtin,2,293283,0x7ff785f27384,524,Exponentiate
code-creation,Builtin,2,293291,0x7ff785f275a4,344,Negate
code-creation,Builtin,2,293298,0x7ff785f27704,112,BitwiseNot
code-creation,Builtin,2,293306,0x7ff785f27784,112,Decrement
code-creation,Builtin,2,293313,0x7ff785f27804,112,Increment
code-creation,Builtin,2,293343,0x7ff785f27884,392,ShiftLeft
code-creation,Builtin,2,293352,0x7ff785f27a24,392,ShiftRight
code-creation,Builtin,2,293360,0x7ff785f27bc4,508,ShiftRightLogical
code-creation,Builtin,2,293368,0x7ff785f27dc4,388,BitwiseAnd
code-creation,Builtin,2,293375,0x7ff785f27f64,388,BitwiseOr
code-creation,Builtin,2,293383,0x7ff785f28104,388,BitwiseXor
code-creation,Builtin,2,293390,0x7ff785f282a4,796,LessThan
code-creation,Builtin,2,293398,0x7ff785f285c4,796,LessThanOrEqual
code-creation,Builtin,2,293405,0x7ff785f288e4,796,GreaterThan
code-creation,Builtin,2,293413,0x7ff785f28c04,796,GreaterThanOrEqual
code-creation,Builtin,2,293420,0x7ff785f28f24,860,Equal
code-creation,Builtin,2,293428,0x7ff785f29284,348,StrictEqual
code-creation,Builtin,2,293435,0x7ff785f293e4,3132,ObjectFromEntries
code-creation,Builtin,2,293443,0x7ff785f2a024,756,CreateObjectWithoutProperties
code-creation,Builtin,2,293451,0x7ff785f2a324,144,ObjectIsExtensible
code-creation,Builtin,2,293459,0x7ff785f2a3c4,148,ObjectPreventExtensions
code-creation,Builtin,2,293467,0x7ff785f2a464,144,ObjectGetPrototypeOf
code-creation,Builtin,2,293475,0x7ff785f2a504,300,ObjectSetPrototypeOf
code-creation,Builtin,2,293482,0x7ff785f2a644,80,ObjectPrototypeToString
code-creation,Builtin,2,293490,0x7ff785f2a6a4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,293498,0x7ff785f2a724,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,293506,0x7ff785f2a7e4,868,FulfillPromise
code-creation,Builtin,2,293514,0x7ff785f2ab64,988,RejectPromise
code-creation,Builtin,2,293521,0x7ff785f2af44,2416,NewPromiseCapability
code-creation,Builtin,2,293529,0x7ff785f2b8c4,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,293537,0x7ff785f2b984,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,293545,0x7ff785f2ba24,1416,PerformPromiseThen
code-creation,Builtin,2,293553,0x7ff785f2bfc4,648,PromiseReject
code-creation,Builtin,2,293561,0x7ff785f2c264,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,293569,0x7ff785f2c384,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,293577,0x7ff785f2c404,4560,PromiseAll
code-creation,Builtin,2,293585,0x7ff785f2d5e4,4880,PromiseAllSettled
code-creation,Builtin,2,293592,0x7ff785f2e904,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,293601,0x7ff785f2ed64,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,293609,0x7ff785f2f2e4,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,293642,0x7ff785f2f864,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,293651,0x7ff785f2fd04,2368,PromiseAny
code-creation,Builtin,2,293659,0x7ff785f30664,2908,PromiseConstructor
code-creation,Builtin,2,293667,0x7ff785f311c4,296,PromisePrototypeCatch
code-creation,Builtin,2,293674,0x7ff785f31304,88,PromiseValueThunkFinally
code-creation,Builtin,2,293682,0x7ff785f31364,84,PromiseThrowerFinally
code-creation,Builtin,2,293690,0x7ff785f313c4,904,PromiseCatchFinally
code-creation,Builtin,2,293701,0x7ff785f31764,904,PromiseThenFinally
code-creation,Builtin,2,293731,0x7ff785f31b04,1700,PromisePrototypeFinally
code-creation,Builtin,2,293742,0x7ff785f321c4,1336,PromiseRace
code-creation,Builtin,2,293749,0x7ff785f32704,268,PromiseFulfillReactionJob
code-creation,Builtin,2,293757,0x7ff785f32824,364,PromiseRejectReactionJob
code-creation,Builtin,2,293765,0x7ff785f329a4,156,PromiseResolveTrampoline
code-creation,Builtin,2,293773,0x7ff785f32a44,656,PromiseResolve
code-creation,Builtin,2,293781,0x7ff785f32ce4,712,ResolvePromise
code-creation,Builtin,2,293788,0x7ff785f32fc4,2224,PromisePrototypeThen
code-creation,Builtin,2,293796,0x7ff785f33884,1144,PromiseResolveThenableJob
code-creation,Builtin,2,293804,0x7ff785f33d04,448,ProxyConstructor
code-creation,Builtin,2,293812,0x7ff785f33ee4,1760,ProxyDeleteProperty
code-creation,Builtin,2,293821,0x7ff785f345e4,2112,ProxyGetProperty
code-creation,Builtin,2,293829,0x7ff785f34e44,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,293837,0x7ff785f35284,1668,ProxyHasProperty
code-creation,Builtin,2,293845,0x7ff785f35924,760,ProxyIsExtensible
code-creation,Builtin,2,293908,0x7ff785f35c24,800,ProxyPreventExtensions
code-creation,Builtin,2,293917,0x7ff785f35f64,1148,ProxyRevocable
code-creation,Builtin,2,293925,0x7ff785f363e4,120,ProxyRevoke
code-creation,Builtin,2,293933,0x7ff785f36464,2216,ProxySetProperty
code-creation,Builtin,2,293941,0x7ff785f36d24,1292,ProxySetPrototypeOf
code-creation,Builtin,2,293949,0x7ff785f37244,208,ReflectIsExtensible
code-creation,Builtin,2,293958,0x7ff785f37324,212,ReflectPreventExtensions
code-creation,Builtin,2,293966,0x7ff785f37404,188,ReflectGetPrototypeOf
code-creation,Builtin,2,293974,0x7ff785f374c4,292,ReflectSetPrototypeOf
code-creation,Builtin,2,293983,0x7ff785f37604,284,ReflectGet
code-creation,Builtin,2,293991,0x7ff785f37724,160,ReflectDeleteProperty
code-creation,Builtin,2,293999,0x7ff785f377e4,148,ReflectHas
code-creation,Builtin,2,294007,0x7ff785f37884,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,294015,0x7ff785f38ca4,5104,RegExpPrototypeExec
code-creation,Builtin,2,294024,0x7ff785f3a0a4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,294032,0x7ff785f3a9e4,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,294041,0x7ff785f3cec4,8840,RegExpMatchFast
code-creation,Builtin,2,294049,0x7ff785f3f164,3600,RegExpPrototypeMatch
code-creation,Builtin,2,294057,0x7ff785f3ff84,6328,RegExpReplace
code-creation,Builtin,2,294065,0x7ff785f41844,524,RegExpPrototypeReplace
code-creation,Builtin,2,294074,0x7ff785f41a64,1424,RegExpSearchFast
code-creation,Builtin,2,294082,0x7ff785f42004,1640,RegExpPrototypeSearch
code-creation,Builtin,2,294090,0x7ff785f42684,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,294099,0x7ff785f42764,5872,RegExpSplit
code-creation,Builtin,2,294107,0x7ff785f43e64,476,RegExpPrototypeSplit
code-creation,Builtin,2,294115,0x7ff785f44044,2252,RegExpPrototypeTest
code-creation,Builtin,2,294123,0x7ff785f44924,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,294132,0x7ff785f44e84,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,294140,0x7ff785f44f84,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,294148,0x7ff785f45084,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,294157,0x7ff785f45184,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,294166,0x7ff785f45284,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,294174,0x7ff785f45384,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,294182,0x7ff785f45484,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,294191,0x7ff785f455a4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,294200,0x7ff785f456c4,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,294208,0x7ff785f45fa4,1500,StringPrototypeAt
code-creation,Builtin,2,294216,0x7ff785f46584,3008,StringPrototypeEndsWith
code-creation,Builtin,2,294225,0x7ff785f47164,480,CreateHTML
code-creation,Builtin,2,294233,0x7ff785f47364,164,StringPrototypeAnchor
code-creation,Builtin,2,294241,0x7ff785f47424,128,StringPrototypeBig
code-creation,Builtin,2,294250,0x7ff785f474c4,128,StringPrototypeBlink
code-creation,Builtin,2,294261,0x7ff785f47564,128,StringPrototypeBold
code-creation,Builtin,2,294270,0x7ff785f47604,168,StringPrototypeFontcolor
code-creation,Builtin,2,294279,0x7ff785f476c4,168,StringPrototypeFontsize
code-creation,Builtin,2,294288,0x7ff785f47784,128,StringPrototypeFixed
code-creation,Builtin,2,294296,0x7ff785f47824,128,StringPrototypeItalics
code-creation,Builtin,2,294305,0x7ff785f478c4,168,StringPrototypeLink
code-creation,Builtin,2,294313,0x7ff785f47984,128,StringPrototypeSmall
code-creation,Builtin,2,294321,0x7ff785f47a24,128,StringPrototypeStrike
code-creation,Builtin,2,294329,0x7ff785f47ac4,128,StringPrototypeSub
code-creation,Builtin,2,294338,0x7ff785f47b64,128,StringPrototypeSup
code-creation,Builtin,2,294346,0x7ff785f47c04,1028,StringPrototypeIncludes
code-creation,Builtin,2,294355,0x7ff785f48024,628,StringPrototypeIndexOf
code-creation,Builtin,2,294363,0x7ff785f482a4,344,StringPrototypeIterator
code-creation,Builtin,2,294371,0x7ff785f48404,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,294380,0x7ff785f48c04,1304,StringPrototypeMatch
code-creation,Builtin,2,294389,0x7ff785f49124,1304,StringPrototypeSearch
code-creation,Builtin,2,294397,0x7ff785f49644,824,StringPrototypePadStart
code-creation,Builtin,2,294406,0x7ff785f49984,824,StringPrototypePadEnd
code-creation,Builtin,2,294414,0x7ff785f49cc4,120,StringRepeat
code-creation,Builtin,2,294423,0x7ff785f49d44,400,StringPrototypeRepeat
code-creation,Builtin,2,294431,0x7ff785f49ee4,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,294439,0x7ff785f4caa4,3388,StringPrototypeSlice
code-creation,Builtin,2,294448,0x7ff785f4d7e4,3028,StringPrototypeStartsWith
code-creation,Builtin,2,294456,0x7ff785f4e3c4,3328,StringPrototypeSubstr
code-creation,Builtin,2,294464,0x7ff785f4f0e4,3260,StringPrototypeSubstring
code-creation,Builtin,2,294472,0x7ff785f4fda4,6916,StringPrototypeTrim
code-creation,Builtin,2,294481,0x7ff785f518c4,6332,StringPrototypeTrimStart
code-creation,Builtin,2,294489,0x7ff785f53184,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,294498,0x7ff785f54864,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,294506,0x7ff785f54924,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,294515,0x7ff785f549c4,172,SymbolPrototypeToString
code-creation,Builtin,2,294524,0x7ff785f54a84,156,SymbolPrototypeValueOf
code-creation,Builtin,2,294532,0x7ff785f54b24,832,TypedArrayPrototypeAt
code-creation,Builtin,2,294540,0x7ff785f54e84,10064,CreateTypedArray
code-creation,Builtin,2,294549,0x7ff785f575e4,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,294557,0x7ff785f579e4,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,294566,0x7ff785f57b64,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,294574,0x7ff785f58924,996,TypedArrayPrototypeFind
code-creation,Builtin,2,294583,0x7ff785f58d24,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,294591,0x7ff785f59124,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,294600,0x7ff785f592e4,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,294609,0x7ff785f597a4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,294618,0x7ff785f59964,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,294627,0x7ff785f59e44,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,294635,0x7ff785f5a1c4,2352,TypedArrayFrom
code-creation,Builtin,2,294643,0x7ff785f5ab04,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,294652,0x7ff785f5ac84,1028,TypedArrayOf
code-creation,Builtin,2,294660,0x7ff785f5b0a4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,294668,0x7ff785f5b464,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,294677,0x7ff785f5b824,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,294685,0x7ff785f5c204,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,294693,0x7ff785f5ce04,992,TypedArrayPrototypeSome
code-creation,Builtin,2,294702,0x7ff785f5d204,1060,TypedArrayMergeSort
code-creation,Builtin,2,294710,0x7ff785f5d644,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,294718,0x7ff785f5dca4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,294728,0x7ff785f5e764,372,TypedArrayPrototypeValues
code-creation,Builtin,2,294738,0x7ff785f5e8e4,952,WeakRefConstructor
code-creation,Builtin,2,294747,0x7ff785f5eca4,184,WeakRefDeref
code-creation,Builtin,2,294755,0x7ff785f5ed64,680,NewSloppyArgumentsElements
code-creation,Builtin,2,294763,0x7ff785f5f024,296,NewStrictArgumentsElements
code-creation,Builtin,2,294772,0x7ff785f5f164,320,NewRestArgumentsElements
code-creation,Builtin,2,294782,0x7ff785f5f2c4,1388,FastNewSloppyArguments
code-creation,Builtin,2,294790,0x7ff785f5f844,524,FastNewStrictArguments
code-creation,Builtin,2,294799,0x7ff785f5fa64,556,FastNewRestArguments
code-creation,Builtin,2,294807,0x7ff785f5fca4,676,StringSlowFlatten
code-creation,Builtin,2,294817,0x7ff785f5ff64,2068,StringIndexOf
code-creation,Builtin,2,294825,0x7ff785f60784,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,294833,0x7ff785f607a4,20,TestHelperPlus1
code-creation,Builtin,2,294841,0x7ff785f607c4,20,TestHelperPlus2
code-creation,Builtin,2,294850,0x7ff785f607e4,96,NewSmiBox
code-creation,Builtin,2,294857,0x7ff785f60864,24,ReturnTwoValues
code-creation,Builtin,2,294866,0x7ff785f60884,32,Load_FastSmiElements_0
code-creation,Builtin,2,294874,0x7ff785f608c4,32,Load_FastObjectElements_0
code-creation,Builtin,2,294882,0x7ff785f60904,144,Load_FastDoubleElements_0
code-creation,Builtin,2,294891,0x7ff785f609a4,32,Store_FastSmiElements_0
code-creation,Builtin,2,294899,0x7ff785f609e4,96,Store_FastObjectElements_0
code-creation,Builtin,2,294915,0x7ff785f60a64,48,Store_FastDoubleElements_0
code-creation,Builtin,2,294923,0x7ff785f60aa4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,294931,0x7ff785f60ae4,36,Delete_FastObjectElements_0
code-creation,Builtin,2,294939,0x7ff785f60b24,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,294947,0x7ff785f60b64,308,SortCompareDefault
code-creation,Builtin,2,294955,0x7ff785f60ca4,92,SortCompareUserFn
code-creation,Builtin,2,294963,0x7ff785f60d04,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,294971,0x7ff785f60d24,312,Copy
code-creation,Builtin,2,294979,0x7ff785f60e64,5776,MergeAt
code-creation,Builtin,2,294986,0x7ff785f62504,792,GallopLeft
code-creation,Builtin,2,294994,0x7ff785f62824,832,GallopRight
code-creation,Builtin,2,295001,0x7ff785f62b84,3832,ArrayTimSort
code-creation,Builtin,2,295009,0x7ff785f63a84,2112,ArrayPrototypeSort
code-creation,Builtin,2,295017,0x7ff785f642e4,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,295025,0x7ff785f64364,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,295033,0x7ff785f643e4,76,WasmTaggedToFloat64
code-creation,Builtin,2,295040,0x7ff785f64444,72,WasmMemoryGrow
code-creation,Builtin,2,295048,0x7ff785f644a4,100,WasmTableInit
code-creation,Builtin,2,295056,0x7ff785f64524,100,WasmTableCopy
code-creation,Builtin,2,295063,0x7ff785f645a4,84,WasmTableFill
code-creation,Builtin,2,295071,0x7ff785f64604,72,WasmTableGrow
code-creation,Builtin,2,295078,0x7ff785f64664,144,WasmTableGet
code-creation,Builtin,2,295086,0x7ff785f64704,236,WasmTableSet
code-creation,Builtin,2,295094,0x7ff785f64804,88,WasmRefFunc
code-creation,Builtin,2,295101,0x7ff785f64864,144,WasmAllocateFixedArray
code-creation,Builtin,2,295109,0x7ff785f64904,44,WasmThrow
code-creation,Builtin,2,295116,0x7ff785f64944,52,WasmRethrow
code-creation,Builtin,2,295124,0x7ff785f64984,44,WasmTriggerTierUp
code-creation,Builtin,2,295132,0x7ff785f649c4,32,WasmStackGuard
code-creation,Builtin,2,295139,0x7ff785f64a04,32,WasmStackOverflow
code-creation,Builtin,2,295147,0x7ff785f64a44,40,WasmTraceMemory
code-creation,Builtin,2,295154,0x7ff785f64a84,32,WasmTraceEnter
code-creation,Builtin,2,295162,0x7ff785f64ac4,40,WasmTraceExit
code-creation,Builtin,2,295170,0x7ff785f64b04,332,WasmAllocateJSArray
code-creation,Builtin,2,295177,0x7ff785f64c64,104,WasmAllocatePair
code-creation,Builtin,2,295185,0x7ff785f64ce4,64,WasmAllocateRtt
code-creation,Builtin,2,295193,0x7ff785f64d44,72,WasmAllocateFreshRtt
code-creation,Builtin,2,295201,0x7ff785f64da4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,295210,0x7ff785f64e24,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,295220,0x7ff785f64ec4,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,295228,0x7ff785f64f84,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,295236,0x7ff785f65044,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,295244,0x7ff785f650c4,60,WasmArrayCopy
code-creation,Builtin,2,295252,0x7ff785f65104,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,295260,0x7ff785f65204,52,WasmSubtypeCheck
code-creation,Builtin,2,295268,0x7ff785f65244,8,WasmInt32ToNumber
code-creation,Builtin,2,295275,0x7ff785f65264,116,WasmUint32ToNumber
code-creation,Builtin,2,295283,0x7ff785f652e4,144,UintPtr53ToNumber
code-creation,Builtin,2,295290,0x7ff785f65384,96,WasmAtomicNotify
code-creation,Builtin,2,295298,0x7ff785f65404,116,WasmI32AtomicWait64
code-creation,Builtin,2,295306,0x7ff785f65484,116,WasmI64AtomicWait64
code-creation,Builtin,2,295314,0x7ff785f65504,580,WasmGetOwnProperty
code-creation,Builtin,2,295322,0x7ff785f65764,40,WasmTrap
code-creation,Builtin,2,295329,0x7ff785f657a4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,295337,0x7ff785f657c4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,295345,0x7ff785f657e4,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,295353,0x7ff785f65804,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,295361,0x7ff785f65824,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,295369,0x7ff785f65844,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,295377,0x7ff785f65864,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,295385,0x7ff785f65884,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,295393,0x7ff785f658a4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,295401,0x7ff785f658c4,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,295409,0x7ff785f658e4,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,295417,0x7ff785f65904,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,295425,0x7ff785f65924,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,295433,0x7ff785f65944,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,295441,0x7ff785f65964,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,295449,0x7ff785f65984,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,295457,0x7ff785f659a4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,295465,0x7ff785f65a64,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,295473,0x7ff785f65a84,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,295482,0x7ff785f65b04,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,295490,0x7ff785f65b84,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,295498,0x7ff785f65ba4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,295507,0x7ff785f65c84,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,295515,0x7ff785f65d84,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,295523,0x7ff785f65da4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,295531,0x7ff785f65dc4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,295540,0x7ff785f65de4,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,295548,0x7ff785f65e04,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,295556,0x7ff785f65ea4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,295564,0x7ff785f65ec4,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,295573,0x7ff785f65f04,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,295581,0x7ff785f65f44,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,295590,0x7ff785f65f84,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,295598,0x7ff785f66a04,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,295606,0x7ff785f66a24,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,295614,0x7ff785f66a64,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,295622,0x7ff785f66a84,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,295632,0x7ff785f66b44,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,295642,0x7ff785f66c04,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,295651,0x7ff785f66c84,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,295660,0x7ff785f66cc4,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,295669,0x7ff785f66d64,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,295677,0x7ff785f66de4,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,295687,0x7ff785f66e04,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,295697,0x7ff785f66ea4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,295706,0x7ff785f66ec4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,295715,0x7ff785f66ee4,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,295724,0x7ff785f67164,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,295732,0x7ff785f67244,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,295741,0x7ff785f67284,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,295750,0x7ff785f67364,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,295759,0x7ff785f67464,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,295767,0x7ff785f674a4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,295776,0x7ff785f67584,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,295784,0x7ff785f675a4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,295792,0x7ff785f675c4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,295801,0x7ff785f67684,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,295809,0x7ff785f676a4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,295819,0x7ff785f676c4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,295827,0x7ff785f67784,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,295836,0x7ff785f677a4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,295845,0x7ff785f677c4,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,295854,0x7ff785f67884,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,295862,0x7ff785f678a4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,295870,0x7ff785f678c4,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,295879,0x7ff785f67984,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,295887,0x7ff785f67a24,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,295896,0x7ff785f67ae4,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,295905,0x7ff785f67ba4,12,CollatorConstructor
code-creation,Builtin,2,295913,0x7ff785f67bc4,12,CollatorInternalCompare
code-creation,Builtin,2,295921,0x7ff785f67be4,12,CollatorPrototypeCompare
code-creation,Builtin,2,295928,0x7ff785f67c04,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,295936,0x7ff785f67c24,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,295945,0x7ff785f67c44,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,295953,0x7ff785f67c64,12,DatePrototypeToLocaleString
code-creation,Builtin,2,295961,0x7ff785f67c84,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,295969,0x7ff785f67ca4,12,DateTimeFormatConstructor
code-creation,Builtin,2,295977,0x7ff785f67cc4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,295985,0x7ff785f67ce4,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,295993,0x7ff785f67d04,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,296001,0x7ff785f67d24,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,296009,0x7ff785f67d44,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,296018,0x7ff785f67d64,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,296026,0x7ff785f67d84,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,296034,0x7ff785f67da4,12,DisplayNamesConstructor
code-creation,Builtin,2,296044,0x7ff785f67dc4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,296053,0x7ff785f67de4,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,296062,0x7ff785f67e04,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,296069,0x7ff785f67e24,12,IntlGetCanonicalLocales
code-creation,Builtin,2,296078,0x7ff785f67e44,12,ListFormatConstructor
code-creation,Builtin,2,296085,0x7ff785f67e64,224,ListFormatPrototypeFormat
code-creation,Builtin,2,296093,0x7ff785f67f64,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,296102,0x7ff785f68064,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,296110,0x7ff785f68084,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,296118,0x7ff785f680a4,12,LocaleConstructor
code-creation,Builtin,2,296126,0x7ff785f680c4,12,LocalePrototypeBaseName
code-creation,Builtin,2,296133,0x7ff785f680e4,12,LocalePrototypeCalendar
code-creation,Builtin,2,296141,0x7ff785f68104,12,LocalePrototypeCalendars
code-creation,Builtin,2,296149,0x7ff785f68124,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,296157,0x7ff785f68144,12,LocalePrototypeCollation
code-creation,Builtin,2,296165,0x7ff785f68164,12,LocalePrototypeCollations
code-creation,Builtin,2,296173,0x7ff785f68184,12,LocalePrototypeHourCycle
code-creation,Builtin,2,296181,0x7ff785f681a4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,296189,0x7ff785f681c4,12,LocalePrototypeLanguage
code-creation,Builtin,2,296196,0x7ff785f681e4,12,LocalePrototypeMaximize
code-creation,Builtin,2,296204,0x7ff785f68204,12,LocalePrototypeMinimize
code-creation,Builtin,2,296212,0x7ff785f68224,12,LocalePrototypeNumeric
code-creation,Builtin,2,296220,0x7ff785f68244,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,296228,0x7ff785f68264,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,296236,0x7ff785f68284,12,LocalePrototypeRegion
code-creation,Builtin,2,296244,0x7ff785f682a4,12,LocalePrototypeScript
code-creation,Builtin,2,296252,0x7ff785f682c4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,296260,0x7ff785f682e4,12,LocalePrototypeTimeZones
code-creation,Builtin,2,296267,0x7ff785f68304,12,LocalePrototypeToString
code-creation,Builtin,2,296275,0x7ff785f68324,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,296283,0x7ff785f68344,12,NumberFormatConstructor
code-creation,Builtin,2,296291,0x7ff785f68364,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,296299,0x7ff785f68384,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,296307,0x7ff785f683a4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,296316,0x7ff785f683c4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,296324,0x7ff785f683e4,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,296332,0x7ff785f68404,12,PluralRulesConstructor
code-creation,Builtin,2,296340,0x7ff785f68424,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,296348,0x7ff785f68444,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,296356,0x7ff785f68464,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,296364,0x7ff785f68484,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,296372,0x7ff785f684a4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,296380,0x7ff785f684c4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,296389,0x7ff785f684e4,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,296397,0x7ff785f68504,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,296405,0x7ff785f68524,12,SegmenterConstructor
code-creation,Builtin,2,296413,0x7ff785f68544,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,296421,0x7ff785f68564,12,SegmenterPrototypeSegment
code-creation,Builtin,2,296429,0x7ff785f68584,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,296437,0x7ff785f685a4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,296445,0x7ff785f685c4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,296453,0x7ff785f685e4,12,SegmentsPrototypeIterator
code-creation,Builtin,2,296460,0x7ff785f68604,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,296470,0x7ff785f68624,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,296479,0x7ff785f68644,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,296487,0x7ff785f68664,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,296496,0x7ff785f68744,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,296504,0x7ff785f68764,636,StringToLowerCaseIntl
code-creation,Builtin,2,296511,0x7ff785f689e4,12,V8BreakIteratorConstructor
code-creation,Builtin,2,296520,0x7ff785f68a04,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,296528,0x7ff785f68a24,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,296536,0x7ff785f68a44,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,296545,0x7ff785f68a64,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,296553,0x7ff785f68a84,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,296561,0x7ff785f68aa4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,296569,0x7ff785f68ac4,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,296577,0x7ff785f68ae4,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,296585,0x7ff785f68b04,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,296593,0x7ff785f68b24,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,296601,0x7ff785f68b44,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,296609,0x7ff785f68b64,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,296618,0x7ff785f68b84,24,Wide
code-creation,BytecodeHandler,0,296626,0x7ff785f68ba4,24,ExtraWide
code-creation,BytecodeHandler,0,296634,0x7ff785f68bc4,104,DebugBreakWide
code-creation,BytecodeHandler,0,296642,0x7ff785f68c44,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,296650,0x7ff785f68cc4,164,DebugBreak0
code-creation,BytecodeHandler,0,296658,0x7ff785f68d84,104,DebugBreak1
code-creation,BytecodeHandler,0,296666,0x7ff785f68e04,104,DebugBreak2
code-creation,BytecodeHandler,0,296674,0x7ff785f68e84,104,DebugBreak3
code-creation,BytecodeHandler,0,296682,0x7ff785f68f04,104,DebugBreak4
code-creation,BytecodeHandler,0,296690,0x7ff785f68f84,104,DebugBreak5
code-creation,BytecodeHandler,0,296698,0x7ff785f69004,104,DebugBreak6
code-creation,BytecodeHandler,0,296705,0x7ff785f69084,32,Ldar
code-creation,BytecodeHandler,0,296713,0x7ff785f690c4,68,LdaZero
code-creation,BytecodeHandler,0,296721,0x7ff785f69124,76,LdaSmi
code-creation,BytecodeHandler,0,296729,0x7ff785f69184,68,LdaUndefined
code-creation,BytecodeHandler,0,296737,0x7ff785f691e4,68,LdaNull
code-creation,BytecodeHandler,0,296745,0x7ff785f69244,68,LdaTheHole
code-creation,BytecodeHandler,0,296753,0x7ff785f692a4,20,LdaTrue
code-creation,BytecodeHandler,0,296760,0x7ff785f692c4,20,LdaFalse
code-creation,BytecodeHandler,0,296768,0x7ff785f692e4,76,LdaConstant
code-creation,BytecodeHandler,0,296776,0x7ff785f69344,132,LdaContextSlot
code-creation,BytecodeHandler,0,296784,0x7ff785f693e4,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,296857,0x7ff785f69484,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,296867,0x7ff785f694e4,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,296876,0x7ff785f69544,32,Star
code-creation,BytecodeHandler,0,296883,0x7ff785f69584,40,Mov
code-creation,BytecodeHandler,0,296891,0x7ff785f695c4,40,PushContext
code-creation,BytecodeHandler,0,296899,0x7ff785f69604,36,PopContext
code-creation,BytecodeHandler,0,296907,0x7ff785f69644,48,TestReferenceEqual
code-creation,BytecodeHandler,0,296915,0x7ff785f69684,52,TestUndetectable
code-creation,BytecodeHandler,0,296923,0x7ff785f696c4,36,TestNull
code-creation,BytecodeHandler,0,296931,0x7ff785f69704,36,TestUndefined
code-creation,BytecodeHandler,0,296938,0x7ff785f69744,336,TestTypeOf
code-creation,BytecodeHandler,0,296946,0x7ff785f698a4,6036,LdaGlobal
code-creation,BytecodeHandler,0,296954,0x7ff785f6b044,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,296962,0x7ff785f6c204,168,StaGlobal
code-creation,BytecodeHandler,0,296970,0x7ff785f6c2c4,160,StaContextSlot
code-creation,BytecodeHandler,0,296978,0x7ff785f6c384,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,296989,0x7ff785f6c404,124,LdaLookupSlot
code-creation,BytecodeHandler,0,296998,0x7ff785f6c484,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,297007,0x7ff785f6c584,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,297015,0x7ff785f6d844,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,297024,0x7ff785f6d8c4,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,297033,0x7ff785f6d9c4,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,297067,0x7ff785f6ec64,220,StaLookupSlot
code-creation,BytecodeHandler,0,297075,0x7ff785f6ed44,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,297084,0x7ff785f701c4,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,297092,0x7ff785f70284,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,297100,0x7ff785f70364,160,LdaModuleVariable
code-creation,BytecodeHandler,0,297109,0x7ff785f70424,292,StaModuleVariable
code-creation,BytecodeHandler,0,297117,0x7ff785f70564,172,StaNamedProperty
code-creation,BytecodeHandler,0,297125,0x7ff785f70624,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,297133,0x7ff785f706e4,164,StaKeyedProperty
code-creation,BytecodeHandler,0,297141,0x7ff785f707a4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,297150,0x7ff785f70864,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,297158,0x7ff785f70944,160,CollectTypeProfile
code-creation,BytecodeHandler,0,297166,0x7ff785f70a04,1028,Add
code-creation,BytecodeHandler,0,297174,0x7ff785f70e24,1064,Sub
code-creation,BytecodeHandler,0,297182,0x7ff785f71264,1024,Mul
code-creation,BytecodeHandler,0,297190,0x7ff785f71684,988,Div
code-creation,BytecodeHandler,0,297197,0x7ff785f71a64,912,Mod
code-creation,BytecodeHandler,0,297205,0x7ff785f71e04,964,Exp
code-creation,BytecodeHandler,0,297213,0x7ff785f721e4,876,BitwiseOr
code-creation,BytecodeHandler,0,297221,0x7ff785f72564,888,BitwiseXor
code-creation,BytecodeHandler,0,297229,0x7ff785f728e4,888,BitwiseAnd
code-creation,BytecodeHandler,0,297236,0x7ff785f72c64,900,ShiftLeft
code-creation,BytecodeHandler,0,297244,0x7ff785f73004,900,ShiftRight
code-creation,BytecodeHandler,0,297252,0x7ff785f733a4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,297260,0x7ff785f737a4,960,AddSmi
code-creation,BytecodeHandler,0,297268,0x7ff785f73b84,1000,SubSmi
code-creation,BytecodeHandler,0,297276,0x7ff785f73f84,916,MulSmi
code-creation,BytecodeHandler,0,297284,0x7ff785f74324,920,DivSmi
code-creation,BytecodeHandler,0,297292,0x7ff785f746c4,816,ModSmi
code-creation,BytecodeHandler,0,297299,0x7ff785f74a04,872,ExpSmi
code-creation,BytecodeHandler,0,297307,0x7ff785f74d84,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,297315,0x7ff785f74f84,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,297323,0x7ff785f75184,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,297331,0x7ff785f75384,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,297339,0x7ff785f75584,488,ShiftRightSmi
code-creation,BytecodeHandler,0,297347,0x7ff785f75784,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,297355,0x7ff785f75a24,656,Inc
code-creation,BytecodeHandler,0,297363,0x7ff785f75cc4,656,Dec
code-creation,BytecodeHandler,0,297370,0x7ff785f75f64,640,Negate
code-creation,BytecodeHandler,0,297378,0x7ff785f76204,480,BitwiseNot
code-creation,BytecodeHandler,0,297386,0x7ff785f76404,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,297394,0x7ff785f76484,36,LogicalNot
code-creation,BytecodeHandler,0,297402,0x7ff785f764c4,208,TypeOf
code-creation,BytecodeHandler,0,297410,0x7ff785f765a4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,297418,0x7ff785f76624,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,297426,0x7ff785f766a4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,297435,0x7ff785f766e4,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,297443,0x7ff785f76b64,1132,CallProperty
code-creation,BytecodeHandler,0,297451,0x7ff785f76fe4,1012,CallProperty0
code-creation,BytecodeHandler,0,297459,0x7ff785f773e4,1028,CallProperty1
code-creation,BytecodeHandler,0,297469,0x7ff785f77804,1040,CallProperty2
code-creation,BytecodeHandler,0,297478,0x7ff785f77c24,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,297486,0x7ff785f78024,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,297494,0x7ff785f78444,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,297503,0x7ff785f78844,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,297511,0x7ff785f78c64,1132,CallWithSpread
code-creation,BytecodeHandler,0,297519,0x7ff785f790e4,124,CallRuntime
code-creation,BytecodeHandler,0,297526,0x7ff785f79164,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,297534,0x7ff785f79204,80,CallJSRuntime
code-creation,BytecodeHandler,0,297542,0x7ff785f79264,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,297550,0x7ff785f79744,1020,Construct
code-creation,BytecodeHandler,0,297558,0x7ff785f79b44,536,ConstructWithSpread
code-creation,BytecodeHandler,0,297566,0x7ff785f79d64,1936,TestEqual
code-creation,BytecodeHandler,0,297574,0x7ff785f7a504,1064,TestEqualStrict
code-creation,BytecodeHandler,0,297582,0x7ff785f7a944,1624,TestLessThan
code-creation,BytecodeHandler,0,297590,0x7ff785f7afa4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,297598,0x7ff785f7b604,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,297606,0x7ff785f7bc64,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,297614,0x7ff785f7c2c4,860,TestInstanceOf
code-creation,BytecodeHandler,0,297622,0x7ff785f7c624,156,TestIn
code-creation,BytecodeHandler,0,297630,0x7ff785f7c6c4,112,ToName
code-creation,BytecodeHandler,0,297637,0x7ff785f7c744,212,ToNumber
code-creation,BytecodeHandler,0,297645,0x7ff785f7c824,232,ToNumeric
code-creation,BytecodeHandler,0,297653,0x7ff785f7c924,112,ToObject
code-creation,BytecodeHandler,0,297660,0x7ff785f7c9a4,116,ToString
code-creation,BytecodeHandler,0,297668,0x7ff785f7ca24,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,297676,0x7ff785f7cbc4,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,297684,0x7ff785f7d184,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,297692,0x7ff785f7d1e4,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,297701,0x7ff785f7d504,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,297709,0x7ff785f7dd64,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,297717,0x7ff785f7de64,168,CloneObject
code-creation,BytecodeHandler,0,297725,0x7ff785f7df24,212,GetTemplateObject
code-creation,BytecodeHandler,0,297733,0x7ff785f7e004,328,CreateClosure
code-creation,BytecodeHandler,0,297741,0x7ff785f7e164,120,CreateBlockContext
code-creation,BytecodeHandler,0,297749,0x7ff785f7e1e4,132,CreateCatchContext
code-creation,BytecodeHandler,0,297757,0x7ff785f7e284,256,CreateFunctionContext
code-creation,BytecodeHandler,0,297765,0x7ff785f7e3a4,256,CreateEvalContext
code-creation,BytecodeHandler,0,297773,0x7ff785f7e4c4,132,CreateWithContext
code-creation,BytecodeHandler,0,297781,0x7ff785f7e564,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,297789,0x7ff785f7eba4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,297798,0x7ff785f7ee04,632,CreateRestParameter
code-creation,BytecodeHandler,0,297806,0x7ff785f7f084,424,JumpLoop
code-creation,BytecodeHandler,0,297814,0x7ff785f7f244,44,Jump
code-creation,BytecodeHandler,0,297822,0x7ff785f7f284,56,JumpConstant
code-creation,BytecodeHandler,0,297830,0x7ff785f7f2c4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,297838,0x7ff785f7f324,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,297846,0x7ff785f7f384,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,297854,0x7ff785f7f3e4,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,297862,0x7ff785f7f444,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,297871,0x7ff785f7f4a4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,297879,0x7ff785f7f504,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,297887,0x7ff785f7f564,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,297895,0x7ff785f7f5c4,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,297906,0x7ff785f7f664,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,297915,0x7ff785f7f704,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,297923,0x7ff785f7f7a4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,297931,0x7ff785f7f844,64,JumpIfTrue
code-creation,BytecodeHandler,0,297939,0x7ff785f7f8a4,64,JumpIfFalse
code-creation,BytecodeHandler,0,297946,0x7ff785f7f904,64,JumpIfNull
code-creation,BytecodeHandler,0,297954,0x7ff785f7f964,64,JumpIfNotNull
code-creation,BytecodeHandler,0,297962,0x7ff785f7f9c4,64,JumpIfUndefined
code-creation,BytecodeHandler,0,297970,0x7ff785f7fa24,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,297978,0x7ff785f7fa84,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,297986,0x7ff785f7fae4,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,297994,0x7ff785f7fb44,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,298002,0x7ff785f7fbc4,464,ForInEnumerate
code-creation,BytecodeHandler,0,298010,0x7ff785f7fda4,252,ForInPrepare
code-creation,BytecodeHandler,0,298018,0x7ff785f7fea4,60,ForInContinue
code-creation,BytecodeHandler,0,298025,0x7ff785f7fee4,256,ForInNext
code-creation,BytecodeHandler,0,298033,0x7ff785f80004,48,ForInStep
code-creation,BytecodeHandler,0,298041,0x7ff785f80044,36,SetPendingMessage
code-creation,BytecodeHandler,0,298049,0x7ff785f80084,116,Throw
code-creation,BytecodeHandler,0,298056,0x7ff785f80104,116,ReThrow
code-creation,BytecodeHandler,0,298064,0x7ff785f80184,112,Return
code-creation,BytecodeHandler,0,298072,0x7ff785f80204,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,298080,0x7ff785f802e4,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,298088,0x7ff785f80384,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,298097,0x7ff785f80424,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,298105,0x7ff785f804c4,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,298113,0x7ff785f80544,512,SuspendGenerator
code-creation,BytecodeHandler,0,298121,0x7ff785f80764,128,ResumeGenerator
code-creation,BytecodeHandler,0,298129,0x7ff785f80804,152,GetIterator
code-creation,BytecodeHandler,0,298137,0x7ff785f808a4,116,Debugger
code-creation,BytecodeHandler,0,298144,0x7ff785f80924,124,IncBlockCounter
code-creation,BytecodeHandler,0,298152,0x7ff785f809a4,56,Abort
code-creation,BytecodeHandler,0,298160,0x7ff785f809e4,32,Star0
code-creation,BytecodeHandler,0,298167,0x7ff785f80a24,60,Illegal
code-creation,BytecodeHandler,0,298176,0x7ff785f80a64,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,298185,0x7ff785f80ae4,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,298193,0x7ff785f80b64,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,298201,0x7ff785f80be4,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,298209,0x7ff785f80c64,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,298218,0x7ff785f80ce4,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,298226,0x7ff785f80d64,32,Ldar.Wide
code-creation,BytecodeHandler,0,298233,0x7ff785f80da4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,298241,0x7ff785f80de4,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,298249,0x7ff785f80e24,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,298258,0x7ff785f80e84,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,298266,0x7ff785f80ee4,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,298275,0x7ff785f80f24,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,298284,0x7ff785f80f64,32,Star.Wide
code-creation,BytecodeHandler,0,298291,0x7ff785f80fa4,40,Mov.Wide
code-creation,BytecodeHandler,0,298299,0x7ff785f80fe4,40,PushContext.Wide
code-creation,BytecodeHandler,0,298307,0x7ff785f81024,36,PopContext.Wide
code-creation,BytecodeHandler,0,298315,0x7ff785f81064,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,298323,0x7ff785f810a4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,298331,0x7ff785f822e4,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,298339,0x7ff785f834e4,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,298349,0x7ff785f835a4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,298358,0x7ff785f83664,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,298367,0x7ff785f836e4,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,298375,0x7ff785f83784,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,298383,0x7ff785f83884,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,298392,0x7ff785f84b84,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,298401,0x7ff785f84c24,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,298410,0x7ff785f84d24,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,298418,0x7ff785f86004,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,298427,0x7ff785f860e4,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,298435,0x7ff785f87564,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,298444,0x7ff785f87624,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,298452,0x7ff785f876e4,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,298460,0x7ff785f877a4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,298469,0x7ff785f878e4,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,298477,0x7ff785f879a4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,298486,0x7ff785f87a64,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,298494,0x7ff785f87b24,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,298502,0x7ff785f87be4,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,298511,0x7ff785f87cc4,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,298519,0x7ff785f87d84,984,Add.Wide
code-creation,BytecodeHandler,0,298527,0x7ff785f88164,1020,Sub.Wide
code-creation,BytecodeHandler,0,298534,0x7ff785f88564,972,Mul.Wide
code-creation,BytecodeHandler,0,298542,0x7ff785f88944,988,Div.Wide
code-creation,BytecodeHandler,0,298550,0x7ff785f88d24,916,Mod.Wide
code-creation,BytecodeHandler,0,298557,0x7ff785f890c4,988,Exp.Wide
code-creation,BytecodeHandler,0,298565,0x7ff785f894a4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,298573,0x7ff785f89844,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,298581,0x7ff785f89be4,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,298589,0x7ff785f89f84,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,298597,0x7ff785f8a344,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,298605,0x7ff785f8a704,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,298613,0x7ff785f8ab24,916,AddSmi.Wide
code-creation,BytecodeHandler,0,298621,0x7ff785f8aec4,960,SubSmi.Wide
code-creation,BytecodeHandler,0,298629,0x7ff785f8b2a4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,298637,0x7ff785f8b644,920,DivSmi.Wide
code-creation,BytecodeHandler,0,298645,0x7ff785f8b9e4,816,ModSmi.Wide
code-creation,BytecodeHandler,0,298653,0x7ff785f8bd24,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,298661,0x7ff785f8c0a4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,298669,0x7ff785f8c2a4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,298705,0x7ff785f8c4a4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,298715,0x7ff785f8c6a4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,298723,0x7ff785f8c8a4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,298732,0x7ff785f8caa4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,298740,0x7ff785f8cd44,616,Inc.Wide
code-creation,BytecodeHandler,0,298748,0x7ff785f8cfc4,616,Dec.Wide
code-creation,BytecodeHandler,0,298756,0x7ff785f8d244,648,Negate.Wide
code-creation,BytecodeHandler,0,298764,0x7ff785f8d4e4,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,298772,0x7ff785f8d6e4,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,298781,0x7ff785f8d764,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,298790,0x7ff785f8d7e4,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,298798,0x7ff785f8d824,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,298807,0x7ff785f8dca4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,298870,0x7ff785f8e124,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,298890,0x7ff785f8e524,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,298899,0x7ff785f8e944,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,298908,0x7ff785f8ed64,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,298917,0x7ff785f8f164,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,298926,0x7ff785f8f584,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,298935,0x7ff785f8f9a4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,298944,0x7ff785f8fdc4,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,298953,0x7ff785f90244,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,298962,0x7ff785f902e4,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,298971,0x7ff785f903a4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,298980,0x7ff785f90404,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,298988,0x7ff785f908e4,968,Construct.Wide
code-creation,BytecodeHandler,0,298997,0x7ff785f90cc4,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,299006,0x7ff785f90ea4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,299015,0x7ff785f91664,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,299024,0x7ff785f91aa4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,299032,0x7ff785f920a4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,299041,0x7ff785f926a4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,299050,0x7ff785f92ca4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,299059,0x7ff785f932a4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,299068,0x7ff785f93624,160,TestIn.Wide
code-creation,BytecodeHandler,0,299076,0x7ff785f936e4,116,ToName.Wide
code-creation,BytecodeHandler,0,299084,0x7ff785f93764,216,ToNumber.Wide
code-creation,BytecodeHandler,0,299093,0x7ff785f93844,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,299101,0x7ff785f93944,116,ToObject.Wide
code-creation,BytecodeHandler,0,299110,0x7ff785f939c4,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,299119,0x7ff785f93b64,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,299128,0x7ff785f940e4,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,299137,0x7ff785f94404,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,299146,0x7ff785f94c04,172,CloneObject.Wide
code-creation,BytecodeHandler,0,299155,0x7ff785f94cc4,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,299164,0x7ff785f94d84,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,299172,0x7ff785f94ee4,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,299181,0x7ff785f94f64,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,299190,0x7ff785f95004,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,299199,0x7ff785f95124,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,299208,0x7ff785f95244,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,299217,0x7ff785f952e4,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,299225,0x7ff785f954a4,44,Jump.Wide
code-creation,BytecodeHandler,0,299234,0x7ff785f954e4,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,299242,0x7ff785f95524,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,299251,0x7ff785f95584,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,299261,0x7ff785f955e4,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,299270,0x7ff785f95644,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,299279,0x7ff785f956a4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,299288,0x7ff785f95704,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,299297,0x7ff785f95764,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,299306,0x7ff785f957c4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,299316,0x7ff785f95824,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,299325,0x7ff785f958c4,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,299336,0x7ff785f95964,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,299346,0x7ff785f95a04,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,299355,0x7ff785f95aa4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,299364,0x7ff785f95b04,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,299373,0x7ff785f95b64,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,299381,0x7ff785f95bc4,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,299390,0x7ff785f95c24,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,299399,0x7ff785f95c84,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,299408,0x7ff785f95ce4,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,299418,0x7ff785f95d44,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,299427,0x7ff785f95da4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,299436,0x7ff785f95e24,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,299445,0x7ff785f96004,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,299454,0x7ff785f96104,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,299463,0x7ff785f96144,260,ForInNext.Wide
code-creation,BytecodeHandler,0,299471,0x7ff785f96264,48,ForInStep.Wide
code-creation,BytecodeHandler,0,299480,0x7ff785f962a4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,299489,0x7ff785f96344,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,299525,0x7ff785f96404,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,299537,0x7ff785f96484,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,299547,0x7ff785f966a4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,299556,0x7ff785f96744,156,GetIterator.Wide
code-creation,BytecodeHandler,0,299564,0x7ff785f967e4,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,299573,0x7ff785f96884,56,Abort.Wide
code-creation,BytecodeHandler,0,299582,0x7ff785f968c4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,299591,0x7ff785f96944,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,299625,0x7ff785f969c4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,299634,0x7ff785f96a44,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,299644,0x7ff785f96ac4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,299652,0x7ff785f96b44,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,299661,0x7ff785f96bc4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,299670,0x7ff785f96c04,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,299679,0x7ff785f96c24,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,299688,0x7ff785f96c64,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,299698,0x7ff785f96cc4,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,299707,0x7ff785f96d24,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,299717,0x7ff785f96d64,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,299727,0x7ff785f96da4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,299780,0x7ff785f96dc4,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,299789,0x7ff785f96e04,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,299798,0x7ff785f96e44,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,299807,0x7ff785f96e84,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,299817,0x7ff785f96ec4,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,299826,0x7ff785f98104,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,299836,0x7ff785f99304,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,299845,0x7ff785f993c4,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,299854,0x7ff785f99464,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,299864,0x7ff785f994e4,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,299873,0x7ff785f99584,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,299882,0x7ff785f99684,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,299892,0x7ff785f9a984,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,299912,0x7ff785f9aa24,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,299923,0x7ff785f9ab24,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,299940,0x7ff785f9be04,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,299948,0x7ff785f9bee4,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,299957,0x7ff785f9d344,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,299966,0x7ff785f9d404,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,299975,0x7ff785f9d4a4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,299983,0x7ff785f9d564,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,299992,0x7ff785f9d6a4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,300001,0x7ff785f9d764,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,300009,0x7ff785f9d824,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,300018,0x7ff785f9d8e4,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,300027,0x7ff785f9d9a4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,300035,0x7ff785f9da84,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,300044,0x7ff785f9db44,980,Add.ExtraWide
code-creation,BytecodeHandler,0,300052,0x7ff785f9df24,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,300060,0x7ff785f9e324,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,300068,0x7ff785f9e704,988,Div.ExtraWide
code-creation,BytecodeHandler,0,300076,0x7ff785f9eae4,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,300084,0x7ff785f9ee84,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,300092,0x7ff785f9f264,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,300100,0x7ff785f9f604,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,300108,0x7ff785f9f9a4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,300117,0x7ff785f9fd44,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,300125,0x7ff785fa0104,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,300133,0x7ff785fa04c4,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,300142,0x7ff785fa08e4,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,300151,0x7ff785fa0c84,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,300159,0x7ff785fa1064,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,300167,0x7ff785fa1404,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,300175,0x7ff785fa17a4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,300183,0x7ff785fa1ae4,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,300191,0x7ff785fa1e64,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,300200,0x7ff785fa2064,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,300208,0x7ff785fa2264,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,300217,0x7ff785fa2464,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,300225,0x7ff785fa2664,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,300234,0x7ff785fa2864,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,300242,0x7ff785fa2b04,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,300251,0x7ff785fa2d84,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,300259,0x7ff785fa3004,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,300267,0x7ff785fa32a4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,300276,0x7ff785fa34a4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,300284,0x7ff785fa3524,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,300293,0x7ff785fa35a4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,300303,0x7ff785fa35e4,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,300311,0x7ff785fa3a64,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,300320,0x7ff785fa3ee4,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,300329,0x7ff785fa42e4,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,300337,0x7ff785fa4704,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,300348,0x7ff785fa4b24,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,300358,0x7ff785fa4f24,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,300367,0x7ff785fa5344,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,300376,0x7ff785fa5744,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,300385,0x7ff785fa5b64,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,300394,0x7ff785fa5fe4,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,300402,0x7ff785fa6084,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,300411,0x7ff785fa6144,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,300419,0x7ff785fa61a4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,300428,0x7ff785fa6684,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,300437,0x7ff785fa6a64,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,300446,0x7ff785fa6c44,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,300454,0x7ff785fa7404,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,300463,0x7ff785fa7844,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,300471,0x7ff785fa7e44,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,300480,0x7ff785fa8444,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,300489,0x7ff785fa8a44,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,300497,0x7ff785fa9044,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,300506,0x7ff785fa93c4,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,300514,0x7ff785fa9464,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,300523,0x7ff785fa94e4,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,300531,0x7ff785fa95c4,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,300539,0x7ff785fa96c4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,300548,0x7ff785fa9744,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,300556,0x7ff785fa98e4,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,300565,0x7ff785fa9e64,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,300574,0x7ff785faa184,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,300583,0x7ff785faa984,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,300591,0x7ff785faaa44,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,300600,0x7ff785faab04,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,300636,0x7ff785faac64,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,300647,0x7ff785faace4,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,300656,0x7ff785faad84,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,300664,0x7ff785faaea4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,300673,0x7ff785faafc4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,300682,0x7ff785fab064,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,300690,0x7ff785fab224,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,300698,0x7ff785fab264,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,300707,0x7ff785fab2a4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,300715,0x7ff785fab304,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,300724,0x7ff785fab364,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,300733,0x7ff785fab3c4,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,300751,0x7ff785fab424,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,300760,0x7ff785fab484,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,300769,0x7ff785fab4e4,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,300779,0x7ff785fab544,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,300788,0x7ff785fab5a4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,300798,0x7ff785fab644,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,300856,0x7ff785fab6e4,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,300908,0x7ff785fab784,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,300918,0x7ff785fab824,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,300926,0x7ff785fab884,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,300935,0x7ff785fab8e4,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,300945,0x7ff785fab944,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,300953,0x7ff785fab9a4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,300962,0x7ff785faba04,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,300971,0x7ff785faba64,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,300980,0x7ff785fabac4,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,300989,0x7ff785fabb24,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,300999,0x7ff785fabba4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,301008,0x7ff785fabd84,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,301016,0x7ff785fabe84,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,301025,0x7ff785fabec4,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,301034,0x7ff785fabfe4,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,301043,0x7ff785fac024,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,301052,0x7ff785fac0c4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,301062,0x7ff785fac184,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,301071,0x7ff785fac204,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,301080,0x7ff785fac424,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,301089,0x7ff785fac4a4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,301098,0x7ff785fac544,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,301106,0x7ff785fac5c4,56,Abort.ExtraWide
new,MemoryChunk,0x2df4c3c0000,262144
new,MemoryChunk,0x31a52080000,262144
new,MemoryChunk,0x536dc0000,262144
new,MemoryChunk,0x10440980000,262144
new,MemoryChunk,0x3ed75640000,262144
code-creation,Eval,10,306774,0x3ed7564a91e,5, node:internal/main/run_main_module:1:1,0x3ed7564a7d8,~
script-source,99,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x3ed7564a91e,99,0,649,C0O0C4O649,,
code-creation,Function,10,306876,0x3ed7564a9c6,58, node:internal/main/run_main_module:1:1,0x3ed7564a898,~
code-source-info,0x3ed7564a9c6,99,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,307210,0x3ed7564ac06,76,nativeModuleRequire node:internal/bootstrap/loaders:349:29,0xaf8d7911d8,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Modules that can only be imported via the node: scheme.\x0d\nconst schemelessBlockList = new SafeSet([\x0d\n  'test'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Determine if a core module can be loaded without the node: prefix. This\x0d\n  // function does not validate if the module actually exists.\x0d\n  static canBeRequiredWithoutScheme(id) {\x0d\n    return !schemelessBlockList.has(id);\x0d\n  }\x0d\n\x0d\n  static getSchemeOnlyModuleNames() {\x0d\n    return ArrayFrom(schemelessBlockList);\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x3ed7564ac06,9,11126,11479,C0O11136C2O11147C4O11143C9O11164C13O11185C14O11208C19O11221C24O11225C29O11225C35O11369C37O11379C47O11427C60O11385C65O11379C66O11449C71O11449C75O11476,,
tick,0x7ff82785f25f,308078,0,0x0,3,0x7ff785a454e0,0x3ed7564a9c9
code-creation,LazyCompile,10,308179,0x3ed7564b99e,175,compileForInternalLoader node:internal/bootstrap/loaders:316:27,0xaf8d791108,~
code-source-info,0x3ed7564b99e,9,10306,10889,C0O10325C6O10340C12O10370C16O10378C17O10409C22O10418C23O10431C30O10477C37O10508C45O10477C63O10610C70O10610C75O10646C89O10681C103O10638C108O10721C109O10733C124O10765C126O10778C141O10801C152O10820C160O10852C165O10801C170O10876C174O10884,,
code-creation,Eval,10,308668,0x3ed7564ca3e,5, node:internal/bootstrap/pre_execution:1:1,0x3ed7564c618,~
script-source,100,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C\x0d\n                                    initialzeModules = true) {\x0d\n  refreshRuntimeOptions();\x0d\n\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n  setupCustomEvent();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n\x0d\n  require('internal/v8/startup_snapshot').runDeserializeCallbacks();\x0d\n\x0d\n  if (!initialzeModules) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction refreshRuntimeOptions() {\x0d\n  refreshOptions();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    // Only set it to true during snapshot building.\x0d\n    configurable: getOptionValue('--build-snapshot')\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n\x0d\n  process.exitCode = undefined;\x0d\n  process._exiting = false;\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // We need to initialize the global console here again with process.stdout\x0d\n  // and friends for snapshot deserialization.\x0d\n  const globalConsole = require('internal/console/global');\x0d\n  const { initializeGlobalConsole } = require('internal/console/constructor');\x0d\n  initializeGlobalConsole(globalConsole);\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (!getOptionValue('--experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  emitExperimentalWarning('Fetch');\x0d\n\x0d\n  const undici = require('internal/deps/undici/undici');\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\x0d\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\x0d\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\x0d\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\x0d\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto') });\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.Crypto\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.CryptoKey\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.SubtleCrypto\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(daeyeon): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//                removed.\x0d\nfunction setupCustomEvent() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-customevent')) {\x0d\n    return;\x0d\n  }\x0d\n  const { CustomEvent } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  refreshRuntimeOptions\x2C\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupCustomEvent\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x3ed7564ca3e,100,0,19719,C0O0C4O19719,,
code-creation,Function,10,309725,0x3ed7564d756,530, node:internal/bootstrap/pre_execution:1:1,0x3ed7564c9b8,~
code-source-info,0x3ed7564d756,100,0,19719,C0O0C229O28C235O47C241O72C247O107C253O119C259O135C265O165C271O272C277O272C282O209C288O228C294O251C300O338C306O338C311O310C317O448C323O448C328O378C334O398C340O426C346O496C352O496C357O485C363O558C369O558C374O584C379O524C385O608C391O608C395O608C397O19223C404O19245C410O19271C416O19294C422O19317C428O19341C434O19356C440O19375C446O19396C452O19414C458O19433C464O19464C470O19491C476O19515C482O19546C488O19579C494O19602C500O19630C506O19654C512O19675C518O19699C524O19238C529O19718,,
code-creation,LazyCompile,10,310105,0x3ed7564f23e,273,prepareMainThreadExecution node:internal/bootstrap/pre_execution:29:36,0x3ed7564ca70,~
code-source-info,0x3ed7564f23e
code-creation,LazyCompile,10,310258,0x3ed756507fe,10,refreshRuntimeOptions node:internal/bootstrap/pre_execution:99:31,0x3ed7564cac0,~
code-source-info,0x3ed756507fe,100,2925,2953,C0O2933C5O2933C9O2952,,
code-creation,LazyCompile,10,310306,0x3ed756508e6,22,refreshOptions node:internal/options:39:24,0x2e9b6d3e8c8,~
script-source,95,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction refreshOptions() {\x0d\n  optionsMap = undefined;\x0d\n  aliasesMap = undefined;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x0d\n};\x0d\n
code-source-info,0x3ed756508e6,95,940,1001,C0O948C4O959C10O975C14O986C21O1000,,
code-creation,LazyCompile,10,310514,0x3ed75650c4e,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x2f67da0bdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x3ed75650c4e,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,312718,0x3ed7565353e,460,patchProcessObject node:internal/bootstrap/pre_execution:103:28,0x3ed7564cb10,~
code-source-info,0x3ed7565353e
code-creation,LazyCompile,10,312902,0x3ed756538ce,69,internalBinding node:internal/bootstrap/loaders:171:45,0xaf8d790b60,~
code-source-info,0x3ed756538ce,9,5433,5678,C0O5459C7O5469C11O5484C15O5522C25O5549C30O5547C37O5584C48O5603C56O5639C61O5584C66O5662C68O5673,,
code-creation,LazyCompile,10,313062,0x3ed75653b86,69,refreshHrtimeBuffer node:internal/process/per_thread:67:29,0x2f67da18950,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x3ed75653b86,30,1502,1950,C0O1693C7O1720C10O1728C17O1704C25O1702C31O1883C38O1919C41O1927C53O1900C61O1898C68O1949,,
code-creation,LazyCompile,10,313809,0x3ed75654a4e,82,getOptionValue node:internal/options:44:24,0x2e9b6d3e938,~
code-source-info,0x3ed75654a4e,95,1028,1278,C0O1062C3O1062C7O1108C15O1108C22O1159C30O1181C38O1181C43O1168C47O1159C53O1197C55O1222C60O1228C61O1252C66O1252C74O1267C81O1275,,
code-creation,LazyCompile,10,313888,0x3ed75654ba6,33,getCLIOptionsFromBinding node:internal/options:18:34,0x1d44cc3fce8,~
code-source-info,0x3ed75654ba6,95,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,314503,0x3ed75654e9e,832,resolve node:path:158:10,0x2e9b6d0d510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x3ed75654e9e
code-creation,LazyCompile,10,317664,0x3ed756584b6,30,validateString node:internal/validators:119:24,0x15342189390,~
script-source,16,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!isInt32(value)) {\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (typeof value !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n  }\x0d\n  if (!isUint32(value)) {\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name\x2C min = undefined\x2C max) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n\x0d\n  if ((min != null && value < min) || (max != null && value > max) ||\x0d\n      ((min != null || max != null) && NumberIsNaN(value))) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      name\x2C\x0d\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\x0d\n      value);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nfunction validateUnion(value\x2C name\x2C union) {\x0d\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateUnion\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x3ed756584b6,16,3546,3658,C0O3565C6O3601C22O3607C27O3601C29O3657,,
code-creation,LazyCompile,10,318208,0x3ed75658ed6,17,isPathSeparator node:path:52:25,0x2e9b6d0cf90,~
code-source-info,0x3ed75658ed6,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,318266,0x3ed75658fd6,35,isWindowsDeviceRoot node:path:60:29,0x2e9b6d0d408,~
code-source-info,0x3ed75658fd6,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,318340,0x3ed756590f6,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x2f67da3edd0,~
script-source,98,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x3ed756590f6,98,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,318696,0x3ed7565975e,442,normalizeString node:path:66:25,0x2e9b6d0d458,~
code-source-info,0x3ed7565975e
code-creation,LazyCompile,10,319020,0x3ed75659e16,37,initializeGlobalConsole node:internal/console/constructor:687:33,0x2f67da2a5e0,~
script-source,37,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\n\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (new.target === undefined) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: key\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          __proto__: null\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x0d\n        }\x2C\x0d\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          __proto__: null\x2C\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = stream.isTTY && (\x0d\n          typeof stream.getColorDepth === 'function' ?\x0d\n            stream.getColorDepth() > 2 : true);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    cliTable ??= require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = ObjectCreate(null);\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          map[key] ??= [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nfunction initializeGlobalConsole(globalConsole) {\x0d\n  globalConsole[kBindStreamsLazy](process);\x0d\n  globalConsole[kBindProperties](true\x2C 'auto');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  initializeGlobalConsole\x2C\x0d\n  formatTime // exported for tests\x0d\n};\x0d\n
code-source-info,0x3ed75659e16,37,21084,21198,C0O21105C2O21119C4O21118C11O21136C16O21150C18O21164C20O21163C29O21180C36O21197,,
code-creation,LazyCompile,10,320495,0x3ed7565b7f6,94,value node:internal/console/constructor:200:20,0x2f67da29b60,~
code-source-info,0x3ed7565b7f6,37,5921,6580,C0O5921C15O5943C16O5943C18O5962C19O5962C21O5977C33O6028C38O6130C46O6241C60O6304C65O6406C73O6521C87O5977C93O6579,,
code-creation,LazyCompile,10,321012,0x3ed7565be46,414,value node:internal/console/constructor:230:20,0x2f67da29be8,~
code-source-info,0x3ed7565be46,37,6684,8114,C17O6741C27O6804C34O6848C52O6919C55O6889C73O6991C86O7090C89O7060C104O7140C111O7184C126O7225C129O7225C144O7278C151O7300C166O7334C169O7330C187O7427C191O7437C198O7459C213O7493C216O7489C235O7516C239O7529C246O7551C261O7581C275O7604C279O7617C286O7639C300O7669C314O7687C318O7702C325O7724C340O7754C354O7770C358O7795C365O7839C380O7880C394O7919C398O7939C407O6741C413O8113,,
code-creation,LazyCompile,10,321183,0x3ed7565c2b6,18,createWriteErrorHandler node:internal/console/constructor:354:33,0x2f67da29e90,~
code-source-info,0x3ed7565c2b6,37,10994,11869,C0O10994C13O11024C17O11866,,
code-creation,LazyCompile,10,321300,0x3ed7565c496,27,SafeMap node:internal/per_context/primordials:366:16,0xaf8d78aa58,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\x0d\n  new primordials.SafeArrayIterator(\x0d\n    ArrayPrototypeMap(\x0d\n      promises\x2C\x0d\n      (promise\x2C i) =>\x0d\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x0d\n    )\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any[]>}\x0d\n */\x0d\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<PromiseSettledResult<any>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any>}\x0d\n */\x0d\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any>}\x0d\n */\x0d\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x3ed7565c496,6,10966,10983,C3O10972C7O10978C11O10972C26O10982,,
code-creation,LazyCompile,10,322436,0x3ed7565d5a6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:155:33,0x3ed7564cb60,~
code-source-info,0x3ed7565d5a6,100,5153,5412,C16O5206C21O5206C26O5233C28O5251C36O5281C43O5371C49O5390C56O5251C62O5411,,
code-creation,LazyCompile,10,322543,0x3ed7565d70e,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:318:33,0x3ed7564cf20,~
code-source-info,0x3ed7565d70e,100,10053,10284,C0O10096C6O10096C11O10069C16O10169C22O10169C27O10140C32O10212C35O10237C40O10212C45O10283,,
code-creation,LazyCompile,10,322734,0x3ed7565d8a6,77,toggleTraceCategoryState node:internal/process/per_thread:397:34,0x2f67da19070,~
code-source-info,0x3ed7565d8a6,30,11761,12068,C0O11786C4O11816C10O11852C16O11884C21O11928C26O11929C33O11873C39O11955C44O11976C49O11976C55O11996C61O12029C66O12050C71O12050C76O12067,,
code-creation,LazyCompile,10,322852,0x3ed7565da56,42,setupPerfHooks node:internal/bootstrap/pre_execution:324:24,0x3ed7564cf70,~
code-source-info,0x3ed7565da56,100,10311,10434,C0O10319C6O10319C11O10355C16O10356C20O10380C26O10380C31O10410C36O10411C41O10433,,
code-creation,LazyCompile,10,323003,0x3ed7565dbd6,42,refreshTimeOrigin node:internal/perf/performance:217:27,0x1d7f542e900,~
tick,0x7ff785e323c7,323023,0,0x0,2,0x7ff785a454e0,0x3ed7565da66,0x3ed7564f270,0x3ed7564a9d5
script-source,76,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst { markResourceTiming } = require('internal/perf/resource_timing');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearResourceTimings(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('resource'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  clearResourceTimings: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearResourceTimings\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  // In the browser\x2C this function is not public.  However\x2C it must be used inside fetch\x0d\n  // which is a Node.js dependency\x2C not a internal module\x0d\n  markResourceTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: markResourceTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x3ed7565dbd6,76,4969,5154,C0O4977C7O4998C10O5010C25O5119C28O5119C35O4977C41O5153,,
code-creation,LazyCompile,10,323471,0x3ed7565e426,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x2e9b6d27e10,~
script-source,48,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x3ed7565e426,48,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,323585,0x3ed7565e696,62,setupInspectorHooks node:internal/bootstrap/pre_execution:329:29,0x3ed7564cfc0,~
code-source-info,0x3ed7565e696,100,10466,11032,C0O10815C6O10819C11O10844C17O10913C23O10913C28O10881C33O10896C38O10960C44O10960C49O10988C54O10989C61O11031,,
code-creation,Eval,10,323747,0x3ed7565ea2e,5, node:internal/inspector_async_hook:1:1,0x3ed7565e878,~
script-source,101,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x3ed7565ea2e,101,0,2048,C0O0C4O2048,,
code-creation,Function,10,323907,0x3ed7565ec4e,79, node:internal/inspector_async_hook:1:1,0x3ed7565e9a8,~
code-source-info,0x3ed7565ec4e,101,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
new,MemoryChunk,0x1c660980000,262144
code-creation,Function,11,324126,0x1c660983060,664,nativeModuleRequire node:internal/bootstrap/loaders:349:29,0xaf8d7911d8,^
code-source-info,0x1c660983060,9,11126,11479,,,
code-creation,Function,11,324162,0x1c660983360,216,isPathSeparator node:path:52:25,0x2e9b6d0cf90,^
code-source-info,0x1c660983360,41,1794,1876,,,
code-creation,Function,11,324228,0x1c6609834a0,3076,normalizeString node:path:66:25,0x2e9b6d0d458,^
code-source-info,0x1c6609834a0,41,2226,4212,,,
code-creation,LazyCompile,10,324315,0x3ed7565f44e,69,setupWarningHandler node:internal/bootstrap/pre_execution:168:29,0x3ed7564cbb0,~
code-source-info,0x3ed7565f44e,100,5444,5649,C0O5482C6O5482C11O5465C16O5522C24O5526C33O5571C38O5575C45O5592C50O5608C53O5616C61O5616C68O5648,,
code-creation,LazyCompile,10,324488,0x3ed7565f6c6,20,addListener node:events:604:58,0x153421af688,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  identicalSequenceRange\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      // EventTarget does not have `error` event semantics like Node\x0d\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    emitter.addEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x3ed7565f6c6,23,18313,18387,C0O18335C14O18342C19O18384,,
code-creation,LazyCompile,10,326720,0x3ed75661d1e,378,_addListener node:events:541:22,0x153421af5e8,~
code-source-info,0x3ed75661d1e
code-creation,LazyCompile,10,326882,0x3ed7566202e,15,checkListener node:events:265:23,0x153421aef98,~
code-source-info,0x3ed7566202e,23,7994,8052,C0O8010C8O8010C14O8051,,
code-creation,LazyCompile,10,326936,0x3ed7566211e,30, node:internal/validators:245:42,0x15342189828,~
code-source-info,0x3ed7566211e,16,7817,7936,C0O7839C6O7877C22O7883C27O7877C29O7935,,
code-creation,LazyCompile,10,327090,0x3ed75662386,380,emit node:events:460:44,0x153421af528,~
code-source-info,0x3ed
code-creation,LazyCompile,10,327290,0x3ed7566272e,172,startListeningIfSignal node:internal/process/signal:22:32,0x2f67da3db90,~
script-source,97,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x3ed7566272e,97,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,327455,0x3ed75662aee,19,isSignal node:internal/process/signal:17:18,0x2f67da3d9d8,~
code-source-info,0x3ed75662aee,97,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,327564,0x3ed75662d26,156,setupFetch node:internal/bootstrap/pre_execution:179:20,0x3ed7564cc00,~
code-source-info,0x3ed75662d26,100,5707,6176,C0O5715C8O5720C14O5767C15O5774C16O5785C24O5785C28O5839C34O5839C39O5882C46O5898C52O5926C57O5882C62O5937C69O5953C75O5984C80O5937C85O5998C92O6014C98O6044C103O5998C108O6057C115O6073C121O6103C126O6057C131O6116C138O6132C144O6163C149O6116C155O6175,,
code-creation,LazyCompile,10,327749,0x3ed75663256,280,setupWebCrypto node:internal/bootstrap/pre_execution:196:24,0x3ed7564cc50,~
code-source-info,0x3ed75663256,100,6309,7539,C0O6309C8O6317C13O6329C18O6336C23O6346C33O6381C39O6381C45O6439C46O6446C47O6461C48O6461C50O6475C61O6496C76O6564C107O6564C120O6475C125O6843C133O6847C138O6872C144O6892C158O6906C162O6902C164O6949C175O6970C189O7118C197O6949C202O7139C213O7160C227O7311C235O7139C240O7335C251O7356C265O7510C273O7335C279O7538,,
code-creation,LazyCompile,10,327910,0x3ed756634de,5,get node:internal/bootstrap/node:136:6,0xaf8d795f78,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\nif (!config.noBrowserGlobals) {\x0d\n  // Override global console from the one provided by the VM\x0d\n  // to the one implemented by Node.js\x0d\n  // https://console.spec.whatwg.org/#console-namespace\x0d\n  exposeNamespace(globalThis\x2C 'console'\x2C\x0d\n                  createGlobalConsole(globalThis.console));\x0d\n\x0d\n  const { URL\x2C URLSearchParams } = require('internal/url');\x0d\n  // https://url.spec.whatwg.org/#url\x0d\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams\x0d\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\x0d\n\x0d\n  const {\x0d\n    TextEncoder\x2C TextDecoder\x0d\n  } = require('internal/encoding');\x0d\n  // https://encoding.spec.whatwg.org/#textencoder\x0d\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\x0d\n  // https://encoding.spec.whatwg.org/#textdecoder\x0d\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\x0d\n\x0d\n  const {\x0d\n    AbortController\x2C\x0d\n    AbortSignal\x2C\x0d\n  } = require('internal/abort_controller');\x0d\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\x0d\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\x0d\n\x0d\n  const {\x0d\n    EventTarget\x2C\x0d\n    Event\x2C\x0d\n  } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\x0d\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\x0d\n  const {\x0d\n    MessageChannel\x2C\x0d\n    MessagePort\x2C\x0d\n    MessageEvent\x2C\x0d\n  } = require('internal/worker/io');\x0d\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\x0d\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\x0d\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\x0d\n  const timers = require('timers');\x0d\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\x0d\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\x0d\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\x0d\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\x0d\n\x0d\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\x0d\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\x0d\n                            require('perf_hooks').performance);\x0d\n\x0d\n  // Non-standard extensions:\x0d\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n}\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because snapshot is built without code cache.\x0d\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\x0d\n  // Make it possible to build snapshot with code cache\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n  // Make process globally available to users by putting it on the global proxy\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: process\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n  globalThis.global = globalThis;\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n    atob\x2C\x0d\n    btoa\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    'Buffer': {\x0d\n      __proto__: null\x2C\x0d\n      value: Buffer\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'atob': {\x0d\n      __proto__: null\x2C\x0d\n      value: atob\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'btoa': {\x0d\n      __proto__: null\x2C\x0d\n      value: btoa\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction createGlobalConsole(consoleFromVM) {\x0d\n  const consoleFromNode =\x0d\n    require('internal/console/global');\x0d\n  if (config.hasInspector) {\x0d\n    const inspector = require('internal/util/inspector');\x0d\n    // This will be exposed by `require('inspector').console` later.\x0d\n    inspector.consoleFromVM = consoleFromVM;\x0d\n    // TODO(joyeecheung): postpone this until the first time inspector\x0d\n    // is activated.\x0d\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\x0d\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\x0d\n    // Setup inspector command line API.\x0d\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\x0d\n  }\x0d\n  return consoleFromNode;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#Replaceable\x0d\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x3ed756634de,10,4287,4315,C0O4292C4O4313,,
code-creation,LazyCompile,10,329035,0x3ed756646c6,52,get node:internal/bootstrap/node:112:6,0xaf8d795ed8,~
code-source-info,0x3ed756646c6,10,3630,3901,C0O3673C14O3673C20O3713C29O3830C35O3852C43O3837C48O3872C49O3885C51O3896,,
code-creation,LazyCompile,10,329129,0x3ed75664886,74,setupCustomEvent node:internal/bootstrap/pre_execution:238:26,0x3ed7564ccc8,~
code-source-info,0x3ed75664886,100,7676,7944,C0O7684C3O7696C8O7703C13O7713C21O7748C27O7748C33O7808C34O7815C35O7848C41O7848C46O7832C51O7885C58O7901C67O7885C73O7943,,
code-creation,LazyCompile,10,329225,0x3ed75664a76,75,setupDebugEnv node:internal/bootstrap/pre_execution:290:23,0x3ed7564ce30,~
code-source-info,0x3ed75664a76,100,9275,9490,C0O9283C6O9283C11O9316C19O9344C24O9348C29O9317C34O9364C42O9368C48O9413C54O9413C59O9450C64O9463C69O9464C74O9489,,
code-creation,LazyCompile,10,329352,0x3ed75664e0e,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x153421a5818,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x3ed75664e0e,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,329653,0x3ed7566541e,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:268:40,0x3ed7564cd68,~
code-source-info,0x3ed7566541e,100,8797,8991,C0O8805C8O8810C14O8851C15O8858C16O8894C22O8894C27O8875C32O8946C38O8980C43O8980C48O8990,,
code-creation,LazyCompile,10,329730,0x3ed75665636,62,initializeReport node:internal/bootstrap/pre_execution:278:26,0x3ed7564cdb8,~
code-source-info,0x3ed75665636,100,9020,9249,C0O9020C8O9047C16O9047C21O9036C27O9086C42O9107C47O9203C55O9086C61O9248,,
code-creation,Eval,10,329936,0x3ed75665ba6,5, node:internal/process/report:1:1,0x3ed756659b0,~
script-source,102,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x3ed75665ba6,102,0,2666,C0O0C4O2666,,
code-creation,Function,10,330132,0x3ed756666b6,306, node:internal/process/report:1:1,0x3ed75665b20,~
code-source-info,0x3ed756666b6,102,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,330406,0x3ed7566851e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:298:40,0x3ed7564ce80,~
code-source-info,0x3ed7566851e,100,9594,9694,C0O9631C6O9631C11O9610C16O9672C20O9693,,
code-creation,LazyCompile,10,330479,0x3ed75668626,57,addSignalHandler node:internal/process/report:98:26,0x3ed75665bd8,~
code-source-info,0x3ed75668626,102,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,330555,0x3ed75668bee,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:304:46,0x3ed7564ced0,~
code-source-info,0x3ed75668bee,100,9743,10017,C0O9743C8O9766C18O9766C23O9812C25O9830C26O9837C27O9843C35O9843C40O9873C45O9874C50O9935C58O9935C63O9913C69O9955C74O9963C79O9966C84O9963C91O10016,,
code-creation,LazyCompile,10,330682,0x3ed75668e7e,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:437:37,0x3ed7564d0a0,~
code-source-info,0x3ed75668e7e,100,13955,14501,C0O13963C3O13975C8O13979C14O14018C20O14018C25O14064C33O14087C38O14091C46O14064C52O14118C53O14128C57O14118C61O14212C64O14227C73O14288C76O14296C81O14300C90O14348C93O14363C102O14407C108O14407C113O14431C118O14432C124O14472C127O14487C132O14472C137O14500,,
code-creation,LazyCompile,10,330808,0x3ed7566900e,21,assert node:internal/assert:11:16,0x153421a47d8,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x3ed7566900e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,331571,0x3ed75669e96,5, node:child_process:1:1,0x3ed756699b0,~
script-source,103,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = kEmptyObject;\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file) !== null) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x3ed75669e96,103,0,25941,C0O0C4O25941,,
code-creation,Function,10,333259,0x3ed7566a8fe,757, node:child_process:1:1,0x3ed75669e10,~
code-source-info,0x3ed7566a8fe
code-creation,LazyCompile,10,333658,0x3ed7566cf3e,82,debuglog node:internal/util/debuglog:71:18,0x153421a5b68,~
code-source-info,0x3ed7566cf3e,22,2302,3350,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3238C74O3169C79O3333C81O3347,,
code-creation,Eval,10,334634,0x3ed7566ff0e,5, node:internal/child_process:1:1,0x3ed7566f810,~
script-source,104,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x3ed7566ff0e,104,0,32672,C0O0C4O32672,,
code-creation,Function,10,336416,0x3ed7567152e,1265, node:internal/child_process:1:1,0x3ed7566fe88,~
code-source-info,0x3ed7567152e,104,0,32672,C0O0C296O28C302O45C308O68C314O93C320O117C325O139C331O165C337O190C342O215C348O232C354O257C359O268C365O594C371O594C376O312C387O345C393O372C399O400C405O430C411O464C417O493C423O520C429O543C435O567C441O710C447O710C452O634C458O652C464O671C470O689C476O764C482O764C486O764C488O796C494O796C498O796C500O827C506O827C510O827C512O862C518O862C523O894C527O862C529O920C535O920C539O920C541O971C544O971C549O959C555O1119C558O1119C563O1016C569O1030C575O1052C581O1075C587O1098C593O1195C596O1195C601O1160C607O1177C613O1242C616O1242C621O1234C627O1288C630O1288C635O1280C641O1334C644O1334C649O1326C655O1383C661O1383C666O1442C672O1442C677O1473C682O1425C688O1528C694O1528C699O1492C705O1514C711O1585C717O1585C722O1563C728O1637C731O1637C735O1637C737O1694C743O1694C748O1677C754O1847C757O1847C762O1735C768O1749C774O1763C780O1777C786O1791C792O1805C798O1819C804O1833C810O1881C816O1897C822O2057C823O2057C825O2074C826O2074C828O2124C830O2124C832O2151C835O2151C839O2151C841O2201C844O2201C848O2201C850O2253C853O2253C857O2253C859O2410C864O2429C869O2470C877O2540C891O2622C896O2663C904O2741C918O2913C923O2920C931O4529C939O5300C953O5801C958O5843C966O5913C980O5997C985O6039C993O6172C1009O2410C1011O8250C1019O8274C1024O8216C1029O8287C1032O8287C1037O9335C1046O9351C1050O13291C1059O13306C1063O14018C1072O14032C1076O14110C1085O14126C1137O14213C1193O14191C1195O15263C1200O15290C1203O15263C1205O15367C1206O15367C1208O27916C1210O27916C1212O28259C1214O28259C1216O32541C1223O32563C1229O32580C1235O32599C1241O32616C1247O32634C1253O32657C1259O32556C1264O32671,,
code-creation,Function,10,336679,0x3ed75671ca6,35,<instance_members_initializer> node:internal/child_process:525:3,0x3ed75670bf0,~
code-source-info,0x3ed75671ca6,104,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
tick,0x7ff785ab77a3,337874,1,0x7ff7854d2120,2,0x7ff785e168e0,0x3ed7564b9e4,0x1c6609832e5,0x3ed7567171c,0x3ed7564ba05,0x1c6609832e5,0x3ed7566ab4b,0x3ed7564ba05,0x1c6609832e5,0x3ed75668eea,0x3ed7564f2e0,0x3ed7564a9d5
code-creation,Eval,10,338343,0x3ed756760d6,5, node:net:1:1,0x3ed75675878,~
script-source,105,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!this._handle.setKeepAlive) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (enable !== this[kSetKeepAlive] ||\x0d\n      (\x0d\n        enable &&\x0d\n        this[kSetKeepAliveInitialDelay] !== initialDelay\x0d\n      )\x0d\n  ) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.resetAndDestroy = function() {\x0d\n  if (this._handle) {\x0d\n    if (!(this._handle instanceof TCP))\x0d\n      throw new ERR_INVALID_HANDLE_TYPE();\x0d\n    if (this.connecting) {\x0d\n      debug('reset wait for connection');\x0d\n      this.once('connect'\x2C () => this._reset());\x0d\n    } else {\x0d\n      this._reset();\x0d\n    }\x0d\n  } else {\x0d\n    this.destroy(new ERR_SOCKET_CLOSED());\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    if (this.resetAndClosing) {\x0d\n      this.resetAndClosing = false;\x0d\n      const err = this._handle.reset(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n      if (err)\x0d\n        this.emit('error'\x2C errnoException(err\x2C 'reset'));\x0d\n    } else {\x0d\n      this._handle.close(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n    }\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._reset = function() {\x0d\n  debug('reset connection');\x0d\n  this.resetAndClosing = true;\x0d\n  return this.destroy();\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getpeername(out);\x0d\n    if (err) return out;\x0d\n    this._peername = out;\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\x0d\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\x0d\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\x0d\n    }\x0d\n  } else {\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C\x0d\n                    pipeName\x2C\x0d\n                    -1\x2C\x0d\n                    -1\x2C\x0d\n                    backlog\x2C\x0d\n                    undefined\x2C\x0d\n                    options.exclusive\x2C\x0d\n                    undefined\x2C\x0d\n                    {\x0d\n                      readableAll: options.readableAll\x2C\x0d\n                      writableAll: options.writableAll\x2C\x0d\n                    });\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    if (clientHandle.getsockname || clientHandle.getpeername) {\x0d\n      const data = ObjectCreate(null);\x0d\n      if (clientHandle.getsockname) {\x0d\n        const localInfo = ObjectCreate(null);\x0d\n        clientHandle.getsockname(localInfo);\x0d\n        data.localAddress = localInfo.address;\x0d\n        data.localPort = localInfo.port;\x0d\n      }\x0d\n      if (clientHandle.getpeername) {\x0d\n        const remoteInfo = ObjectCreate(null);\x0d\n        clientHandle.getpeername(remoteInfo);\x0d\n        data.remoteAddress = remoteInfo.address;\x0d\n        data.remotePort = remoteInfo.port;\x0d\n        data.remoteFamily = remoteInfo.family;\x0d\n      }\x0d\n      self.emit('drop'\x2C data);\x0d\n    } else {\x0d\n      self.emit('drop');\x0d\n    }\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && clientHandle.setNoDelay) {\x0d\n    socket[kSetNoDelay] = true;\x0d\n    clientHandle.setNoDelay(true);\x0d\n  }\x0d\n  if (self.keepAlive && clientHandle.setKeepAlive) {\x0d\n    socket[kSetKeepAlive] = true;\x0d\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\x0d\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x3ed756760d6,105,0,53892,C0O0C4O53892,,
code-creation,Function,10,341549,0x3ed75679126,2694, node:net:1:1,0x3ed75676050,~
code-source-info,0x3ed75679126,105,0,53892,C0O0C435O1183C441O1200C447O1226C453O1238C459O1249C465O1265C471O1284C477O1309C482O1334C487O1345C493O1401C499O1401C503O1401C505O1436C511O1436C515O1436C517O1468C523O1468C528O1501C542O1502C548O1468C550O1635C556O1635C561O1560C567O1569C572O1580C577O1591C583O1616C589O1676C595O1676C599O1676C601O1765C604O1765C609O1716C615O1734C621O1748C627O1810C633O1810C638O1799C644O1858C647O1858C652O1838C658O1909C661O1909C666O1892C672O2009C675O2009C680O1953C686O1961C692O1991C698O2109C701O2109C706O2050C712O2059C718O2090C724O2245C730O2245C735O2151C741O2166C752O2208C758O2225C764O2455C770O2455C775O2290C781O2308C787O2325C793O2342C798O2363C804O2375C809O2392C814O2413C820O2425C826O2439C832O2903C838O2903C843O2903C848O2522C854O2555C860O2582C866O2610C872O2636C878O2665C884O2695C890O2727C896O2756C902O2780C908O2807C914O2826C920O2852C926O2873C932O2957C938O2957C943O2940C949O3120C955O3120C960O3001C966O3025C972O3046C978O3064C984O3083C990O3100C996O3181C999O3181C1003O3181C1005O3283C1011O3283C1016O3223C1022O3256C1028O3366C1029O3366C1031O3380C1032O3380C1034O3390C1035O3390C1037O3406C1038O3406C1040O3449C1046O3449C1051O3432C1057O3490C1063O3490C1068O3477C1074O3547C1076O3547C1078O3585C1080O3585C1082O3612C1085O3620C1092O3629C1095O3612C1097O3658C1101O3658C1103O3707C1106O3707C1110O3707C1112O3803C1118O3803C1123O3758C1129O3774C1135O3788C1141O7427C1144O7427C1148O7427C1150O7472C1153O7472C1157O7472C1159O7518C1162O7518C1166O7518C1168O7564C1171O7564C1175O7564C1177O7624C1180O7624C1184O7624C1186O12306C1189O12334C1197O12352C1202O12359C1207O12306C1212O12372C1218O12408C1223O12372C1228O12451C1231O12458C1240O12480C1244O12716C1247O12723C1256O12740C1260O14310C1263O14317C1270O14338C1274O14363C1277O14370C1286O14391C1290O14919C1293O14926C1302O14947C1306O15348C1309O15355C1318O15378C1322O16019C1325O16026C1334O16044C1338O16099C1344O16127C1358O16183C1366O16099C1371O16238C1377O16266C1391O16313C1399O16238C1404O16405C1410O16433C1424O16488C1432O16405C1437O16825C1443O16853C1457O16908C1465O16825C1470O17001C1476O17029C1481O17040C1487O17084C1498O17001C1503O17465C1506O17472C1515O17488C1519O17735C1522O17742C1531O17756C1535O17955C1538O17962C1547O17988C1555O18359C1558O18366C1567O18382C1575O18736C1578O18743C1587O18760C1595O18959C1598O18966C1607O18981C1615O19335C1618O19342C1627O19364C1635O19528C1638O19535C1647O19554C1655O20856C1658O20863C1667O20880C1675O20990C1678O20997C1687O21020C1695O21507C1703O21507C1713O21631C1721O21631C1731O21734C1739O21734C1749O21834C1757O21834C1767O21930C1770O21937C1779O21960C1787O22254C1795O22254C1805O22357C1813O22357C1823O22451C1826O22458C1831O22468C1835O22486C1843O22542C1846O22549C1855O22573C1863O23372C1866O23379C1875O23397C1883O23476C1886O23483C1895O23500C1903O23751C1911O23751C1921O23895C1929O23895C1939O27685C1942O27692C1951O27710C1959O32265C1962O32272C1971O32286C1979O32493C1982O32500C1991O32516C1999O36136C2002O36164C2014O36188C2023O36136C2033O36201C2039O36201C2049O40322C2052O40329C2063O40348C2071O41890C2074O41897C2087O41914C2095O46281C2101O46309C2122O46363C2134O46281C2144O46461C2147O46468C2160O46486C2168O48663C2171O48670C2184O48695C2192O49492C2195O49499C2208O49515C2216O50426C2219O50433C2232O50463C2240O50963C2243O50970C2255O50993C2268O51017C2276O51350C2282O51375C2303O51420C2315O51461C2327O51350C2337O51511C2343O51539C2360O51586C2372O51622C2384O51511C2394O51667C2397O51674C2410O51697C2418O51952C2421O51959C2434O51973C2442O52085C2445O52092C2458O52108C2466O52225C2468O52281C2469O52281C2471O52290C2482O52314C2483O52314C2485O52340C2494O53070C2499O53352C2509O53395C2519O53434C2529O53452C2539O53720C2549O53750C2559O53762C2569O53785C2579O53802C2589O53821C2599O53832C2609O53843C2619O53862C2684O53367C2693O53891,,
code-creation,Eval,10,342604,0x3ed7567eebe,5, node:internal/net:1:1,0x3ed7567ecf8,~
script-source,106,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x3ed7567eebe,106,0,1818,C0O0C4O1818,,
code-creation,Function,10,342755,0x3ed7567f2ae,617, node:internal/net:1:1,0x3ed7567ee38,~
code-source-info,0x3ed7567f2ae,106,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
new,MemoryChunk,0x18a5eb00000,262144
code-creation,Eval,10,343205,0x3ed7567ffd6,5, node:internal/dtrace:1:1,0x104409bfed0,~
script-source,107,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x3ed7567ffd6,107,0,589,C0O0C4O589,,
code-creation,Function,10,343274,0x18a5eb015be,140, node:internal/dtrace:1:1,0x104409bff90,~
code-source-info,0x18a5eb015be,107,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,343573,0x18a5eb0254e,34,protoGetter node:net:796:21,0x3ed75676518,~
code-source-info,0x18a5eb0254e,105,21335,21503,C0O21357C8O21385C13O21396C20O21485C27O21357C33O21502,,
code-creation,Eval,10,344427,0x18a5eb07c46,5, node:dgram:1:1,0x18a5eb076d0,~
script-source,108,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  state.handle.onerror = onError;\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onError(nread\x2C handle\x2C error) {\x0d\n  const self = handle[owner_symbol];\x0d\n  return self.emit('error'\x2C error);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x18a5eb07c46,108,0,28578,C0O0C4O28578,,
code-creation,Function,10,346107,0x18a5eb09bae,1507, node:dgram:1:1,0x18a5eb07bc0,~
code-source-info,0x18a5eb09bae
code-creation,Eval,10,346793,0x18a5eb0d03e,5, node:internal/dgram:1:1,0x18a5eb0ce38,~
script-source,109,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x18a5eb0d03e,109,0,1941,C0O0C4O1941,,
code-creation,Function,10,346970,0x18a5eb0d306,196, node:internal/dgram:1:1,0x18a5eb0cfb8,~
code-source-info,0x18a5eb0d306,109,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
code-creation,LazyCompile,10,347324,0x18a5eb0fbc6,152,deprecate node:internal/util:96:19,0x15342185bf0,~
script-source,15,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { __proto__: null\x2C value: type.name }\x2C\x0d\n    length: { __proto__: null\x2C value: type.length }\x2C\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\x0d\n        continue;\x0d\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\nObjectFreeze(kEnumerableProperty);\x0d\n\x0d\nconst kEmptyObject = ObjectFreeze(ObjectCreate(null));\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0x18a5eb0fbc6,15,2496,3713,C0O2496C26O2517C31O2529C37O2543C42O2560C44O2570C45O2629C53O2668C61O2690C66O2671C83O2728C87O2757C100O2757C105O2805C106O2805C108O3400C121O3400C126O3441C129O3448C135O3645C141O3671C145O3666C149O3692C151O3710,,
code-creation,Function,11,348408,0x1c660984120,1344,deprecate node:internal/util:96:19,0x15342185bf0,^
code-source-info,0x1c660984120,15,2496,3713,,,
code-creation,Function,11,348448,0x1c6609846c0,572,getOptionValue node:internal/options:44:24,0x2e9b6d3e938,^
code-source-info,0x1c6609846c0,95,1028,1278,,,
code-creation,Function,11,348489,0x1c660984960,1252,compileForInternalLoader node:internal/bootstrap/loaders:316:27,0xaf8d791108,^
code-source-info,0x1c660984960,9,10306,10889,,,
code-creation,Function,11,348525,0x1c660984ec0,548,internalBinding node:internal/bootstrap/loaders:171:45,0xaf8d790b60,^
code-source-info,0x1c660984ec0,9,5433,5678,,,
code-creation,Eval,10,348810,0x18a5eb122d6,5, node:internal/socket_list:1:1,0x18a5eb12180,~
script-source,110,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x18a5eb122d6,110,0,2813,C0O0C4O2813,,
code-creation,Function,10,349003,0x18a5eb12916,126, node:internal/socket_list:1:1,0x18a5eb12250,~
code-source-info,0x18a5eb12916,110,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,349273,0x18a5eb134c6,14,customPromiseExecFunction node:child_process:231:35,0x3ed7566a478,~
code-source-info,0x18a5eb134c6,103,6853,7233,C0O6853C9O6868C13O7230,,
code-creation,LazyCompile,10,349375,0x18a5eb1555e,129,_forkChild node:child_process:170:20,0x3ed75669f18,~
code-source-info,0x18a5eb1555e,103,5092,5574,C0O5092C8O5156C19O5165C22O5179C29O5156C35O5190C40O5190C45O5205C50O5205C54O5233C72O5233C77O5233C79O5281C84O5289C97O5289C103O5424C108O5432C121O5432C128O5573,,
tick,0x7ff8278cd604,352936,1,0x7ff785451340,6,0x7ff785e168e0,0x18a5eb15586,0x3ed75668ef4,0x3ed7564f2e0,0x3ed7564a9d5
code-creation,LazyCompile,10,355331,0x18a5eb15f5e,396,setupChannel node:internal/child_process:571:22,0x3ed756701c0,~
code-source-info,0x18a5eb15f5e
code-creation,LazyCompile,10,355512,0x18a5eb1873e,72,Control node:internal/child_process:529:14,0x3ed756709f8,~
code-source-info,0x18a5eb1873e,104,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,355573,0x18a5eb18876,21,EventEmitter node:events:212:22,0x153421aee50,~
code-source-info,0x18a5eb18876,23,6524,6574,C0O6536C3O6549C8O6554C13O6554C20O6573,,
code-creation,LazyCompile,10,355668,0x18a5eb189be,149,EventEmitter.init node:events:337:29,0x153421af248,~
code-source-info,0x18a5eb189be,23,10180,10788,C0O10203C6O10240C13O10252C16O10252C21O10278C25O10248C30O10295C32O10310C37O10310C41O10308C45O10335C46O10353C50O10394C60O10387C64O10429C71O10437C80O10465C85O10486C93O10465C98O10540C100O10545C105O10557C108O10570C113O10557C117O10555C123O10730C125O10735C131O10760C138O10770C140O10769C143O10745C148O10787,,
code-creation,Eval,10,356068,0x18a5eb192e6,5, node:internal/child_process/serialization:1:1,0x18a5eb18fe0,~
script-source,111,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kMessageBufferSize = Symbol('kMessageBufferSize');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = [];\x0d\n    channel[kMessageBufferSize] = 0;\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    ArrayPrototypePush(channel[kMessageBuffer]\x2C readData);\x0d\n    channel[kMessageBufferSize] += readData.length;\x0d\n\x0d\n    // Index 0 should always be present because we just pushed data into it.\x0d\n    let messageBufferHead = channel[kMessageBuffer][0];\x0d\n    while (messageBufferHead.length >= 4) {\x0d\n      // We call `readUInt32BE` manually here\x2C because this is faster than first converting\x0d\n      // it to a buffer and using `readUInt32BE` on that.\x0d\n      const fullMessageSize = (\x0d\n        messageBufferHead[0] << 24 |\x0d\n        messageBufferHead[1] << 16 |\x0d\n        messageBufferHead[2] << 8 |\x0d\n        messageBufferHead[3]\x0d\n      ) + 4;\x0d\n\x0d\n      if (channel[kMessageBufferSize] < fullMessageSize) break;\x0d\n\x0d\n      const concatenatedBuffer = channel[kMessageBuffer].length === 1 ?\x0d\n        channel[kMessageBuffer][0] :\x0d\n        Buffer.concat(\x0d\n          channel[kMessageBuffer]\x2C\x0d\n          channel[kMessageBufferSize]\x0d\n        );\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(concatenatedBuffer\x2C 4\x2C fullMessageSize)\x0d\n      );\x0d\n\x0d\n      messageBufferHead = TypedArrayPrototypeSubarray(concatenatedBuffer\x2C fullMessageSize);\x0d\n      channel[kMessageBufferSize] = messageBufferHead.length;\x0d\n      channel[kMessageBuffer] =\x0d\n        channel[kMessageBufferSize] !== 0 ? [messageBufferHead] : [];\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n\x0d\n    channel.buffering = channel[kMessageBufferSize] > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    // Add 4 bytes\x2C to later populate with message length\x0d\n    ser.writeRawBytes(Buffer.allocUnsafe(4));\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const serializedMessageLength = serializedMessage.length - 4;\x0d\n\x0d\n    serializedMessage.set([\x0d\n      serializedMessageLength >> 24 & 0xFF\x2C\x0d\n      serializedMessageLength >> 16 & 0xFF\x2C\x0d\n      serializedMessageLength >> 8 & 0xFF\x2C\x0d\n      serializedMessageLength & 0xFF\x2C\x0d\n    ]\x2C 0);\x0d\n\x0d\n    const result = channel.writeBuffer(req\x2C serializedMessage\x2C handle);\x0d\n\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = serializedMessage;\x0d\n\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x18a5eb192e6,111,0,5522,C0O0C4O5522,,
code-creation,Function,10,356387,0x18a5eb19b5e,390, node:internal/child_process/serialization:1:1,0x18a5eb19260,~
code-source-info,0x18a5eb19b5e,111,0,5522,C0O0C62O28C68O42C74O60C80O85C86O108C91O119C97O186C100O186C105O175C111O232C114O232C119O214C125O271C128O271C133O317C136O317C141O295C147O365C150O365C154O365C156O442C159O442C164O402C170O419C176O500C179O500C183O500C185O554C188O554C192O554C194O605C197O605C201O605C203O652C206O652C210O652C212O915C213O915C215O950C217O950C223O994C258O954C264O1318C299O1276C301O1776C306O1781C314O1927C322O3502C333O4379C338O4384C346O4499C354O5309C365O5484C372O5503C378O5513C384O5499C389O5521,,
code-creation,LazyCompile,10,356652,0x18a5eb1a756,23,initMessageChannel node:internal/child_process/serialization:132:21,0x18a5eb19548,~
code-source-info,0x18a5eb1a756,111,4402,4492,C0O4419C2O4427C7O4440C11O4451C13O4459C17O4475C22O4491,,
code-creation,LazyCompile,10,356761,0x18a5eb1b07e,19,_getMaxListeners node:events:414:26,0x153421af418,~
code-source-info,0x18a5eb1b07e,23,12446,12574,C0O12467C6O12501C9O12521C13O12541C14O12557C18O12571,,
code-creation,LazyCompile,10,356817,0x18a5eb1b176,5,get node:events:272:16,0x153421af038,~
code-source-info,0x18a5eb1b176,23,8173,8215,C0O8183C4O8210,,
code-creation,LazyCompile,10,356963,0x18a5eb1b4d6,322,arrayClone node:events:865:20,0x153421afc90,~
code-source-info,0x18a5eb1b4d6,23,25538,26003,C0O25680C42O25703C50O25714C62O25722C71O25727C72O25741C80O25752C92O25760C104O25768C113O25773C114O25787C122O25798C134O25806C146O25814C158O25822C167O25827C168O25841C176O25852C188O25860C200O25868C212O25876C224O25884C233O25889C234O25903C242O25914C254O25922C266O25930C278O25938C290O25946C302O25954C311O25959C312O25968C317O25975C321O26000,,
code-creation,LazyCompile,10,357082,0x18a5eb1b7a6,22, node:internal/child_process:707:36,0x18a5eb15a78,~
code-source-info,0x18a5eb1b7a6,104,20117,20530,C0O20129C5O20137C15O20137C21O20529,,
code-creation,LazyCompile,10,357203,0x18a5eb1ba46,368,nextTick node:internal/process/task_queues:104:18,0x2f67da1ae08,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x18a5eb1ba
code-creation,LazyCompile,10,357582,0x18a5eb1c2b6,21, node:internal/validators:231:42,0x15342189788,~
code-source-info,0x18a5eb1c2b6,16,7392,7496,C0O7411C6O7452C13O7458C18O7452C20O7495,,
code-creation,LazyCompile,10,357637,0x18a5eb1c3b6,15,isEmpty node:internal/fixed_queue:95:10,0x2f67da20050,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x18a5eb1c3b6,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,357892,0x18a5eb1c86e,13,isEmpty node:internal/fixed_queue:67:10,0x2f67da1fde0,~
code-source-info,0x18a5eb1c86e,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,357939,0x18a5eb1c95e,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x2f67da1ad18,~
code-source-info,0x18a5eb1c95e,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,358028,0x18a5eb1ca56,23,newAsyncId node:internal/async_hooks:416:20,0xaf8d7ba668,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  registerDestroyHook(promise\x2C asyncId);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x18a5eb1ca56,13,14888,14941,C0O14896C7O14921C16O14936C22O14938,,
code-creation,LazyCompile,10,359101,0x18a5eb1df2e,35,getDefaultTriggerAsyncId node:internal/async_hooks:432:34,0xaf8d7ba708,~
code-source-info,0x18a5eb1df2e,13,15363,15626,C0O15401C7O15417C9O15416C13O15512C14O15538C19O15548C26O15571C28O15570C31O15590C32O15594C34O15623,,
code-creation,LazyCompile,10,359176,0x18a5eb1e03e,13,initHooksExist node:internal/async_hooks:478:24,0xaf8d7ba8f8,~
code-source-info,0x18a5eb1e03e,13,16630,16664,C0O16638C5O16654C8O16645C12O16661,,
code-creation,LazyCompile,10,359221,0x18a5eb1e126,16,hasHooks node:internal/async_hooks:470:18,0xaf8d7ba858,~
code-source-info,0x18a5eb1e126,13,16490,16538,C0O16501C7O16525C12O16531C15O16535,,
code-creation,LazyCompile,10,359275,0x18a5eb1e236,59,push node:internal/fixed_queue:99:7,0x2f67da200a0,~
code-source-info,0x18a5eb1e236,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,359337,0x18a5eb1e37e,24,isFull node:internal/fixed_queue:71:9,0x2f67da1fe30,~
code-source-info,0x18a5eb1e37e,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,359390,0x18a5eb1e48e,37,push node:internal/fixed_queue:75:7,0x2f67da1fe98,~
code-source-info,0x18a5eb1e48e,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,359479,0x18a5eb1e5ae,30,onNewListener node:child_process:176:51,0x18a5eb15418,~
code-source-info,0x18a5eb1e5ae,103,5329,5418,C0O5343C2O5352C9O5374C14O5392C19O5400C24O5400C29O5417,,
code-creation,LazyCompile,10,359628,0x18a5eb1e8fe,455,initializePolicy node:internal/bootstrap/pre_execution:465:26,0x3ed7564d140,~
code-source-info,0x18a5eb1e8fe
code-creation,LazyCompile,10,359808,0x18a5eb1ecce,63,initializeClusterIPC node:internal/bootstrap/pre_execution:456:30,0x3ed7564d0f0,~
code-source-info,0x18a5eb1ecce,100,14534,14782,C0O14542C3O14554C10O14558C18O14573C23O14577C29O14616C35O14616C40O14649C45O14649C49O14740C52O14755C62O14781,,
code-creation,LazyCompile,10,359886,0x18a5eb1ee3e,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:560:38,0x3ed7564d280,~
code-source-info,0x18a5eb1ee3e,100,18437,18590,C0O18483C6O18483C11O18453C16O18535C21O18564C26O18589,,
code-creation,Eval,10,360201,0x18a5eb1f8ae,5, node:internal/source_map/source_map_cache:1:1,0x18a5eb1f518,~
script-source,112,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\nconst { setMaybeCacheGeneratedSourceMap } = internalBinding('errors');\x0d\n\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst generatedSourceMapCache = new SafeMap();\x0d\nconst kLeadingProtocol = /^\\w+:\\/\\//;\x0d\n\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = RegExpPrototypeExec(\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x2C\x0d\n    content\x2C\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else if (isGeneratedSource) {\x0d\n      generatedSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance and is not generated source assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCacheGeneratedSourceMap(content) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n\x0d\n  const matchSourceURL = RegExpPrototypeExec(\x0d\n    /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/\x2C\x0d\n    content\x0d\n  );\x0d\n  if (matchSourceURL == null) {\x0d\n    return;\x0d\n  }\x0d\n  let sourceURL = matchSourceURL.groups.sourceURL;\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  try {\x0d\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true);\x0d\n  } catch (err) {\x0d\n    // This can happen if the filename is not a valid URL.\x0d\n    // If we fail to cache the source map\x2C we should not fail the whole process.\x0d\n    debug(err);\x0d\n  }\x0d\n}\x0d\nsetMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/\x2C content)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL\x2C isGenerated) {\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap;\x0d\n  if (isGenerated) {\x0d\n    sourceMap = generatedSourceMapCache.get(sourceURL);\x0d\n  } else {\x0d\n    sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n    if (sourceMap === undefined) {\x0d\n      for (const value of cjsSourceMapCache) {\x0d\n        const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n        if (sourceURL === filename) {\x0d\n          sourceMap = {\x0d\n            data: ObjectGetValueSafe(value\x2C 'data')\x0d\n          };\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x18a5eb1f8ae,112,0,9338,C0O0C4O9338,,
code-creation,Function,10,360719,0x18a5eb1ff96,482, node:internal/source_map/source_map_cache:1:1,0x18a5eb1f828,~
code-source-info,0x18a5eb1ff96,112,0,9338,C0O0C164O28C170O50C176O64C182O81C188O96C194O131C200O165C206O189C212O220C217O232C223O553C229O553C234O542C240O585C246O585C251O618C264O619C270O585C272O684C278O684C282O684C284O727C290O727C295O708C301O785C307O785C312O765C317O868C323O868C328O841C334O938C340O938C345O918C351O1015C357O1015C362O979C367O1252C369O1252C374O1252C376O1381C378O1381C383O1381C385O1516C387O1516C392O1516C394O1557C398O1557C400O1619C406O1619C411O1581C417O1596C423O1611C429O1649C430O1649C432O1667C433O1667C435O4606C439O9195C446O9217C452O9235C458O9260C464O9285C470O9309C476O9210C481O9337,,
code-creation,Eval,10,361121,0x18a5eb21176,5, node:internal/util/iterable_weak_map:1:1,0x18a5eb20f28,~
script-source,113,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x18a5eb21176,113,0,2042,C0O0C4O2042,,
code-creation,Function,10,361283,0x18a5eb218d6,196, node:internal/util/iterable_weak_map:1:1,0x18a5eb210f0,~
code-source-info,0x18a5eb218d6,113,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,361325,0x18a5eb21a56,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x18a5eb21400,~
code-source-info,0x18a5eb21a56,113,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,361727,0x18a5eb2273e,5, node:internal/modules/cjs/helpers:1:1,0x18a5eb22488,~
script-source,114,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          __proto__: null\x2C\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x18a5eb2273e,114,0,7098,C0O0C4O7098,,
code-creation,Function,10,362165,0x18a5eb22cbe,536, node:internal/modules/cjs/helpers:1:1,0x18a5eb226b8,~
code-source-info,0x18a5eb22cbe,114,0,7098,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6929C488O6951C494O6978C500O6996C506O7013C512O7034C518O7058C524O7083C530O6944C535O7097,,
code-creation,LazyCompile,10,362425,0x18a5eb23986,27,SafeSet node:internal/per_context/primordials:379:16,0xaf8d78abe0,~
code-source-info,0x18a5eb23986,6,11306,11323,C3O11312C7O11318C11O11312C26O11322,,
code-creation,LazyCompile,10,362521,0x18a5eb23b4e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x18a5eb211f8,~
code-source-info,0x18a5eb23b4e,113,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,362570,0x18a5eb23ed6,27,SafeWeakMap node:internal/per_context/primordials:372:16,0xaf8d78ab18,~
code-source-info,0x18a5eb23ed6,6,11143,11160,C3O11149C7O11155C11O11149C26O11159,,
code-creation,LazyCompile,10,362623,0x18a5eb23fde,27,SafeFinalizationRegistry node:internal/per_context/primordials:393:16,0xaf8d78ad68,~
code-source-info,0x18a5eb23fde,6,11770,11815,C3O11790C7O11796C11O11790C26O11814,,
code-creation,LazyCompile,10,362805,0x18a5eb2485e,492,initializeDeprecations node:internal/bootstrap/pre_execution:347:32,0x3ed7564d010,~
code-source-info,0x18a5eb2485e
code-creation,LazyCompile,10,362972,0x18a5eb24d76,53,initializeWASI node:internal/bootstrap/pre_execution:514:24,0x3ed7564d190,~
code-source-info,0x18a5eb24d76,100,16683,16894,C0O16716C6O16716C11O16699C16O16783C21O16787C29O16787C35O16803C37O16835C43O16835C47O16828C52O16893,,
code-creation,LazyCompile,10,363061,0x18a5eb24eae,53,runDeserializeCallbacks node:internal/v8/startup_snapshot:31:33,0x1d44cc2f858,~
script-source,89,node:internal/v8/startup_snapshot,'use strict';\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  ERR_NOT_BUILDING_SNAPSHOT\x2C\x0d\n  ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  setSerializeCallback\x2C\x0d\n  setDeserializeCallback\x2C\x0d\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\x0d\n  markBootstrapComplete\x0d\n} = internalBinding('mksnapshot');\x0d\n\x0d\nfunction isBuildingSnapshot() {\x0d\n  // For now this is the only way to build a snapshot.\x0d\n  return require('internal/options').getOptionValue('--build-snapshot');\x0d\n}\x0d\n\x0d\nfunction throwIfNotBuildingSnapshot() {\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\x0d\n  }\x0d\n}\x0d\n\x0d\nconst deserializeCallbacks = [];\x0d\nlet deserializeCallbackIsSet = false;\x0d\nfunction runDeserializeCallbacks() {\x0d\n  while (deserializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addDeserializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (!deserializeCallbackIsSet) {\x0d\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\x0d\n    // the deserialize callbacks can always be invoked. For now only\x0d\n    // store it in C++ when it's actually used to avoid unnecessary\x0d\n    // C++ -> JS costs.\x0d\n    setDeserializeCallback(runDeserializeCallbacks);\x0d\n    deserializeCallbackIsSet = true;\x0d\n  }\x0d\n  deserializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nconst serializeCallbacks = [];\x0d\nfunction runSerializeCallbacks() {\x0d\n  while (serializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n  // Remove the hooks from the snapshot.\x0d\n  require('v8').startupSnapshot = undefined;\x0d\n}\x0d\n\x0d\nfunction addSerializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  serializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nfunction initializeCallbacks() {\x0d\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\x0d\n  // they throw.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    setSerializeCallback(runSerializeCallbacks);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet deserializeMainIsSet = false;\x0d\nfunction setDeserializeMainFunction(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\x0d\n  // main function to run the lib/internal/main scripts and make sure that\x0d\n  // the main function set in the snapshot building process takes precedence.\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (deserializeMainIsSet) {\x0d\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\x0d\n  }\x0d\n  deserializeMainIsSet = true;\x0d\n\x0d\n  _setDeserializeMainFunction(function deserializeMain() {\x0d\n    const {\x0d\n      prepareMainThreadExecution\x0d\n    } = require('internal/bootstrap/pre_execution');\x0d\n\x0d\n    // This should be in sync with run_main_module.js until we make that\x0d\n    // a built-in main function.\x0d\n    prepareMainThreadExecution(true);\x0d\n    markBootstrapComplete();\x0d\n    callback(data);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeCallbacks\x2C\x0d\n  runDeserializeCallbacks\x2C\x0d\n  // Exposed to require('v8').startupSnapshot\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    setDeserializeMainFunction\x2C\x0d\n    isBuildingSnapshot\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x18a5eb24eae,89,790,936,C0O833C5O826C11O833C16O878C21O899C26O899C31O856C37O869C44O913C48O798C52O935,,
code-creation,LazyCompile,10,363389,0x18a5eb2543e,66,initializeCJSLoader node:internal/bootstrap/pre_execution:521:29,0x3ed7564d1e0,~
code-source-info,0x18a5eb2543e,100,16926,17249,C0O16952C6O16952C11O16995C16O17000C20O17020C26O17059C31O17066C36O17066C40O17165C51O17187C56O17223C60O17180C65O17248,,
code-creation,Eval,10,364538,0x18a5eb2744e,5, node:internal/modules/cjs/loader:1:1,0x18a5eb26b68,~
script-source,115,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  ArrayPrototypeFlatMap\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate\x2C kEmptyObject } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers &&\x0d\n    NativeModule.canBeRequiredWithoutScheme(id)) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst allBuiltins = new SafeSet(\x0d\n  ArrayPrototypeFlatMap(builtinModules\x2C (bm) => [bm\x2C `node:${bm}`])\x0d\n);\x0d\nNativeModule.getSchemeOnlyModuleNames().forEach((builtin) => allBuiltins.add(`node:${builtin}`));\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeExec(trailingSlashRegex\x2C request) !== null;\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(request\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(filename)) {\x0d\n    return mod.exports;\x0d\n  }\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (\x0d\n    (\x0d\n      StringPrototypeStartsWith(request\x2C 'node:') &&\x0d\n      NativeModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\x0d\n    ) || (\x0d\n      NativeModule.canBeRequiredByUsers(request) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(request)\x0d\n    )\x0d\n  ) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\x0d\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\x0d\n    const pkg = readPackageScope(parentPath) || {};\x0d\n    if (pkg.data?.imports != null) {\x0d\n      try {\x0d\n        return finalizeEsmResolution(\x0d\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\x0d\n                                cjsConditions)\x2C parentPath\x2C request\x2C\x0d\n          pkg.path);\x0d\n      } catch (e) {\x0d\n        if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n          throw createEsmNotFoundErr(request);\x0d\n        throw e;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers &&\x0d\n        NativeModule.canBeRequiredWithoutScheme(mod.id)) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nModule.isBuiltin = function isBuiltin(moduleName) {\x0d\n  return allBuiltins.has(moduleName);\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x18a5eb2744e,115,0,42557,C0O0C4O42557,,
code-creation,Function,10,366902,0x18a5eb2931e,2678, node:internal/modules/cjs/loader:1:1,0x18a5eb273c8,~
code-source-info,0x18a5eb2931e
code-creation,Eval,10,367749,0x18a5eb2d596,5, node:internal/modules/package_json_reader:1:1,0x18a5eb2d3f0,~
script-source,116,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x18a5eb2d596,116,0,1024,C0O0C4O1024,,
code-creation,Function,10,367906,0x18a5eb2d6e6,113, node:internal/modules/package_json_reader:1:1,0x18a5eb2d510,~
code-source-info,0x18a5eb2d6e6,116,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
tick,0x7ff78541aa6d,367985,1,0x7ff7854d2120,3,0x7ff785e168e0,0x1c660984b9b,0x1c6609832e5,0x18a5eb296c0,0x1c660984c63,0x1c6609832e5,0x18a5eb25444,0x3ed7564f31e,0x3ed7564a9d5
code-creation,Eval,10,368154,0x18a5eb2de9e,5, node:internal/process/esm_loader:1:1,0x18a5eb2dc98,~
script-source,117,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n// Module.runMain() causes loadESM() to re-run (which it should do); however\x2C this should NOT cause\x0d\n// ESM to be re-initialised; doing so causes duplicate custom loaders to be added to the public\x0d\n// esmLoader.\x0d\nlet isESMInitialized = false;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  if (isESMInitialized) { return; }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (customLoaders.length === 0) return;\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const keyedExportsList = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(keyedExportsList);\x0d\n\x0d\n  isESMInitialized = true;\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x18a5eb2de9e,117,0,3087,C0O0C4O3087,,
code-creation,Function,10,368348,0x18a5eb2e13e,188, node:internal/process/esm_loader:1:1,0x18a5eb2de18,~
code-source-info,0x18a5eb2e13e,117,0,3087,C0O0C47O28C53O119C59O119C64O145C69O74C75O176C81O176C86O162C92O270C98O270C103O228C109O336C115O336C120O318C126O397C132O397C137O373C143O431C147O466C151O777C155O817C159O1300C162O1300C167O1300C169O1318C171O1336C175O1588C176O1588C178O2717C182O2733C187O3086,,
code-creation,Eval,10,368961,0x18a5eb2f766,5, node:internal/modules/esm/loader:1:1,0x18a5eb2f268,~
script-source,118,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_LOADER_CHAIN_INCOMPLETE\x2C\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * @typedef {object} ExportedHooks\x0d\n * @property {Function} globalPreload\x0d\n * @property {Function} resolve\x0d\n * @property {Function} load\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {Record<string\x2C any>} ModuleExports\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedExports\x0d\n * @property {ModuleExports} exports\x0d\n * @property {URL['href']} url\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedHook\x0d\n * @property {Function} fn\x0d\n * @property {URL['href']} url\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\x0d\n */\x0d\n\x0d\n// [2] `validate...()`s throw the wrong error\x0d\n\x0d\nlet emittedSpecifierResolutionWarning = false;\x0d\n\x0d\n/**\x0d\n * A utility function to iterate through a hook chain\x2C track advancement in the\x0d\n * chain\x2C and generate and supply the `next<HookName>` argument to the custom\x0d\n * hook.\x0d\n * @param {KeyedHook[]} chain The whole hook chain.\x0d\n * @param {object} meta Properties that change as the current hook advances\x0d\n * along the chain.\x0d\n * @param {boolean} meta.chainFinished Whether the end of the chain has been\x0d\n * reached AND invoked.\x0d\n * @param {string} meta.hookErrIdentifier A user-facing identifier to help\x0d\n *  pinpoint where an error occurred. Ex "file:///foo.mjs 'resolve'".\x0d\n * @param {number} meta.hookIndex A non-negative integer tracking the current\x0d\n * position in the hook chain.\x0d\n * @param {string} meta.hookName The kind of hook the chain is (ex 'resolve')\x0d\n * @param {boolean} meta.shortCircuited Whether a hook signaled a short-circuit.\x0d\n * @param {(hookErrIdentifier\x2C hookArgs) => void} validate A wrapper function\x0d\n *  containing all validation of a custom loader hook's intermediary output. Any\x0d\n *  validation within MUST throw.\x0d\n * @returns {function next<HookName>(...hookArgs)} The next hook in the chain.\x0d\n */\x0d\nfunction nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput }) {\x0d\n  // First\x2C prepare the current\x0d\n  const { hookName } = meta;\x0d\n  const {\x0d\n    fn: hook\x2C\x0d\n    url: hookFilePath\x2C\x0d\n  } = chain[meta.hookIndex];\x0d\n\x0d\n  // ex 'nextResolve'\x0d\n  const nextHookName = `next${\x0d\n    StringPrototypeToUpperCase(hookName[0]) +\x0d\n    StringPrototypeSlice(hookName\x2C 1)\x0d\n  }`;\x0d\n\x0d\n  // When hookIndex is 0\x2C it's reached the default\x2C which does not call next()\x0d\n  // so feed it a noop that blows up if called\x2C so the problem is obvious.\x0d\n  const generatedHookIndex = meta.hookIndex;\x0d\n  let nextNextHook;\x0d\n  if (meta.hookIndex > 0) {\x0d\n    // Now\x2C prepare the next: decrement the pointer so the next call to the\x0d\n    // factory generates the next link in the chain.\x0d\n    meta.hookIndex--;\x0d\n\x0d\n    nextNextHook = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n  } else {\x0d\n    // eslint-disable-next-line func-name-matching\x0d\n    nextNextHook = function chainAdvancedTooFar() {\x0d\n      throw new ERR_INTERNAL_ASSERTION(\x0d\n        `ESM custom loader '${hookName}' advanced beyond the end of the chain.`\x0d\n      );\x0d\n    };\x0d\n  }\x0d\n\x0d\n  return ObjectDefineProperty(\x0d\n    async (arg0 = undefined\x2C context) => {\x0d\n      // Update only when hook is invoked to avoid fingering the wrong filePath\x0d\n      meta.hookErrIdentifier = `${hookFilePath} '${hookName}'`;\x0d\n\x0d\n      validateArgs(`${meta.hookErrIdentifier} hook's ${nextHookName}()`\x2C arg0\x2C context);\x0d\n\x0d\n      const outputErrIdentifier = `${chain[generatedHookIndex].url} '${hookName}' hook's ${nextHookName}()`;\x0d\n\x0d\n      // Set when next<HookName> is actually called\x2C not just generated.\x0d\n      if (generatedHookIndex === 0) { meta.chainFinished = true; }\x0d\n\x0d\n      if (context) { // `context` has already been validated\x2C so no fancy check needed.\x0d\n        ObjectAssign(meta.context\x2C context);\x0d\n      }\x0d\n\x0d\n      const output = await hook(arg0\x2C meta.context\x2C nextNextHook);\x0d\n\x0d\n      validateOutput(outputErrIdentifier\x2C output);\x0d\n\x0d\n      if (output?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n      return output;\x0d\n\x0d\n    }\x2C\x0d\n    'name'\x2C\x0d\n    { __proto__: null\x2C value: nextHookName }\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} globalPreloaders Last-in-first-out\x0d\n   *  list of preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} loaders Last-in-first-out\x0d\n   *  collection of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    {\x0d\n      fn: defaultLoad\x2C\x0d\n      url: 'node:internal/modules/esm/load'\x2C\x0d\n    }\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} resolvers Last-in-first-out\x0d\n   *  collection of resolver hooks.\x0d\n   */\x0d\n  #resolvers = [\x0d\n    {\x0d\n      fn: defaultResolve\x2C\x0d\n      url: 'node:internal/modules/esm/resolve'\x2C\x0d\n    }\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  constructor() {\x0d\n    if (getOptionValue('--experimental-loader').length > 0) {\x0d\n      emitExperimentalWarning('Custom ESM Loaders');\x0d\n    }\x0d\n    if (getOptionValue('--experimental-network-imports')) {\x0d\n      emitExperimentalWarning('Network Imports');\x0d\n    }\x0d\n    if (\x0d\n      !emittedSpecifierResolutionWarning &&\x0d\n      getOptionValue('--experimental-specifier-resolution') === 'node'\x0d\n    ) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning'\x0d\n      );\x0d\n      emittedSpecifierResolutionWarning = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   *\x0d\n   * @param {ModuleExports} exports\x0d\n   * @returns {ExportedHooks}\x0d\n   */\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {KeyedExports} customLoaders\x0d\n   *  A list of exports from user-defined loaders (as returned by\x0d\n   *  ESMLoader.import()).\x0d\n   */\x0d\n  addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const {\x0d\n        exports\x2C\x0d\n        url\x2C\x0d\n      } = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#globalPreloaders\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(globalPreloader)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (resolver) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#resolvers\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(resolver)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (loader) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#loaders\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(loader)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C url\x2C importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n\x0d\n    // By default\x2C `this.#loaders` contains just the Node default load hook\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user-provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve = ObjectAssign(\x0d\n        ObjectCreate(null)\x2C\x0d\n        importAssertions\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        responseURL\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ExportedHooks | KeyedExports[]>}\x0d\n   *  A collection of module export(s) or a list of collections of module\x0d\n   *  export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    // For loaders\x2C `import` is passed multiple things to process\x2C it returns a\x0d\n    // list pairing the url and exports collected. This is especially useful for\x0d\n    // error messaging\x2C to identity from where an export came. But\x2C in most\x0d\n    // cases\x2C only a single url is being "imported" (ex `import()`)\x2C so there is\x0d\n    // only 1 possible url from which the exports were collected and it is\x0d\n    // already known to the caller. Nesting that in a list would only ever\x0d\n    // create redundant work for the caller\x2C so it is later popped off the\x0d\n    // internal list.\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) { specifiers = [specifiers]; }\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    if (!wasArr) { return namespaces[0]; } // We can skip the pairing below\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const namespace = ObjectCreate(null);\x0d\n      namespace.url = specifiers[i];\x0d\n      namespace.exports = namespaces[i];\x0d\n\x0d\n      namespaces[i] = namespace;\x0d\n    }\x0d\n\x0d\n    return namespaces;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextLoad()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {{ format: ModuleFormat\x2C source: ModuleSource }}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const chain = this.#loaders;\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'load'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C nextUrl\x2C ctx) => {\x0d\n      if (typeof nextUrl !== 'string') {\x0d\n        // non-strings can be coerced to a url string\x0d\n        // validateString() throws a less-specific error\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          `${hookErrIdentifier} url`\x2C\x0d\n          'a url string'\x2C\x0d\n          nextUrl\x2C\x0d\n        );\x0d\n      }\x0d\n\x0d\n      // Try to avoid expensive URL instantiation for known-good urls\x0d\n      if (!this.moduleMap.has(nextUrl)) {\x0d\n        try {\x0d\n          new URL(nextUrl);\x0d\n        } catch {\x0d\n          throw new ERR_INVALID_ARG_VALUE(\x0d\n            `${hookErrIdentifier} url`\x2C\x0d\n            nextUrl\x2C\x0d\n            'should be a url string'\x2C\x0d\n          );\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextLoad = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const loaded = await nextLoad(url\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C loaded);\x0d\n\x0d\n    if (loaded?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n    let responseURL = loaded.responseURL;\x0d\n\x0d\n    if (responseURL === undefined) {\x0d\n      responseURL = url;\x0d\n    }\x0d\n\x0d\n    let responseURLObj;\x0d\n    if (typeof responseURL === 'string') {\x0d\n      try {\x0d\n        responseURLObj = new URL(responseURL);\x0d\n      } catch {\x0d\n        // responseURLObj not defined will throw in next branch.\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (responseURLObj?.href !== responseURL) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'undefined or a fully resolved URL string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'responseURL'\x2C\x0d\n        responseURL\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') { // [2]\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) {\x0d\n      throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'source'\x2C\x0d\n        source\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      responseURL\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    for (let i = this.#globalPreloaders.length - 1; i >= 0; i--) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const {\x0d\n        fn: preloader\x2C\x0d\n        url: specifier\x2C\x0d\n      } = this.#globalPreloaders[i];\x0d\n\x0d\n      const preload = preloader({\x0d\n        port: insideLoader\x2C\x0d\n      });\x0d\n\x0d\n      if (preload == null) { return; }\x0d\n\x0d\n      const hookErrIdentifier = `${specifier} globalPreload`;\x0d\n\x0d\n      if (typeof preload !== 'string') { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'a string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName) &&\x0d\n                NativeModule.canBeRequiredWithoutScheme(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextResolve()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'parentURL'\x2C\x0d\n        ['string'\x2C 'URL']\x2C\x0d\n        parentURL\x2C\x0d\n      );\x0d\n    }\x0d\n    const chain = this.#resolvers;\x0d\n    const context = {\x0d\n      conditions: DEFAULT_CONDITIONS\x2C\x0d\n      importAssertions\x2C\x0d\n      parentURL\x2C\x0d\n    };\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'resolve'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C suppliedSpecifier\x2C ctx) => {\x0d\n      validateString(\x0d\n        suppliedSpecifier\x2C\x0d\n        `${hookErrIdentifier} specifier`\x2C\x0d\n      ); // non-strings can be coerced to a url string\x0d\n\x0d\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextResolve = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const resolution = await nextResolve(originalSpecifier\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C resolution);\x0d\n\x0d\n    if (resolution?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string' // [2]\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') {\x0d\n      // non-strings can be coerced to a url string\x0d\n      // validateString() throws a less-specific error\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a url string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // Try to avoid expensive URL instantiation for known-good urls\x0d\n    if (!this.moduleMap.has(url)) {\x0d\n      try {\x0d\n        new URL(url);\x0d\n      } catch {\x0d\n        throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n          'a url string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          'url'\x2C\x0d\n          url\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x18a5eb2f766,118,0,27123,C0O0C4O27123,,
code-creation,Function,10,370567,0x18a5eb3007e,721, node:internal/modules/esm/loader:1:1,0x18a5eb2f6e0,~
code-source-info,0x18a5eb3007e,118,0,27123,C0O0C146O82C152O82C156O136C162O146C168O163C174O186C180O209C186O235C192O261C198O278C204O295C210O320C215O345C221O360C227O384C233O406C239O422C245O447C251O478C257O536C263O536C268O517C274O790C280O790C285O816C290O581C296O613C302O640C308O665C314O691C320O729C326O758C332O871C338O871C343O833C349O848C355O863C361O933C367O933C372O905C378O1016C384O1016C389O971C395O992C401O1100C407O1100C412O1060C418O1079C424O1151C430O1151C434O1151C436O1214C442O1214C446O1214C448O1316C454O1316C459O1272C465O1291C471O1395C477O1395C482O1369C488O1476C494O1476C499O1460C505O1539C511O1539C516O1523C522O1616C528O1616C533O1597C539O2323C540O2323C701O27070C708O27039C713O27091C715O27109C720O27122,,
code-creation,Function,10,370740,0x18a5eb30606,176,<instance_members_initializer> node:internal/modules/esm/loader:190:3,0x18a5eb2fb88,~
code-source-info,0x18a5eb30606,118,6059,7106,C3O6079C17O6254C33O6274C56O6524C72O6544C95O6653C110O6752C117O6752C131O6875C141O6967C148O6967C162O7095C175O7106,,
code-creation,Eval,10,371102,0x18a5eb3288e,5, node:internal/modules/esm/module_map:1:1,0x18a5eb326a0,~
script-source,119,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x18a5eb3288e,119,0,1487,C0O0C4O1487,,
code-creation,Function,10,371224,0x18a5eb32cc6,175, node:internal/modules/esm/module_map:1:1,0x18a5eb32808,~
code-source-info,0x18a5eb32cc6,119,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,371585,0x18a5eb3373e,5, node:internal/modules/esm/module_job:1:1,0x18a5eb33478,~
script-source,120,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafePromiseAll\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await SafePromiseAll(promises);\x0d\n\x0d\n      return SafePromiseAll(dependencyJobs);\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return SafePromiseAll(dependencyJobs\x2C addJobsToDependencyGraph);\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = RegExpPrototypeSymbolReplace(\x0d\n          /:\\d+$/\x2C\x0d\n          splitStack[0]\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = RegExpPrototypeExec(\x0d\n          /module '(.*)' does not provide an export named '(.+)'/\x2C\x0d\n          e.message);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = RegExpPrototypeExec(/{.*}/\x2C importStatement);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            RegExpPrototypeSymbolReplace(/\\s+as\\s+/g\x2C oneLineNamedImports\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeExec(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) !== null &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x18a5eb3373e,120,0,8281,C0O0C4O8281,,
code-creation,Function,10,372095,0x18a5eb33c1e,316, node:internal/modules/esm/module_job:1:1,0x18a5eb336b8,~
code-source-info,0x18a5eb33c1e,120,0,8281,C0O0C79O28C85O51C91O74C97O97C102O119C108O136C113O161C118O180C124O206C130O223C136O247C142O280C148O299C154O311C160O339C166O364C172O435C178O435C183O420C189O501C195O501C200O478C206O566C212O566C217O539C223O631C229O631C233O631C235O684C238O684C240O718C242O718C244O761C245O761C247O793C251O793C253O918C257O918C296O8233C303O8202C308O8252C310O8267C315O8280,,
code-creation,Eval,10,372567,0x18a5eb3580e,5, node:internal/modules/esm/assert:1:1,0x18a5eb35618,~
script-source,121,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x18a5eb3580e,121,0,3734,C0O0C4O3734,,
code-creation,Function,10,372806,0x18a5eb35ae6,201, node:internal/modules/esm/assert:1:1,0x18a5eb35788,~
code-source-info,0x18a5eb35ae6,121,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,372977,0x18a5eb360f6,9, node:internal/modules/esm/assert:43:3,0x18a5eb358e0,~
code-source-info,0x18a5eb360f6,121,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,373940,0x18a5eb37cce,5, node:internal/modules/esm/resolve:1:1,0x18a5eb37520,~
script-source,122,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null)\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\x0d\n    const request = pattern ?\x0d\n      StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\x0d\n    throwInvalidSubpath(request\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n    return new URL('node:' + specifier);\x0d\n  }\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parsedParentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier) &&\x0d\n          NativeModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parsedParentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parsedParentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x18a5eb37cce,122,0,42159,C0O0C4O42159,,
code-creation,Function,10,376319,0x18a5eb38dfe,1185, node:internal/modules/esm/resolve:1:1,0x18a5eb37c48,~
code-source-info,0x18a5eb38dfe
code-creation,Eval,10,376983,0x18a5eb3c7e6,5, node:internal/modules/esm/get_format:1:1,0x18a5eb3c560,~
script-source,123,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x18a5eb3c7e6,123,0,4260,C0O0C4O4260,,
code-creation,Function,10,377251,0x18a5eb3cc66,368, node:internal/modules/esm/get_format:1:1,0x18a5eb3c760,~
code-source-info,0x18a5eb3cc66,123,0,4260,C0O0C90O26C95O43C100O60C106O94C112O119C118O138C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4158C344O4180C350O4201C356O4235C362O4173C367O4259,,
code-creation,Eval,10,377606,0x18a5eb3dabe,5, node:internal/modules/esm/fetch_module:1:1,0x18a5eb3d7d8,~
script-source,124,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: { concat: BufferConcat }\x2C\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\nconst { once } = require('events');\x0d\nconst { compose } = require('stream');\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * It caches either the promise or the cache entry since import.meta.url needs\x0d\n * the value synchronously for the response location after all redirects.\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x2C\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x2C\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Redirection status code as per section 6.4 of RFC 7231:\x0d\n * https://datatracker.ietf.org/doc/html/rfc7231#section-6.4\x0d\n * and RFC 7238:\x0d\n * https://datatracker.ietf.org/doc/html/rfc7238\x0d\n * @param {number} statusCode\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isRedirect(statusCode) {\x0d\n  switch (statusCode) {\x0d\n    case 300: // Multiple Choices\x0d\n    case 301: // Moved Permanently\x0d\n    case 302: // Found\x0d\n    case 303: // See Other\x0d\n    case 307: // Temporary Redirect\x0d\n    case 308: // Permanent Redirect\x0d\n      return true;\x0d\n    default:\x0d\n      return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = (async () => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: { Accept: '*/*' }\x2C\x0d\n    });\x0d\n    // Note that `once` is used here to handle `error` and that it hits the\x0d\n    // `finally` on network error/timeout.\x0d\n    const { 0: res } = await once(req\x2C 'response');\x0d\n    try {\x0d\n      const hasLocation = ObjectPrototypeHasOwnProperty(res.headers\x2C 'location');\x0d\n      if (isRedirect(res.statusCode) && hasLocation) {\x0d\n        const location = new URL(res.headers.location\x2C parsed);\x0d\n        if (location.protocol !== 'http:' && location.protocol !== 'https:') {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            res.headers.location\x2C\x0d\n            parsed.href\x2C\x0d\n            'cannot redirect to non-network location'\x0d\n          );\x0d\n        }\x0d\n        const entry = await fetchWithRedirects(location);\x0d\n        cacheForGET.set(parsed.href\x2C entry);\x0d\n        return entry;\x0d\n      }\x0d\n      if (res.statusCode === 404) {\x0d\n        const err = new ERR_MODULE_NOT_FOUND(parsed.href\x2C null);\x0d\n        err.message = `Cannot find module '${parsed.href}'\x2C HTTP 404`;\x0d\n        throw err;\x0d\n      }\x0d\n      // This condition catches all unsupported status codes\x2C including\x0d\n      // 3xx redirection codes without `Location` HTTP header.\x0d\n      if (res.statusCode < 200 || res.statusCode >= 300) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          res.headers.location\x2C\x0d\n          parsed.href\x2C\x0d\n          'cannot redirect to non-network location');\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        throw new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          "the 'Content-Type' header is required"\x0d\n        );\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x2C\x0d\n        }\x2C\x0d\n        body: (async () => {\x0d\n          let bodyStream = res;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = compose(res\x2C createBrotliDecompress());\x0d\n          } else if (\x0d\n            res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate'\x0d\n          ) {\x0d\n            bodyStream = compose(res\x2C createUnzip());\x0d\n          }\x0d\n          const buffers = await bodyStream.toArray();\x0d\n          const body = BufferConcat(buffers);\x0d\n          entry.body = body;\x0d\n          return body;\x0d\n        })()\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      await entry.body;\x0d\n      return entry;\x0d\n    } finally {\x0d\n      req.destroy();\x0d\n    }\x0d\n  })();\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n      StringPrototypeEndsWith(hostname\x2C ']')\x0d\n    ) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule\x2C\x0d\n};\x0d\n
code-source-info,0x18a5eb3dabe,124,0,8018,C0O0C4O8018,,
code-creation,Function,10,378055,0x18a5eb3df76,355, node:internal/modules/esm/fetch_module:1:1,0x18a5eb3da38,~
code-source-info,0x18a5eb3df76,124,0,8018,C0O0C113O26C119O60C125O85C130O97C136O125C142O150C148O246C154O246C159O246C164O225C170O374C176O374C181O400C186O277C192O311C198O347C204O425C210O425C215O417C221O463C227O463C232O497C238O497C243O488C249O537C255O537C260O525C266O1131C268O1131C273O1131C275O1429C276O1429C278O1669C279O1669C281O2066C282O2066C284O6093C289O6085C294O6085C296O6107C299O6117C310O6117C316O6145C319O6155C330O6155C336O7978C343O8000C349O7993C354O8017,,
code-creation,LazyCompile,10,378237,0x18a5eb3ec86,37,get BlockList node:net:1920:16,0x3ed75678560,~
code-source-info,0x18a5eb3ec86,105,53493,53585,C0O53503C14O53517C19O53546C26O53513C32O53563C36O53580,,
new,MemoryChunk,0x1e1c1900000,262144
code-creation,Eval,10,378494,0x18a5eb3f166,5, node:internal/blocklist:1:1,0x18a5eb3ef80,~
script-source,125,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x18a5eb3f166,125,0,4043,C0O0C4O4043,,
code-creation,Function,10,378754,0x18a5eb3fb6e,359, node:internal/blocklist:1:1,0x18a5eb3f0e0,~
code-source-info,0x18a5eb3fb6e,125,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,379169,0x1e1c19027a6,5, node:internal/socketaddress:1:1,0x1e1c19025b0,~
script-source,126,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x1e1c19027a6,126,0,3363,C0O0C4O3363,,
code-creation,Function,10,379420,0x1e1c19032ce,366, node:internal/socketaddress:1:1,0x1e1c1902720,~
code-source-info,0x1e1c19032ce,126,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,379683,0x1e1c1903d7e,72,BlockList node:internal/blocklist:40:14,0x18a5eb3f198,~
code-source-info,0x1e1c1903d7e,125,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,379799,0x1e1c1904526,115,addAddress node:internal/blocklist:60:13,0x18a5eb3f238,~
code-source-info,0x1e1c1904526,125,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,379898,0x1e1c19046a6,20,isSocketAddress node:internal/socketaddress:43:25,0x1e1c1902828,~
code-source-info,0x1e1c19046a6,126,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,380021,0x1e1c1904e3e,323,SocketAddress node:internal/socketaddress:47:14,0x1e1c19027d8,~
code-source-info,0x1e1c1904e3e,126,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,380162,0x1e1c190518e,99, node:internal/validators:163:3,0x15342189540,~
code-source-info,0x1e1c190518e,16,4893,5464,C0O4952C4O4993C9O5029C14O5068C21O5104C26O5141C33O5177C38O5192C46O5240C50O5254C53O5254C67O5331C75O5398C91O5404C96O5398C98O5463,,
code-creation,LazyCompile,10,380258,0x1e1c190533e,129,validatePort node:internal/validators:220:22,0x15342189718,~
code-source-info,0x1e1c190533e,16,6980,7347,C24O7025C44O7123C47O7123C52O7148C58O7156C65O7173C70O7184C72O7190C75O7179C86O7212C92O7237C99O7247C101O7266C117O7272C122O7266C123O7328C125O7340C128O7344,,
code-creation,LazyCompile,10,380348,0x1e1c190558e,149, node:internal/validators:102:40,0x15342189340,~
code-source-info,0x1e1c190558e,16,2998,3517,C0O3030C6O3068C22O3074C27O3068C28O3131C31O3136C37O3160C42O3165C48O3198C64O3204C69O3198C70O3277C80O3331C90O3370C109O3337C114O3331C115O3409C120O3431C125O3445C141O3451C146O3445C148O3516,,
code-creation,LazyCompile,10,380419,0x1e1c190571e,9,isUint32 node:internal/validators:41:18,0x153421891e0,~
code-source-info,0x1e1c190571e,16,851,898,C0O864C2O888C5O877C8O895,,
code-creation,LazyCompile,10,380542,0x1e1c1905c16,229,addRange node:internal/blocklist:72:11,0x18a5eb3f288,~
code-source-info,0x1e1c1905c16,125,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,380763,0x1e1c1906176,5, node:internal/modules/esm/formats:1:1,0x1e1c1906000,~
script-source,127,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeExec(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    ) !== null\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x1e1c1906176,127,0,1256,C0O0C4O1256,,
code-creation,Function,10,380881,0x1e1c190642e,120, node:internal/modules/esm/formats:1:1,0x1e1c19060f0,~
code-source-info,0x1e1c190642e,127,0,1256,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1134C90O1156C96O1179C102O1208C108O1237C114O1149C119O1255,,
code-creation,Eval,10,381107,0x1e1c1906ab6,5, node:internal/modules/esm/initialize_import_meta:1:1,0x1e1c1906920,~
script-source,128,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  const { url } = context;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x1e1c1906ab6,128,0,1021,C0O0C4O1021,,
code-creation,Function,10,381255,0x1e1c1906c7e,90, node:internal/modules/esm/initialize_import_meta:1:1,0x1e1c1906a30,~
code-source-info,0x1e1c1906c7e,128,0,1021,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O973C78O995C84O988C89O1020,,
code-creation,Eval,10,381489,0x1e1c19072e6,5, node:internal/modules/esm/load:1:1,0x1e1c19070b0,~
script-source,129,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst { readFile: readFileAsync } = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function getSource(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  let responseURL = url;\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n    responseURL = res.resolvedHREF;\x0d\n  } else {\x0d\n    const supportedSchemes = ['file'\x2C 'data'];\x0d\n    if (experimentalNetworkImports) {\x0d\n      ArrayPrototypePush(supportedSchemes\x2C 'http'\x2C 'https');\x0d\n    }\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C supportedSchemes);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return { responseURL\x2C source };\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let responseURL = url;\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    ({ responseURL\x2C source } = await getSource(url\x2C context));\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    responseURL\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x1e1c19072e6,129,0,2849,C0O0C4O2849,,
code-creation,Function,10,381717,0x1e1c1907526,263, node:internal/modules/esm/load:1:1,0x1e1c1907260,~
code-source-info,0x1e1c1907526,129,0,2849,C0O0C58O28C64O51C70O75C76O145C79O145C84O124C90O221C93O221C98O198C104O289C107O289C112O270C117O343C120O343C125O327C131O459C134O459C143O504C150O459C152O589C155O589C159O589C161O683C164O683C169O683C174O666C180O741C183O741C188O772C193O723C199O799C202O799C207O791C213O893C216O893C221O919C226O836C232O856C238O955C242O955C244O2809C251O2831C257O2824C262O2848,,
code-creation,Eval,10,382645,0x1e1c1908aae,5, node:internal/fs/promises:1:1,0x1e1c1908300,~
script-source,130,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = constants;\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  lazyDOMException\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrParams\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrParams;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    // This is fh.read(params)\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = bufferOrParams ?? kEmptyObject);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset !== null && typeof offset === 'object') {\x0d\n    // This is fh.read(buffer\x2C options)\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offset);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || kEmptyObject;\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validatePrimitiveStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n    constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x1e1c1908aae,130,0,24252,C0O0C4O24252,,
code-creation,Function,10,384130,0x1e1c190b1fe,1682, node:internal/fs/promises:1:1,0x1e1c1908a28,~
code-source-info,0x1e1c190b1fe
code-creation,Function,10,384437,0x1e1c190bbbe,27,<instance_members_initializer> node:internal/fs/promises:195:3,0x1e1c190a088,~
code-source-info,0x1e1c190bbbe,130,4461,5290,C0O4461C12O4469C26O5290,,
tick,0x7ff7863fa310,384470,1,0x7ff7854d2120,3,0x7ff785e168e0,0x1c660984b9b,0x1c6609832e5,0x1e1c19075dd,0x1c660984c63,0x1c6609832e5,0x18a5eb3026c,0x1c660984c63,0x1c6609832e5,0x18a5eb2e18f,0x1c660984c63,0x1c6609832e5,0x18a5eb297cd,0x1c660984c63,0x1c6609832e5,0x18a5eb25444,0x3ed7564f31e,0x3ed7564a9d5
code-creation,Eval,10,385074,0x1e1c190e72e,5, node:internal/fs/rimraf:1:1,0x1e1c190e3c8,~
script-source,131,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x1e1c190e72e,131,0,7392,C0O0C4O7392,,
code-creation,Function,10,385531,0x1e1c190ed2e,409, node:internal/fs/rimraf:1:1,0x1e1c190e6a8,~
code-source-info,0x1e1c190ed2e,131,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,385881,0x1e1c190fbc6,188,from node:buffer:301:28,0x153421baf20,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\x0d\nconst kForgivingBase64AllowedChars = [\x0d\n  // ASCII whitespace\x0d\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\x0d\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\x0d\n\x0d\n  // Uppercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\x0d\n\x0d\n  // Lowercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\x0d\n\x0d\n  // Decimal digits\x0d\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\x0d\n\x0d\n  0x2B\x2C // +\x0d\n  0x2F\x2C // /\x0d\n  0x3D\x2C // =\x0d\n];\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!ArrayPrototypeIncludes(kForgivingBase64AllowedChars\x2C\x0d\n                                StringPrototypeCharCodeAt(input\x2C n)))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x1e1c190fbc6,24,8846,9829,C3O8885C9O8921C12O8928C17O8964C18O8970C28O9026C33O9030C39O9062C51O9069C56O9118C57O9148C63O9165C68O9165C73O9181C78O9221C95O9314C104O9321C109O9361C110O9386C113O9386C118O9410C120O9424C122O9433C123O9441C125O9458C127O9457C134O9520C136O9526C138O9525C145O9544C151O9563C155O9609C158O9616C163O9656C164O9683C182O9689C187O9683,,
code-creation,LazyCompile,10,388640,0x1e1c19126ce,110,fromString node:buffer:437:20,0x153421bb308,~
code-source-info,0x1e1c19126ce,24,13033,13482,C0O13061C2O13069C8O13114C14O13121C19O13146C25O13153C30O13167C35O13174C40O13191C41O13197C46O13215C51O13226C56O13265C59O13271C64O13302C66O13332C73O13338C78O13332C79O13390C85O13397C90O13411C95O13418C100O13435C101O13444C104O13451C109O13479,,
code-creation,LazyCompile,10,388785,0x1e1c1912886,177,fromStringFast node:buffer:418:24,0x153421bb268,~
code-source-info,0x1e1c1912886,24,12470,13010,C0O12508C5O12508C11O12533C14O12555C18O12564C21O12544C26O12577C31O12613C36O12584C41O12626C42O12632C44O12646C49O12657C51O12655C54O12643C59O12675C62O12675C65O12700C72O12715C77O12726C85O12700C91O12769C110O12769C116O12801C118O12812C123O12898C130O12917C135O12928C143O12902C149O12957C156O12971C162O12968C168O12982C171O12982C174O12998C176O13007,,
code-creation,LazyCompile,10,388895,0x1e1c1912a76,36,FastBuffer node:internal/buffer:958:14,0x2f67da0bb00,~
code-source-info,0x1e1c1912a76,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,388947,0x1e1c1912b76,23,write node:buffer:598:12,0x153421bb678,~
code-source-info,0x1e1c1912b76,24,17262,17326,C0O17296C17O17296C22O17326,,
code-creation,LazyCompile,10,389005,0x1e1c1912c66,42,alignPool node:buffer:163:19,0x153421baca0,~
code-source-info,0x1e1c1912c66,24,4281,4391,C0O4317C4O4332C9O4346C19O4357C25O4370C34O4380C41O4390,,
code-creation,LazyCompile,10,389195,0x1e1c1913026,251,promisify node:internal/util:324:19,0x15342186368,~
code-source-info,0x1e1c1913026,15,9196,10795,C0O9196C17O9260C25O9301C33O9325C38O9304C55O9363C68O9363C73O9408C80O9421C82O9420C87O9466C94O9475C96O9474C100O9509C110O9509C115O9563C126O9595C136O9661C143O9570C148O9728C149O9896C156O9905C158O9904C161O9896C163O10481C174O10506C180O10506C185O10481C190O10544C201O10569C211O10631C218O10544C223O10700C234O10745C240O10745C245O10707C250O10792,,
code-creation,LazyCompile,10,389479,0x1e1c19135d6,65,EventEmitterMixin node:internal/event_target:1020:27,0x2e9b6d1eb70,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\nconst kDetail = Symbol('detail');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options');\x0d\n    const { bubbles\x2C cancelable\x2C composed } = options;\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nfunction isCustomEvent(value) {\x0d\n  return isEvent(value) && (value?.[kDetail] !== undefined);\x0d\n}\x0d\n\x0d\nclass CustomEvent extends Event {\x0d\n  /**\x0d\n   * @constructor\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   *   detail?: any\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    super(type\x2C options);\x0d\n    this[kDetail] = options?.detail ?? null;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get detail() {\x0d\n    if (!isCustomEvent(this))\x0d\n      throw new ERR_INVALID_THIS('CustomEvent');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(CustomEvent.prototype\x2C {\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'CustomEvent'\x2C\x0d\n  }\x2C\x0d\n  detail: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = async (...args) => {\x0d\n        if (listener.handleEvent)\x0d\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\x0d\n      };\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the validateListener check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!validateEventListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!validateEventListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction validateEventListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  if (typeof listener === 'object') {\x0d\n    // Require `handleEvent` lazily.\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return kEmptyObject;\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  CustomEvent\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x1e1c19135d6,44,27905,28339,C0O27958C23O28149C30O28181C33O28194C38O28149C43O28209C47O28243C52O28284C57O28243C62O28311C64O28336,,
code-creation,Eval,10,391850,0x1e1c1916176,5, node:internal/modules/esm/translators:1:1,0x1e1c1915d10,~
script-source,132,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    try {\x0d\n      await init();\x0d\n      cjsParse = parse;\x0d\n    } catch {\x0d\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x1e1c1916176,132,0,11113,C0O0C4O11113,,
code-creation,Function,10,392663,0x1e1c1916916,715, node:internal/modules/esm/translators:1:1,0x1e1c19160f0,~
code-source-info,0x1e1c
code-creation,Eval,10,393108,0x1e1c1917e1e,5, node:internal/modules/esm/create_dynamic_module:1:1,0x1e1c1917c48,~
script-source,133,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x1e1c1917e1e,133,0,1828,C0O0C4O1828,,
code-creation,Function,10,393255,0x1e1c1918046,111, node:internal/modules/esm/create_dynamic_module:1:1,0x1e1c1917d98,~
code-source-info,0x1e1c1918046,133,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,393793,0x1e1c1918f6e,5, node:internal/vm/module:1:1,0x1e1c1918a18,~
script-source,134,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafePromiseAll\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  getConstructorOf\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINK_FAILURE\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = kEmptyObject) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = kEmptyObject) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await SafePromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x1e1c1918f6e,134,0,12831,C0O0C4O12831,,
code-creation,Function,10,394556,0x1e1c191a1d6,881, node:internal/vm/module:1:1,0x1e1c1918ee8,~
code-source-info,0x1e1c191a1d
code-creation,Function,10,394744,0x1e1c191a71e,30,<instance_members_initializer> node:internal/vm/module:259:3,0x1e1c1919558,~
code-source-info,0x1e1c191a71e,134,7129,7166,C3O7138C29O7166,,
code-creation,LazyCompile,10,395077,0x1e1c191bc6e,166,ESMLoader node:internal/modules/esm/loader:240:14,0x18a5eb2f868,~
code-source-info,0x1e1c191bc6e,118,7124,7747,C9O7124C28O7134C38O7138C43O7177C49O7185C54O7199C64O7199C68O7258C78O7262C84O7321C94O7321C98O7377C110O7434C116O7434C123O7488C128O7515C133O7523C144O7523C150O7694C156O7728C165O7746,,
code-creation,LazyCompile,10,395195,0x1e1c191da76,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x18a5eb32910,~
code-source-info,0x1e1c191da76,119,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,395274,0x1e1c191dd1e,13,desc.value node:internal/per_context/primordials:340:32,0xaf8d78a9b0,~
code-source-info,0x1e1c191dd1e,6,10212,10273,C0O10230C7O10237C12O10260,,
code-creation,LazyCompile,10,395326,0x1e1c191de26,13,SafeIterator node:internal/per_context/primordials:285:16,0xaf8d78a400,~
code-source-info,0x1e1c191de26,6,8422,8484,C0O8442C3O8459C7O8457C12O8483,,
code-creation,LazyCompile,10,395380,0x1e1c191df5e,13,next node:internal/per_context/primordials:288:9,0xaf8d78a4c8,~
code-source-info,0x1e1c191df5e,6,8494,8541,C0O8506C3O8523C8O8513C12O8534,,
code-creation,LazyCompile,10,395434,0x1e1c191e04e,19,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0xaf8d790eb8,~
code-source-info,0x1e1c191e04e,9,8028,8081,C0O8040C7O8068C12O8068C18O8076,,
code-creation,LazyCompile,10,395667,0x1e1c191e286,32, node:internal/modules/cjs/loader:192:41,0x18a5eb27c10,~
code-source-info,0x1e1c191e286,115,6005,6031,C0O6013C9O6014C21O6026C31O6031,,
code-creation,LazyCompile,10,395813,0x1e1c1920d86,19,getSchemeOnlyModuleNames node:internal/bootstrap/loaders:258:34,0xaf8d790f38,~
code-source-info,0x1e1c1920d86,9,8118,8171,C0O8128C11O8145C14O8135C18O8166,,
code-creation,LazyCompile,10,395898,0x1e1c1920ece,26, node:internal/modules/cjs/loader:194:49,0x18a5eb27c60,~
code-source-info,0x1e1c1920ece,115,6086,6133,C0O6111C5O6111C15O6123C20O6111C25O6133,,
code-creation,LazyCompile,10,396057,0x1e1c19215be,28,getEmbedderOptions node:internal/options:32:28,0x1d44cc3ff68,~
code-source-info,0x1e1c19215be,95,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,396174,0x1e1c1921866,315,Module._initPaths node:internal/modules/cjs/loader:1254:29,0x18a5eb28770,~
code-source-info,0x1e1c
code-creation,Eval,10,396487,0x1e1c1921f2e,5, node:internal/modules/run_main:1:1,0x1e1c1921d08,~
script-source,135,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  /**\x0d\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\x0d\n   * (or an empty list when none have been registered).\x0d\n   */\x0d\n  const userLoaders = getOptionValue('--experimental-loader');\x0d\n  if (userLoaders.length > 0)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x1e1c1921f2e,135,0,2788,C0O0C4O2788,,
code-creation,Function,10,396674,0x1e1c1922216,178, node:internal/modules/run_main:1:1,0x1e1c1921ea8,~
code-source-info,0x1e1c1922216,135,0,2788,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2716C160O2738C166O2764C172O2731C177O2787,,
code-creation,LazyCompile,10,396848,0x1e1c1922826,163,initializeESMLoader node:internal/bootstrap/pre_execution:531:29,0x3ed7564d230,~
code-source-info,0x1e1c1922826,100,17281,18396,C0O17365C6O17365C13O17414C16O17410C21O17408C25O17434C30O17438C34O17458C40O17487C41O17494C42O17599C48O17599C53O17513C58O17554C63O17646C69O17646C74O17850C79O17808C83O17921C88O17882C92O18091C100O18095C106O18214C112O18214C117O18162C122O18170C127O18188C132O18261C138O18261C143O18281C145O18291C149O18306C151O18326C155O18351C157O18370C162O18395,,
code-creation,LazyCompile,10,396958,0x1e1c1922a3e,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x18a5eb27bc0,~
code-source-info,0x1e1c1922a3e,115,2368,2408,C0O2373C4O2406,,
code-creation,LazyCompile,10,397014,0x1e1c1922b26,53,loadPreloadModules node:internal/bootstrap/pre_execution:574:28,0x3ed7564d320,~
code-source-info,0x1e1c1922b26,100,18888,19219,C0O18977C8O18977C13O19009C15O19046C21O19053C26O19134C32O19134C37O19134C42O19099C47O19179C52O19218,,
code-creation,LazyCompile,10,397078,0x1e1c1922d16,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:566:36,0x3ed7564d2d0,~
code-source-info,0x1e1c1922d16,100,18629,18857,C0O18637C8O18641C14O18687C17O18695C28O18695C34O18809C40O18809C45O18846C49O18856,,
code-creation,LazyCompile,10,397160,0x1e1c1922e3e,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0x1e1c19220a0,~
code-source-info,0x1e1c1922e3e,135,2398,2712,C7O2414C14O2418C22O2449C25O2449C30O2496C33O2496C38O2533C40O2558C45O2569C50O2558C56O2673C61O2680C73O2680C79O2711,,
code-creation,LazyCompile,10,397234,0x1e1c192328e,68,resolveMainPath node:internal/modules/run_main:15:25,0x1e1c1921f60,~
code-source-info,0x1e1c192328e,135,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,LazyCompile,10,397416,0x1e1c192348e,438,Module._findPath node:internal/modules/cjs/loader:505:28,0x18a5eb27f80,~
code-source-info,0x1e1c192348e
code-creation,LazyCompile,10,397623,0x1e1c192383e,109,isAbsolute node:path:402:13,0x2e9b6d0d5d0,~
code-source-info,0x1e1c192383e,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,397816,0x1e1c1923b2e,85,stat node:internal/modules/cjs/loader:151:14,0x18a5eb27480,~
code-source-info,0x1e1c1923b2e,115,4780,5189,C0O4796C5O4812C10O4812C17O4843C23O4889C28O4899C33O4899C39O4919C41O4945C43O4959C44O4983C49O4983C54O5016C61O5049C66O5131C71O5141C76O5141C82O5172C84O5186,,
code-creation,LazyCompile,10,397931,0x1e1c1923d3e,232,toNamespacedPath node:path:618:19,0x2e9b6d0d6f8,~
code-source-info,0x1e1c1923d3e,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,398188,0x1e1c1923f9e,42,toRealPath node:internal/modules/cjs/loader:404:20,0x18a5eb27750,~
code-source-info,0x1e1c1923f9e,115,12029,12145,C0O12048C5O12058C10O12071C17O12092C20O12103C28O12122C35O12058C41O12142,,
code-creation,LazyCompile,10,398583,0x1e1c1924736,1079,realpathSync node:fs:2460:22,0x1d44cc19940,~
script-source,83,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify: {\x0d\n    custom: kCustomPromisifiedSymbol\x2C\x0d\n  }\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function exists(path) { // eslint-disable-line func-name-matching\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offsetOrOptions\x0d\n * @param {number} length\x0d\n * @param {number | bigint | null} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  let params = null;\x0d\n  if (arguments.length <= 4) {\x0d\n    if (arguments.length === 4) {\x0d\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C { nullable: true });\x0d\n      callback = length;\x0d\n      params = offsetOrOptions;\x0d\n    } else if (arguments.length === 3) {\x0d\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\x0d\n      if (!isArrayBufferView(buffer)) {\x0d\n        // This is fs.read(fd\x2C params\x2C callback)\x0d\n        params = buffer;\x0d\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\x0d\n      }\x0d\n      callback = offsetOrOptions;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      callback = buffer;\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = params ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint | null;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || kEmptyObject;\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number | object} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options);\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard.add(base);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base) || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard.add(base);\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks.has(id)) {\x0d\n          linkTarget = seenLinks.get(id);\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard.add(base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard.has(base)) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard.add(base);\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base)) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard.add(base);\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks.has(id)) {\x0d\n        return gotTarget(null\x2C seenLinks.get(id));\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks.set(id\x2C target);\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard.add(base);\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 KiB.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x1e1c
tick,0x7ff82785f273,403796,0,0x0,3,0x7ff785a454e0,0x1e1c1923fc1,0x1e1c19235bb,0x1e1c19232ac,0x1e1c1922e57,0x3ed7564a9f9
code-creation,LazyCompile,10,403935,0x1e1c192afb6,135,getOptions node:internal/fs/utils:318:20,0x1d44cc22348,~
script-source,84,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GiB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\x0d\n  if (options == null || typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePrimitiveStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      name\x2C\x0d\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      buffer\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x1e1c192afb6,84,7595,8221,C9O7622C16O7641C27O7702C29O7724C30O7735C36O7775C41O7820C43O7844C47O7860C54O7896C60O7936C78O7942C83O7936C84O8032C91O8041C96O8060C99O8083C104O8060C108O8111C114O8140C119O8168C127O8140C132O8203C134O8218,,
code-creation,LazyCompile,10,405574,0x1e1c192cfae,48,assertEncoding node:internal/fs/utils:155:24,0x1d44cc21d50,~
code-source-info,0x1e1c192cfae,84,3741,3923,C0O3757C6O3774C9O3781C14O3781C21O3825C24O3853C40O3859C45O3853C47O3922,,
code-creation,LazyCompile,10,405720,0x1e1c192d0c6,20,toPathIfFileURL node:internal/url:1513:25,0x2f67da39918,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        const visited = {};\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n\x0d\n            // Two different key may result same after `toUSVString()`\x2C we only\x0d\n            // leave the later one. Refers to WPT.\x0d\n            if (visited[typedKey] !== undefined) {\x0d\n              this[searchParams][visited[typedKey]] = typedValue;\x0d\n            } else {\x0d\n              visited[typedKey] = ArrayPrototypePush(this[searchParams]\x2C\x0d\n                                                     typedKey\x2C\x0d\n                                                     typedValue) - 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { __proto__: null\x2C configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x1e1c192d0c6,39,43660,43785,C0O43681C3O43686C9O43721C11O43742C12O43746C15O43753C19O43782,,
code-creation,LazyCompile,10,408243,0x1e1c193027e,17,isURLInstance node:internal/url:1509:23,0x2f67da398c8,~
code-source-info,0x1e1c193027e,39,43533,43632,C0O43554C3O43575C6O43600C12O43622C16O43629,,
code-creation,LazyCompile,10,408336,0x1e1c19303de,81, node:internal/fs/utils:671:38,0x1d44cc22d70,~
code-source-info,0x1e1c19303de,84,18882,19162,C14O18916C22O18949C25O18949C31O18976C36O19007C49O18982C54O18976C55O19075C68O19075C74O19114C76O19144C78O19144C80O19161,,
code-creation,LazyCompile,10,408423,0x1e1c19305ee,110, node:internal/fs/utils:360:35,0x1d44cc223e8,~
code-source-info,0x1e1c19305ee,84,8971,9580,C16O9036C21O9090C26O9090C31O9187C37O9210C41O9239C45O9256C51O9256C60O9308C64O9329C69O9329C76O9375C77O9382C78O9405C94O9405C100O9524C104O9547C106O9547C107O9566C109O9577,,
code-creation,LazyCompile,10,408498,0x1e1c1930766,16,isUint8Array node:internal/util/types:13:22,0x1534218a790,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x2C\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x1e1c1930766,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,408731,0x1e1c1930bde,23,splitRoot node:fs:2412:33,0x1d44cc197f8,~
code-source-info,0x1e1c1930bde,83,66679,66745,C0O66692C9O66719C12O66699C19O66736C22O66740,,
code-creation,LazyCompile,10,409033,0x1e1c1930ce6,63,handleErrorFromBinding node:internal/fs/utils:343:32,0x1d44cc22398,~
code-source-info,0x1e1c1930ce6,84,8315,8826,C0O8334C6O8398C11O8398C16O8421C24O8421C29O8479C31O8479C32O8506C38O8738C43O8765C51O8738C56O8812C60O8802C62O8825,,
code-creation,LazyCompile,10,409123,0x1e1c1930e46,53,nextPart node:fs:2438:31,0x1d44cc198f0,~
code-source-info,0x1e1c1930e46,83,67436,67687,C0O67463C4O67459C9O67496C14O67496C20O67580C22O67591C24O67587C31O67621C33O67617C38O67650C40O67659C41O67473C47O67450C50O67672C52O67682,,
code-creation,LazyCompile,10,409269,0x1e1c1930f8e,34,isFileType node:fs:213:20,0x1d44cc17598,~
code-source-info,0x1e1c1930f8e,83,5673,5921,C0O5810C2O5815C6O5823C10O5858C15O5865C20O5882C22O5897C24O5895C30O5905C33O5918,,
code-creation,Function,11,409844,0x1c660985160,6232,resolve node:path:158:10,0x2e9b6d0d510,^
code-source-info,0x1c660985160,41,4875,9786,,,
code-creation,Function,11,409888,0x1c660986a20,432,getCLIOptionsFromBinding node:internal/options:18:34,0x1d44cc3fce8,^
code-source-info,0x1c660986a20,95,514,620,,,
code-creation,Function,11,409919,0x1c660986c40,252,SafeMap node:internal/per_context/primordials:366:16,0xaf8d78aa58,^
code-source-info,0x1c660986c40,6,10966,10983,,,
code-creation,Function,11,409945,0x1c660986da0,104,next node:internal/per_context/primordials:288:9,0xaf8d78a4c8,^
code-source-info,0x1c660986da0,6,8494,8541,,,
code-creation,Function,11,409970,0x1c660986e80,188,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0xaf8d790eb8,^
code-source-info,0x1c660986e80,9,8028,8081,,,
code-creation,Function,11,409999,0x1c660986fa0,200, node:internal/modules/cjs/loader:192:41,0x18a5eb27c10,^
code-source-info,0x1c660986fa0,115,6005,6031,,,
code-creation,Function,11,410028,0x1c6609870e0,272,validateString node:internal/validators:119:24,0x15342189390,^
code-source-info,0x1c6609870e0,16,3546,3658,,,
code-creation,Function,11,410055,0x1c660987260,412,isWindowsDeviceRoot node:path:60:29,0x2e9b6d0d408,^
code-source-info,0x1c660987260,41,1991,2136,,,
code-creation,Function,11,410083,0x1c660987460,544,nextPart node:fs:2438:31,0x1d44cc198f0,^
code-source-info,0x1c660987460,83,67436,67687,,,
code-creation,LazyCompile,10,410329,0x1e1c1931afe,72,encodeRealpathResult node:fs:2425:30,0x1d44cc198a0,~
code-source-info,0x1e1c1931afe,83,67025,67291,C0O67048C4O67073C10O67093C17O67102C22O67119C24O67133C25O67154C30O67161C35O67161C41O67190C48O67199C53O67220C55O67236C56O67261C61O67278C66O67261C71O67288,,
code-creation,LazyCompile,10,410458,0x1e1c1931c8e,118,shouldUseESMLoader node:internal/modules/run_main:30:28,0x1e1c1921fb0,~
code-source-info,0x1e1c1931c8e,135,870,1612,C0O1060C8O1060C13O1120C19O1127C24O1137C25O1149C26O1194C34O1194C39O1252C41O1284C46O1301C47O1313C48O1363C54O1379C60O1379C67O1427C68O1439C69O1443C75O1460C81O1460C88O1508C89O1521C90O1537C95O1537C100O1568C102O1586C107O1591C114O1596C117O1609,,
code-creation,LazyCompile,10,410580,0x1e1c1931eb6,129,readPackageScope node:internal/modules/cjs/loader:332:26,0x18a5eb27660,~
code-source-info,0x1e1c1931eb6,115,9584,10117,C0O9628C7O9662C10O9628C16O9675C18O9704C25O9759C28O9721C34O9770C47O9782C54O9839C61O9878C66O9882C70O9843C77O9908C78O9921C79O9941C84O9965C86O9963C90O9941C95O9976C97O9987C104O10009C110O10029C116O10047C117O10075C119O10075C124O9694C127O10101C128O10114,,
code-creation,LazyCompile,10,410736,0x1e1c1932216,234,readPackage node:internal/modules/cjs/loader:301:21,0x18a5eb27610,~
code-source-info,0x1e1c1932216,115,8736,9555,C0O8772C5O8777C13O8777C20O8837C25O8854C30O8854C36O8872C38O8900C40O8916C41O8937C46O8955C51O8955C57O8994C63O9007C72O9033C77O9044C79O9075C84O9092C91O9092C97O9119C98O9132C102O9169C107O9169C112O9208C117O9230C125O9256C133O9285C141O9317C149O9346C160O9364C165O9381C170O9381C176O9411C178O9427C190O9450C195O9457C199O9474C207O9503C213O9514C220O9525C224O9521C227O9484C231O9539C233O9539,,
code-creation,LazyCompile,10,410991,0x1e1c193251e,199,read node:internal/modules/package_json_reader:16:14,0x18a5eb2d5c8,~
code-source-info,0x1e1c193251e,116,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,411490,0x1e1c19332ce,70,runMainESM node:internal/modules/run_main:51:20,0x1e1c1922000,~
code-source-info,0x1e1c19332ce,135,1635,1984,C0O1635C12O1671C20O1671C25O1659C30O1740C38O1740C43O1722C49O1770C54O1788C59O1788C64O1770C69O1983,,
code-creation,LazyCompile,10,411598,0x1e1c193350e,222,loadESM node:internal/process/esm_loader:88:41,0x18a5eb2e000,~
code-source-info,0x1e1c193350e,117,2757,3084,C10O2757C21O2784C24O2790C35O2784C58O2815C60O2830C63O2821C75O2815C113O2866C120O2870C125O2918C130O2926C138O2926C143O2955C154O2962C155O2975C163O2975C168O3000C178O3001C197O3083,,
code-creation,LazyCompile,10,411721,0x1e1c1933b3e,294,initializeLoader node:internal/process/esm_loader:54:32,0x18a5eb2ded0,~
code-source-info,0x1e1c1933b3e,117,1734,2713,C10O1734C18O1742C24O1766C35O1773C36O1808C42O1808C47O1789C52O1862C55O1862C60O1926C66O1933C71O1940C82O1947C83O1957C88O1976C91O1990C96O1990C103O1996C110O1980C111O2021C114O2286C119O2286C125O2437C132O2470C135O2470C140O2488C147O2500C152O2500C163O2443C176O2413C202O2629C207O2645C212O2645C225O2629C248O2686C252O2703C269O2712,,
code-creation,LazyCompile,10,411847,0x1e1c1933e36,175,handleMainPromise node:internal/modules/run_main:62:33,0x1e1c1922050,~
code-source-info,0x1e1c1933e36,135,2020,2177,C10O2020C18O2035C21O2043C31O2054C34O2043C43O2088C53O2095C90O2130C93O2138C103O2150C106O2138C150O2176,,
code-creation,LazyCompile,10,412023,0x1e1c1934076,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x2f67da1adb8,~
code-source-info,0x1e1c
code-creation,LazyCompile,10,412163,0x1e1c193434e,43,shift node:internal/fixed_queue:108:8,0x2f67da200f0,~
code-source-info,0x1e1c193434e,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,412227,0x1e1c1934496,54,shift node:internal/fixed_queue:80:8,0x2f67da1ff00,~
code-source-info,0x1e1c1934496,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,412304,0x1e1c19345ce,42,emitBeforeScript node:internal/async_hooks:509:26,0xaf8d7baaa8,~
code-source-info,0x1e1c19345ce,13,17331,17487,C0O17372C12O17372C17O17430C22O17443C25O17434C31O17458C36O17458C41O17486,,
code-creation,LazyCompile,10,412380,0x1e1c193471e,180,pushAsyncContext node:internal/async_hooks:539:26,0xaf8d7bac50,~
code-source-info,0x1e1c193471e,13,18005,18560,C0O18061C7O18079C9O18078C13O18097C20O18131C24O18146C26O18157C32O18164C35O18175C40O18191C44O18161C49O18204C54O18211C59O18254C60O18258C65O18269C72O18292C78O18299C83O18315C85O18314C88O18297C92O18338C97O18349C104O18372C107O18376C113O18383C118O18399C120O18398C123O18381C127O18420C134O18438C142O18451C146O18458C153O18474C158O18493C162O18507C169O18523C174O18540C179O18559,,
code-creation,LazyCompile,10,412518,0x1e1c1934936,125, node:internal/child_process:709:22,0x18a5eb1b700,~
code-source-info,0x1e1c1934936,104,20146,20523,C0O20161C3O20173C12O20192C20O20192C27O20227C28O20234C29O20261C32O20268C41O20276C43O20275C47O20310C52O20338C54O20351C55O20358C56O20381C58O20386C60O20386C65O20412C75O20432C85O20454C89O20412C94O20397C99O20368C102O20478C105O20485C114O20493C119O20511C124O20522,,
code-creation,LazyCompile,10,412612,0x1e1c1934af6,31,listenerCount node:events:840:23,0x153421afbd0,~
code-source-info,0x1e1c1934af6,23,24974,25256,C0O25006C5O25020C7O25072C9O25078C13O25093C17O25140C19O25149C20O25162C24O25219C28O25226C29O25244C30O25253,,
code-creation,LazyCompile,10,412668,0x1e1c1934bfe,13,destroyHooksExist node:internal/async_hooks:486:27,0xaf8d7ba9b8,~
code-source-info,0x1e1c1934bfe,13,16757,16794,C0O16765C5O16781C8O16772C12O16791,,
code-creation,LazyCompile,10,412713,0x1e1c1934cee,32,emitAfterScript node:internal/async_hooks:517:25,0xaf8d7baaf8,~
code-source-info,0x1e1c1934cee,13,17517,17618,C0O17532C5O17545C8O17536C14O17559C19O17559C23O17590C26O17590C31O17617,,
code-creation,LazyCompile,10,412787,0x1e1c1934e56,167,popAsyncContext node:internal/async_hooks:553:25,0xaf8d7baca0,~
code-source-info,0x1e1c1934e56,13,18653,19255,C0O18688C7O18706C9O18705C13O18724C14O18740C19O18747C20O18760C21O18766C24O18770C31O18793C36O18809C38O18808C44O18828C49O18912C54O18919C58O18945C59O18971C61O18983C65O18991C72O19007C77O19028C80O19039C87O19057C90O19054C93O19026C97O19071C104O19087C109O19106C112O19117C119O19135C122O19144C125O19132C128O19104C132O19153C137O19179C142O19179C146O19189C153O19207C158O19221C162O19234C163O19248C166O19252,,
code-creation,LazyCompile,10,412892,0x1e1c1935036,13,enabledHooksExist node:internal/async_hooks:474:27,0xaf8d7ba8a8,~
code-source-info,0x1e1c1935036,13,16568,16603,C0O16576C5O16592C8O16583C12O16600,,
code-creation,LazyCompile,10,412981,0x1e1c193518e,77, node:internal/modules/run_main:55:29,0x1e1c1933208,~
code-source-info,0x1e1c193518e,135,1796,1978,C0O1831C7O1836C15O1836C24O1866C30O1866C35O1889C44O1929C55O1953C60O1953C71O1935C76O1973,,
code-creation,LazyCompile,10,413099,0x1e1c193540e,283,pathToFileURL node:internal/url:1472:23,0x2f67da39858,~
code-source-info,0x1e1c193540e
code-creation,LazyCompile,10,413247,0x1e1c19356de,136,URL node:internal/url:632:14,0x2f67da38670,~
code-source-info,0x1e1c19356de,39,18128,18532,C13O18196C17O18225C19O18244C23O18277C30O18292C40O18306C42O18305C46O18328C50O18333C57O18348C60O18344C65O18342C69O18367C85O18420C93O18420C103O18477C117O18477C129O18367C135O18531,,
code-creation,LazyCompile,10,413325,0x1e1c19358be,51,URLContext node:internal/url:161:14,0x2f67da37e10,~
code-source-info,0x1e1c19358be,39,3883,4105,C0O3893C1O3904C5O3914C7O3926C11O3938C13O3952C17O3963C19O3977C23O3988C24O3998C28O4011C29O4021C33O4034C35O4044C39O4055C40O4066C44O4079C45O4093C50O4104,,
code-creation,LazyCompile,10,413471,0x1e1c1935b06,190,onParseComplete node:internal/url:544:25,0x2f67da383a0,~
code-source-info,0x1e1c1935b06,39,15246,15932,C0O15362C2O15367C4O15366C8O15380C10O15390C14O15402C16O15413C20O15428C22O15452C24O15450C29O15476C43O15441C47O15502C49O15526C51O15524C56O15550C70O15515C74O15576C76O15585C80O15596C82O15616C84O15614C89O15636C101O15644C103O15605C107O15658C109O15668C113O15680C115O15693C119O15708C121O15717C125O15728C127O15738C129O15737C134O15792C136O15797C141O15817C144O15813C149O15811C153O15841C155O15846C157O15845C163O15860C168O15869C172O15885C177O15907C179O15906C183O15885C189O15931,,
code-creation,LazyCompile,10,413727,0x1e1c1935f9e,934,URLSearchParams node:internal/url:183:14,0x2f67da37eb0,~
code-source-info,0x1e1c1935f9e
tick,0x7ff7854171ff,413999,0,0x0,3,0x7ff785a33b80,0x1e1c1935b96,0x7ff785491830,0x1e1c193575f,0x1e1c1935418,0x1e1c19351ac,0x1e1c193354d,0x7ff785eac183,0x7ff785499420,0x1e1c193417b
code-creation,LazyCompile,10,414052,0x1e1c19365c6,35,initSearchParams node:internal/url:1030:26,0x2f67da393b8,~
code-source-info,0x1e1c19365c6,39,28698,28819,C0O28715C4O28733C6O28737C11O28751C15O28762C16O28769C17O28778C19O28782C25O28798C29O28796C34O28818,,
code-creation,LazyCompile,10,414177,0x1e1c1936776,199,encodePathChars node:internal/url:1457:25,0x2f67da39808,~
code-source-info,0x1e1c1936776,39,41512,42217,C0O41528C8O41532C15O41577C22O41621C31O41588C38O41703C46O41721C52O41721C59O41767C66O41811C75O41778C82O41838C90O41842C97O41888C104O41932C113O41899C120O41957C128O41961C135O42007C142O42051C151O42018C158O42083C166O42087C173O42133C180O42177C189O42144C196O42198C198O42214,,
code-creation,LazyCompile,10,414293,0x1e1c19369a6,70,set pathname node:internal/url:898:15,0x2f67da38fa8,~
code-source-info,0x1e1c19369a6,39,25122,25331,C0O25171C5O25194C9O25203C11O25202C16O25225C17O25232C18O25238C29O25250C38O25273C40O25272C49O25314C54O25314C63O25238C69O25330,,
code-creation,LazyCompile,10,414361,0x1e1c1936af6,31, node:internal/url:649:21,0x2f67da38748,~
code-source-info,0x1e1c1936af6,39,18645,18722,C0O18655C4O18668C6O18667C10O18677C19O18685C21O18683C26O18711C30O18717,,
code-creation,LazyCompile,10,414457,0x1e1c1936c26,108,onParsePathComplete node:internal/url:603:29,0x2f67da38580,~
code-source-info,0x1e1c1936c26,39,17264,17746,C0O17384C2O17389C4O17388C8O17402C10O17415C12O17413C17O17435C22O17449C24O17458C28O17471C35O17484C40O17481C46O17521C48O17530C52O17541C59O17555C61O17554C66O17551C70O17637C72O17650C74O17648C79O17670C84O17684C86O17693C90O17706C97O17719C102O17716C107O17745,,
code-creation,LazyCompile,10,414547,0x1e1c1936dc6,18,get href node:internal/url:747:11,0x2f67da388d8,~
code-source-info,0x1e1c1936dc6,39,21408,21448,C0O21418C4O21430C6O21429C12O21438C17O21443,,
code-creation,LazyCompile,10,414680,0x1e1c1937096,393, node:internal/url:695:12,0x2f67da38838,~
code-source-info,0x1e1c1937096,39,19991,21286,C0O20008C4O20028C14O20028C19O20071C30O20179C37O20212C41O20217C43O20216C47O20299C52O20320C58O20344C67O20389C74O20398C79O20438C86O20447C91O20474C99O20483C103O20499C105O20525C109O20565C120O20584C124O20613C127O20628C142O20649C151O20692C165O20731C170O20711C176O20743C184O20764C190O20788C193O20803C208O20823C212O20832C214O20831C219O20867C225O20871C237O20905C243O20926C248O20931C255O20938C260O20949C266O20953C272O20957C277O20976C286O21013C291O21018C297O21037C304O21050C307O21073C315O21050C320O21048C330O21118C336O21132C342O21155C345O21170C360O21196C366O21212C372O21238C375O21253C390O21270C392O21281,,
code-creation,LazyCompile,10,414938,0x1e1c193753e,378,import node:internal/modules/esm/loader:512:15,0x18a5eb2f9f8,~
code-source-info,0x1e1c193753e,118,15447,16843,C10O15447C18O16084C25O16084C30O16115C32O16130C41O16144C50O16191C55O16217C64O16217C70O16255C81O16450C90O16270C98O16260C100O16260C116O16298C124O16321C138O16298C145O16364C157O16365C164O16399C175O16400C180O16291C191O16242C206O16478C217O16499C222O16495C228O16484C240O16478C266O16532C270O16547C271O16564C284O16568C285O16624C287O16629C289O16629C294O16670C303O16670C308O16697C310O16723C313O16711C317O16735C319O16765C322O16753C326O16779C328O16793C332O16639C337O16611C340O16820C352O16838,,
code-creation,LazyCompile,10,415109,0x1e1c193791e,251,getModuleJob node:internal/modules/esm/loader:417:21,0x18a5eb2f9a8,~
code-source-info,0x1e1c193791e,118,12203,13152,C10O12203C18O12255C20O12367C22O12376C26O12385C33O12392C38O12559C49O12611C54O12611C59O12588C65O12724C82O12724C95O12713C118O12690C123O12698C128O12805C133O12815C138O12841C143O12815C150O12916C154O12961C159O12971C166O12997C176O12971C181O13019C185O13051C187O13062C208O13078C214O13136C226O13147,,
code-creation,LazyCompile,10,415376,0x1e1c193802e,569,resolve node:internal/modules/esm/loader:791:16,0x18a5eb2fb38,~
code-source-info,0x1e1c193802e
code-creation,LazyCompile,10,415620,0x1e1c193873e,278,nextHookFactory node:internal/modules/esm/loader:116:25,0x18a5eb2f798,~
code-source-info,0x1e1c193873e,118,3486,5603,C0O3486C25O3502C31O3516C59O3593C64O3580C70O3656C80O3667C84O3661C88O3619C94O3635C100O3728C107O3741C114O3776C118O3741C127O3788C136O3788C141O3781C148O3728C150O4017C155O4022C159O4017C161O4040C162O4040C164O4057C169O4066C175O4076C180O4219C191O4233C195O4244C210O4282C219O4290C227O4304C231O4259C236O4257C240O4392C244O4405C246O4590C268O5579C272O4597C277O5600,,
code-creation,LazyCompile,10,415828,0x1e1c1938b4e,405,ObjectDefineProperty.__proto__ node:internal/modules/esm/loader:150:5,0x1e1c1938578,~
code-source-info,0x1e1c1938b4e,118,4624,5533,C10O4624C36O4638C62O4751C71O4779C83O4796C95O4774C99O4818C110O4834C113O4839C127O4867C146O4818C151O4938C160O4947C162O4946C166O4967C180O4975C195O4995C208O5096C214O5119C219O5128C227O5147C231O5166C235O5257C246O5270C249O5275C254O5257C259O5327C268O5344C271O5349C278O5358C284O5333C297O5327C323O5382C330O5382C335O5436C342O5446C351O5461C356O5473C364O5493C368O5510C380O5524,,
code-creation,LazyCompile,10,415954,0x1e1c1938e36,50,validateArgs node:internal/modules/esm/loader:824:26,0x1e1c1937c88,~
code-source-info,0x1e1c1938e36,118,24980,25256,C0O25036C9O25092C17O25036C22O25188C26O25197C35O25220C43O25197C49O25255,,
code-creation,LazyCompile,10,416313,0x1e1c19392ee,933,defaultResolve node:internal/modules/esm/resolve:1124:30,0x18a5eb387a0,~
code-source-info,0x1e1c19392ee
code-creation,LazyCompile,10,416618,0x1e1c193c106,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:972:49,0x18a5eb385c0,~
code-source-info,0x1e1c193c106,122,32521,32660,C0O32538C2O32552C7O32560C8O32573C9O32577C10O32590C16O32594C21O32603C22O32615C23O32619C26O32626C30O32657,,
code-creation,LazyCompile,10,416694,0x1e1c193c21e,81,isRelativeSpecifier node:internal/modules/esm/resolve:962:29,0x18a5eb38570,~
code-source-info,0x1e1c193c21e,122,32218,32469,C0O32235C1O32248C7O32252C12O32282C19O32289C26O32307C32O32311C37O32320C38O32332C39O32338C41O32351C47O32355C52O32387C59O32394C66O32412C72O32416C77O32425C78O32437C79O32453C80O32466,,
code-creation,LazyCompile,10,416813,0x1e1c193c3ae,15,get protocol node:internal/url:783:15,0x2f67da38a18,~
code-source-info,0x1e1c193c3ae,39,22328,22371,C0O22338C4O22350C6O22349C10O22359C14O22366,,
code-creation,LazyCompile,10,416901,0x1e1c193c5a6,183,checkIfDisallowedImport node:internal/modules/esm/resolve:1056:33,0x18a5eb386b0,~
code-source-info,0x1e1c193c5a6,122,35399,36595,C0O35441C4O35497C11O35506C16O35544C23O35553C28O35582C31O35586C37O35745C41O35777C48O35786C53O35820C60O35829C65O35865C81O35871C86O35865C87O36063C92O36084C102O36091C103O36108C108O36125C113O36125C122O36171C125O36184C130O36184C137O36234C153O36240C158O36234C159O36420C175O36426C180O36420C182O36594,,
code-creation,LazyCompile,10,417010,0x1e1c193c806,104,throwIfUnsupportedURLScheme node:internal/modules/esm/resolve:1103:37,0x18a5eb38750,~
code-source-info,0x1e1c193c806,122,36842,37313,C0O36884C4O36916C11O36925C16O36952C23O36961C30O36991C32O37046C39O37055C44O37087C51O37096C56O37136C63O37185C77O37244C88O37185C96O37142C101O37136C103O37312,,
code-creation,LazyCompile,10,417161,0x1e1c193c9be,64,getConditionsSet node:internal/modules/esm/resolve:170:26,0x18a5eb37df0,~
code-source-info,0x1e1c193c9be,122,5552,5888,C0O5570C6O5617C8O5613C13O5644C18O5649C24O5684C40O5690C45O5684C46O5815C53O5822C58O5846C59O5855C63O5885,,
code-creation,LazyCompile,10,417262,0x1e1c193cb3e,171,moduleResolve node:internal/modules/esm/resolve:985:23,0x18a5eb38610,~
code-source-info,0x1e1c193cb3e,122,32862,33653,C0O32937C7O32946C12O32971C19O32980C23O33103C25O33116C28O33120C34O33179C47O33190C55O33226C60O33252C66O33256C71O33272C83O33288C89O33275C99O33371C106O33382C115O33380C116O33424C120O33450C132O33461C138O33543C145O33552C150O33570C152O33586C153O33590C165O33597C170O33650,,
code-creation,LazyCompile,10,417457,0x1e1c193ce36,454,finalizeResolution node:internal/modules/esm/resolve:396:28,0x18a5eb38070,~
code-source-info,0x1e1c193ce
code-creation,LazyCompile,10,417649,0x1e1c193d226,78,get pathname node:internal/url:889:15,0x2f67da38f38,~
code-source-info,0x1e1c193d226,39,24904,25104,C0O24926C4O24931C6O24930C10O24946C14O24955C16O24954C21O24988C27O24992C30O24996C31O25010C36O25015C42O25022C47O25036C49O25046C50O25052C57O25063C60O25086C68O25063C77O25099,,
code-creation,LazyCompile,10,417807,0x1e1c193d47e,106,fileURLToPath node:internal/url:1430:23,0x2f67da397b8,~
code-source-info,0x1e1c193d47e,39,40376,40709,C0O40388C6O40423C13O40430C22O40453C25O40458C31O40484C49O40490C54O40484C55O40561C62O40570C67O40588C77O40594C82O40588C83O40633C92O40652C101O40680C105O40706,,
code-creation,LazyCompile,10,417913,0x1e1c193d6b6,150,get origin node:internal/url:760:13,0x2f67da389a8,~
code-source-info,0x1e1c193d6b6,39,21730,22310,C0O21814C4O21819C6O21818C10O21846C59O21894C64O21899C70O21906C78O21943C83O21963C89O21967C95O21951C101O21973C105O21980C110O22078C116O22099C117O22211C122O22243C127O22255C132O22265C137O22218C142O22271C143O22284C149O22305,,
code-creation,LazyCompile,10,418048,0x1e1c193d99e,261,getPathFromURLWin32 node:internal/url:1377:29,0x2f67da39718,~
code-source-info,0x1e1c193d99e
code-creation,LazyCompile,10,418171,0x1e1c193dc46,19,get hostname node:internal/url:855:15,0x2f67da38d88,~
code-source-info,0x1e1c193dc46,39,24080,24127,C0O24090C4O24102C6O24101C10O24111C18O24122,,
code-creation,Function,11,418319,0x1c6609876e0,1916,getPathFromURLWin32 node:internal/url:1377:29,0x2f67da39718,^
code-source-info,0x1c6609876e0,39,38428,39826,,,
code-creation,Function,11,418357,0x1c660987ec0,320,isFileType node:fs:213:20,0x1d44cc17598,^
code-source-info,0x1c660987ec0,83,5673,5921,,,
code-creation,Function,11,418408,0x1c660988060,1936,toNamespacedPath node:path:618:19,0x2e9b6d0d6f8,^
code-source-info,0x1c660988060,41,20086,21201,,,
code-creation,Function,11,418436,0x1c660988860,152,hasHooks node:internal/async_hooks:470:18,0xaf8d7ba858,^
code-source-info,0x1c660988860,13,16490,16538,,,
code-creation,LazyCompile,10,418549,0x1e1c193e2be,30,tryStatSync node:internal/modules/esm/resolve:189:3,0x18a5eb387f0,~
code-source-info,0x1e1c193e2be,122,6101,6167,C0O6156C5O6120C10O6111C21O6160C24O6156C29O6167,,
code-creation,LazyCompile,10,418644,0x1e1c193e476,123,statSync node:fs:1580:18,0x1d44cc18a38,~
code-source-info,0x1e1c193e476,83,41952,42366,C7O41952C16O42015C21O42022C26O42061C33O42063C40O42088C45O42096C52O42101C55O42112C60O42112C66O42174C76O42096C82O42214C88O42229C96O42242C102O42271C103O42288C104O42297C109O42297C113O42329C118O42336C122O42363,,
code-creation,LazyCompile,10,418782,0x1e1c193e616,37, node:internal/fs/utils:683:42,0x1d44cc22dc0,~
code-source-info,0x1e1c193e616,84,19209,19348,C14O19265C19O19265C24O19300C29O19300C34O19333C36O19345,,
code-creation,LazyCompile,10,419031,0x1e1c193e756,64,hasNoEntryError node:fs:1517:25,0x1d44cc18908,~
code-source-info,0x1e1c193e756,83,40326,40528,C0O40345C6O40373C11O40389C16O40373C21O40402C27O40416C36O40420C39O40433C40O40452C46O40477C51O40483C58O40488C61O40501C62O40512C63O40525,,
code-creation,LazyCompile,10,419155,0x1e1c193e88e,576,getStatsFromBinding node:internal/fs/utils:533:29,0x1d44cc22b90,~
code-source-info,0x1e1c193e88e,84,14576,15649,C13O14601C18O14605C24O14637C31O14676C34O14673C43O14695C46O14692C55O14714C58O14711C67O14740C70O14737C79O14759C82O14756C91O14778C94O14775C103O14804C106O14801C115O14823C118O14820C127O14842C130O14839C139O14868C142O14865C154O14916C157O14912C167O14936C170O14932C174O14886C189O14985C192O14981C202O15005C205O15001C210O14955C225O15054C228O15050C239O15074C242O15070C247O15024C263O15123C266O15119C277O15143C280O15139C285O15093C294O14644C299O15161C300O15170C307O15201C310O15198C319O15220C322O15217C331O15239C334O15236C343O15263C346O15260C355O15282C358O15279C367O15301C370O15298C379O15325C382O15322C391O15344C394O15341C403O15363C406O15360C415O15387C418O15384C430O15427C433O15423C443O15447C446O15443C450O15403C465O15488C468O15484C478O15508C481O15504C486O15464C501O15549C504O15545C515O15569C518O15565C523O15525C539O15610C542O15606C553O15630C556O15626C561O15586C570O15177C575O15646,,
code-creation,LazyCompile,10,419446,0x1e1c193ecbe,16,isBigUint64Array node:internal/util/types:53:26,0x1534218abf8,~
code-source-info,0x1e1c193ecbe,17,1423,1514,C0O1436C5O1443C12O1490C15O1511,,
code-creation,LazyCompile,10,419502,0x1e1c193edde,19,msFromTimeSpec node:internal/fs/utils:449:24,0x1d44cc228b8,~
code-source-info,0x1e1c193edde,84,11503,11564,C0O11520C2O11533C4O11531C10O11552C12O11550C15O11543C18O11561,,
code-creation,LazyCompile,10,419588,0x1e1c193f01e,116,Stats node:internal/fs/utils:498:15,0x1d44cc22ab0,~
code-source-info,0x1e1c193f01e,84,13295,13836,C0O13435C41O13435C46O13565C48O13578C52O13592C54O13605C58O13619C60O13632C64O13646C66O13663C70O13681C73O13694C77O13692C81O13718C84O13731C88O13729C92O13755C95O13768C99O13766C103O13792C106O13809C110O13807C115O13835,,
code-creation,LazyCompile,10,419678,0x1e1c193f1f6,62,StatsBase node:internal/fs/utils:403:19,0x1d44cc22488,~
code-source-info,0x1e1c193f1f6,84,10364,10665,C0O10452C2O10461C6O10471C8O10481C12O10492C14O10503C18O10515C20O10524C24O10534C26O10543C30O10553C32O10563C36O10574C38O10587C42O10601C44O10610C48O10620C50O10630C54O10641C56O10653C61O10664,,
code-creation,LazyCompile,10,419799,0x1e1c193f3ee,29,dateFromMs node:internal/fs/utils:463:20,0x1d44cc22958,~
code-source-info,0x1e1c193f3ee,84,12029,12076,C0O12039C7O12055C10O12055C17O12066C23O12046C28O12073,,
code-creation,LazyCompile,10,419880,0x1e1c193f4f6,16,StatsBase.isDirectory node:internal/fs/utils:417:43,0x1d44cc224d8,~
code-source-info,0x1e1c193f4f6,84,10711,10762,C0O10731C7O10750C10O10731C15O10759,,
code-creation,LazyCompile,10,419938,0x1e1c193f60e,54,Stats._checkModeProperty node:internal/fs/utils:520:46,0x1d44cc22b00,~
code-source-info,0x1e1c193f60e,84,14194,14422,C0O14210C8O14241C10O14237C17O14265C19O14261C26O14294C28O14290C33O14312C34O14325C35O14391C42O14398C44O14396C50O14406C53O14419,,
code-creation,LazyCompile,10,419997,0x1e1c193f746,16,StatsBase.isFile node:internal/fs/utils:421:38,0x1d44cc22568,~
code-source-info,0x1e1c193f746,84,10804,10855,C0O10824C7O10843C10O10824C15O10852,,
code-creation,RegExp,3,420170,0x1c660988960,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,LazyCompile,10,421170,0x1e1c193f8e6,37,get search node:internal/url:907:13,0x2f67da39018,~
code-source-info,0x1e1c193f8e6,39,25347,25478,C0O25375C4O25380C6O25379C10O25365C15O25395C19O25423C24O25438C26O25448C27O25454C32O25465C36O25473,,
code-creation,LazyCompile,10,421264,0x1e1c193fa2e,37,get hash node:internal/url:937:11,0x2f67da39168,~
code-source-info,0x1e1c193fa2e,39,26109,26252,C0O26140C4O26145C6O26144C10O26127C15O26160C19O26194C24O26209C26O26219C27O26225C32O26236C36O26247,,
code-creation,LazyCompile,10,421436,0x1e1c193fbbe,181,set search node:internal/url:914:13,0x2f67da39088,~
code-source-info,0x1e1c193fbbe,39,25494,26017,C0O25522C4O25527C6O25526C10O25542C17O25551C23O25577C25O25588C30O25605C31O25615C35O25630C44O25644C46O25643C51O25640C57O25686C58O25696C64O25700C69O25709C79O25718C86O25758C88O25768C92O25781C101O25794C106O25791C110O25822C114O25845C125O25859C134O25893C142O25893C154O25845C159O25967C168O25989C170O25988C174O25967C180O26016,,
code-creation,LazyCompile,10,421602,0x1e1c193fdb6,41,toUSVString node:internal/util:59:21,0x15342185200,~
code-source-info,0x1e1c193fdb6,15,1402,1702,C0O1425C4O1579C11O1599C14O1579C20O1629C22O1646C24O1657C25O1661C30O1692C35O1668C40O1699,,
code-creation,LazyCompile,10,421772,0x1e1c193ff2e,144,set hash node:internal/url:944:11,0x2f67da391d0,~
code-source-info,0x1e1c193ff2e,39,26266,26713,C0O26292C4O26297C6O26296C10O26347C15O26370C17O26390C18O26403C22O26418C31O26432C33O26431C38O26428C42O26463C43O26470C44O26483C45O26491C51O26495C56O26504C66O26511C73O26547C75O26560C79O26571C88O26584C93O26581C97O26613C108O26625C117O26658C125O26658C137O26613C143O26712,,
code-creation,LazyCompile,10,421897,0x18a5eb3fee6,51,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:1096:39,0x18a5eb38700,~
code-source-info,0x18a5eb3fee6,122,36637,36802,C0O36656C7O36665C12O36684C19O36693C24O36719C31O36728C36O36748C43O36754C48O36748C50O36801,,
new,MemoryChunk,0xa8f33c0000,262144
code-creation,LazyCompile,10,422053,0xa8f33c11ce,64,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:103:39,0x18a5eb3c908,~
code-source-info,0xa8f33c11ce,123,3548,3759,C0O3583C7O3583C13O3600C20O3635C23O3660C28O3605C35O3676C36O3688C37O3692C42O3723C46O3715C58O3732C63O3756,,
code-creation,LazyCompile,10,422120,0xa8f33c170e,18,toString node:internal/url:743:11,0x2f67da38888,~
code-source-info,0xa8f33c170e,39,21354,21394,C0O21364C4O21376C6O21375C12O21384C17O21389,,
code-creation,LazyCompile,10,422319,0xa8f33c1ab6,280,getFileProtocolModuleFormat node:internal/modules/esm/get_format:51:37,0x18a5eb3c868,~
code-source-info,0xa8f33c1ab6,123,1588,2922,C0O1639C5O1639C10O1674C15O1674C20O1696C22O1704C27O1722C32O1729C39O1749C50O1786C51O1812C58O1830C62O1840C64O1852C66O1866C67O1872C74O1908C79O2007C83O2025C84O2042C85O2065C88O2074C93O2078C100O2098C107O2118C112O2150C117O2150C122O2206C127O2206C132O2254C139O2275C142O2291C147O2275C156O2254C162O2324C167O2395C171O2491C182O2470C191O2568C201O2545C207O2621C216O2747C229O2765C239O2708C243O2799C259O2805C264O2799C265O2874C270O2881C279O2919,,
code-creation,LazyCompile,10,422558,0xa8f33c1e6e,275,extname node:path:836:10,0x2e9b6d0d838,~
code-source-info,0xa8f33c1e6e
code-creation,LazyCompile,10,422718,0xa8f33c20fe,13,getPackageType node:internal/modules/esm/resolve:843:24,0x18a5eb38430,~
code-source-info,0xa8f33c20fe,122,28338,28431,C0O28371C3O28371C8O28423C12O28428,,
code-creation,LazyCompile,10,422808,0xa8f33c2356,173,getPackageScopeConfig node:internal/modules/esm/resolve:253:31,0x18a5eb37e90,~
code-source-info,0xa8f33c2356,122,7805,8904,C0O7842C13O7842C19O7941C24O7956C32O7960C39O8038C41O8072C46O8089C49O8089C54O8072C60O8198C66O8206C68O8227C69O8262C72O8283C85O8300C91O8509C96O8541C100O8518C105O8551C107O7882C110O8590C115O8590C120O8646C127O8664C132O8712C137O8734C142O8778C147O8803C154O8823C159O8840C164O8840C170O8880C172O8901,,
code-creation,LazyCompile,10,423097,0xa8f33c2776,331,getPackageConfig node:internal/modules/esm/resolve:197:26,0x18a5eb37e40,~
code-source-info,0xa8f33c
code-creation,Function,11,423380,0x1c660989000,956,URL node:internal/url:632:14,0x2f67da38670,^
code-source-info,0x1c660989000,39,18128,18532,,,
code-creation,Function,11,423420,0x1c660989420,252,SafeSet node:internal/per_context/primordials:379:16,0xaf8d78abe0,^
code-source-info,0x1c660989420,6,11306,11323,,,
code-creation,Function,11,423449,0x1c660989580,280, node:internal/url:649:21,0x2f67da38748,^
code-source-info,0x1c660989580,39,18645,18722,,,
code-creation,Function,11,423474,0x1c660989700,156,get protocol node:internal/url:783:15,0x2f67da38a18,^
code-source-info,0x1c660989700,39,22328,22371,,,
code-creation,Function,11,423500,0x1c660989800,340,URLContext node:internal/url:161:14,0x2f67da37e10,^
code-source-info,0x1c660989800,39,3883,4105,,,
code-creation,Function,11,423536,0x1c6609899c0,1468,onParseComplete node:internal/url:544:25,0x2f67da383a0,^
code-source-info,0x1c6609899c0,39,15246,15932,,,
code-creation,LazyCompile,10,423744,0xa8f33c322e,3, node:internal/per_context/primordials:291:21,0xaf8d78a570,~
code-source-info,0xa8f33c322e,6,8563,8594,C0O8575C2O8587,,
code-creation,LazyCompile,10,423828,0xa8f33c32f6,36,validateOutput node:internal/modules/esm/loader:832:28,0x1e1c1937cd8,~
code-source-info,0xa8f33c32f6,118,25286,25531,C0O25326C10O25395C28O25401C33O25395C35O25530,,
code-creation,LazyCompile,10,423903,0xa8f33c3426,80,has node:internal/modules/esm/module_map:37:6,0x18a5eb32a00,~
code-source-info,0xa8f33c3426,119,1295,1453,C11O1308C18O1336C28O1336C33O1369C43O1369C48O1404C50O1417C61O1417C71O1427C78O1434C79O1448,,
code-creation,LazyCompile,10,424005,0xa8f33c3586,78,get node:internal/modules/esm/module_map:18:6,0x18a5eb32960,~
code-source-info,0xa8f33c3586,119,604,748,C11O617C18O645C28O645C33O678C43O678C48O713C50O726C61O726C71O736C77O743,,
code-creation,LazyCompile,10,424111,0xa8f33c377e,111,#createModuleJob node:internal/modules/esm/loader:458:19,0x18a5eb2f818,~
code-source-info,0xa8f33c377e,118,13819,14708,C0O13819C17O13892C22O14377C31O14420C37O14420C42O14479C70O14479C76O14632C79O14637C84O14647C92O14673C103O14647C108O14692C110O14703,,
code-creation,LazyCompile,10,424260,0xa8f33c3aa6,196,ModuleJob node:internal/modules/esm/module_job:53:14,0x18a5eb337c0,~
code-source-info,0xa8f33c3aa6,120,1308,3117,C0O1308C27O1341C32O1341C50O1419C55O1431C59O1446C64O1468C68O1493C73O1505C77O1520C82O1536C86O1557C90O1569C94O1707C101O1728C104O1757C113O1766C122O1771C135O1728C140O1726C144O1878C149O2793C152O2807C155O2805C159O2917C169O2944C178O2952C181O2917C186O3082C190O3100C195O3116,,
code-creation,LazyCompile,10,424409,0xa8f33c44fe,198,moduleProvider node:internal/modules/esm/loader:459:28,0xa8f33c36a8,~
code-source-info,0xa8f33c44fe,118,13892,14349,C10O13892C18O14012C21O14023C26O14028C33O14044C39O14061C43O14023C57O14012C80O13949C85O13971C90O13993C95O14118C102O14130C107O14130C113O14157C115O14185C130O14191C135O14185C136O14266C158O14273C173O14342,,
code-creation,LazyCompile,10,424631,0xa8f33c4b66,601,load node:internal/modules/esm/loader:559:13,0x18a5eb2fa48,~
code-source-info,0xa8f33c4b
code-creation,LazyCompile,10,424897,0xa8f33c5016,137,validateArgs node:internal/modules/esm/loader:570:26,0xa8f33c4840,~
code-source-info,0xa8f33c5016,118,17633,18411,C0O17679C6O17836C15O17882C31O17842C36O17836C37O18055C40O18065C45O18075C50O18075C60O18117C69O18117C78O18165C87O18214C103O18171C108O18165C109O18343C113O18352C122O18375C130O18352C136O18410,,
code-creation,LazyCompile,10,425086,0xa8f33c529e,238,defaultLoad node:internal/modules/esm/load:72:27,0x1e1c1907368,~
code-source-info,0xa8f33c529e,129,2270,2805,C10O2270C18O2308C21O2324C26O2368C31O2381C36O2410C41O2437C46O2452C59O2446C87O2494C101O2494C106O2550C108O2567C115O2596C120O2623C124O2648C129O2675C132O2708C145O2702C168O2678C173O2691C178O2744C185O2758C191O2771C197O2789C213O2802,,
code-creation,LazyCompile,10,425202,0xa8f33c5826,150,validateAssertions node:internal/modules/esm/assert:55:28,0x18a5eb35840,~
code-source-info,0xa8f33c5826,121,1835,2993,C12O1897C17O1897C26O1940C33O1953C37O1968C38O1999C48O2155C55O2505C66O2130C67O2142C68O2320C76O2325C83O2393C84O2405C85O2422C88O2469C93O2429C98O2475C99O2581C100O2593C101O2745C109O2750C116O2862C129O2868C134O2862C135O2939C138O2979C143O2939C149O2992,,
code-creation,LazyCompile,10,425362,0xa8f33c5bd6,450,getSource node:internal/modules/esm/load:32:25,0x1e1c1907318,~
code-source-info,0xa8f33c5bd6,129,1031,2123,C10O1031C18O1066C25O1066C31O1101C34O1113C36O1135C43O1144C48O1164C53O1179C65O1173C95O1223C102O1232C107O1266C114O1286C117O1311C122O1266C128O1327C130O1348C137O1354C142O1348C143O1403C150O1414C157O1435C164O1455C167O1455C174O1481C183O1444C191O1520C197O1568C204O1577C209O1605C216O1614C221O1651C226O1657C239O1651C265O1711C277O1701C303O1740C310O1796C315O1819C321O1860C335O1860C340O1927C353O1933C358O1927C359O2003C366O2013C375O2032C380O2039C385O2048C390O2048C396O2089C403O2098C409O2111C425O2120,,
code-creation,LazyCompile,10,425582,0xa8f33c5fde,196,readFile node:internal/fs/promises:811:24,0x1e1c19098a0,~
code-source-info,0xa8f33c5fde,130,23406,23752,C10O23406C18O23427C23O23448C28O23437C35O23497C44O23515C46O23535C48O23524C53O23552C56O23559C71O23589C72O23595C75O23616C80O23595C84O23641C98O23647C111O23641C137O23675C145O23710C151O23742C156O23682C171O23749,,
code-creation,LazyCompile,10,425678,0xa8f33c7e66,56,checkAborted node:internal/fs/promises:325:22,0x1e1c1908bd0,~
code-source-info,0xa8f33c7e66,130,7537,7639,C0O7551C7O7561C16O7577C23O7598C35O7624C48O7583C53O7577C55O7638,,
code-creation,LazyCompile,10,425762,0xa8f33c802e,182,open node:internal/fs/promises:455:20,0x1e1c1908db0,~
code-source-info,0xa8f33c802e,130,11856,12169,C10O11856C18O11881C23O11888C29O11935C34O11935C39O11960C55O11967C62O12006C69O12040C72O12048C79O12063C82O12074C87O12074C95O12151C104O12048C117O12034C142O12013C157O12166,,
code-creation,LazyCompile,10,425945,0xa8f33c8566,515,stringToFlags node:internal/fs/utils:558:23,0x1d44cc22be0,~
code-source-info,0xa8f33c
code-creation,LazyCompile,10,426150,0xa8f33c8956,97,parseFileMode node:internal/validators:60:23,0x15342189230,~
code-source-info,0xa8f33c8956,16,1561,1876,C0O1585C11O1603C17O1641C24O1665C27O1645C34O1701C41O1746C52O1707C57O1701C58O1769C66O1777C73O1813C89O1813C94O1860C96O1873,,
code-creation,LazyCompile,10,426241,0xa8f33c8aee,206, node:internal/validators:85:3,0x153421892f0,~
code-source-info,0xa8f33c8aee,16,2362,2951,C36O2505C42O2545C58O2551C63O2545C64O2612C67O2617C73O2642C78O2647C84O2682C100O2688C105O2682C106O2753C116O2792C129O2805C142O2759C147O2753C148O2832C150O2842C157O2857C162O2873C172O2912C185O2925C198O2879C203O2873C205O2950,,
code-creation,LazyCompile,10,426322,0xa8f33c8cb6,9,isInt32 node:internal/validators:37:17,0x15342188d58,~
code-source-info,0xa8f33c8cb6,16,785,830,C0O798C2O822C5O811C8O827,,
code-creation,LazyCompile,10,427104,0xa8f33c8f5e,233,link node:internal/modules/esm/module_job:66:18,0xa8f33c3928,~
code-source-info,0xa8f33c8f5e,120,1878,2734,C4O1878C26O1899C36O1924C48O1913C73O1911C77O1946C89O1958C98O1976C100O1965C104O1946C108O2298C110O2298C112O2326C117O2331C122O2338C132O2338C138O2611C140O2648C147O2654C159O2648C184O2689C194O2696C208O2727,,
code-creation,LazyCompile,10,427208,0xa8f33c91be,19,primordials.PromisePrototypeCatch node:internal/per_context/primordials:412:37,0xaf8d78aef8,~
code-source-info,0xa8f33c91be,6,12258,12346,C0O12290C13O12290C18O12346,,
code-creation,LazyCompile,10,427309,0xa8f33c9396,216,set node:internal/modules/esm/module_map:23:6,0x18a5eb329b0,~
code-source-info,0xa8f33c9396,119,755,1288,C11O768C21O801C31O801C36O834C46O834C51O869C55O888C57O877C62O898C73O955C91O961C96O955C97O1024C109O1041C124O1066C126O1062C137O1106C148O1024C152O1165C154O1171C165O1171C178O1183C183O1183C188O1208C190O1231C194O1243C196O1256C210O1256C215O1283,,
code-creation,LazyCompile,10,427419,0xa8f33c9596,89,logger node:internal/util/debuglog:95:18,0x153421a5db8,~
code-source-info,0xa8f33c9596,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,427509,0xa8f33c96fe,140,debug node:internal/util/debuglog:76:15,0x153421a5d18,~
code-source-info,0xa8f33c96fe,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,427595,0xa8f33c98ae,41,init node:internal/util/debuglog:72:16,0x153421a5cc8,~
code-source-info,0xa8f33c98ae,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,427643,0xa8f33c999e,2,testEnabled node:internal/util/debuglog:32:19,0x3ed75664ce8,~
code-source-info,0xa8f33c999e,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,427724,0xa8f33c9b36,116,debuglogImpl node:internal/util/debuglog:49:22,0x153421a5b18,~
code-source-info,0xa8f33c9b36,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,427801,0xa8f33c9cee,10, node:internal/modules/esm/module_map:9:63,0x18a5eb328c0,~
code-source-info,0xa8f33c9cee,119,271,298,C0O284C2O290C9O297,,
code-creation,LazyCompile,10,427848,0xa8f33c9d9e,2,noop node:internal/util/debuglog:47:14,0x153421a5ac8,~
code-source-info,0xa8f33c9d9e,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,427960,0xa8f33c9e56,10, node:internal/modules/esm/loader:529:15,0x1e1c1937390,~
code-source-info,0xa8f33c9e56,118,16370,16388,C0O16383C5O16383C9O16388,,
code-creation,LazyCompile,10,428078,0xa8f33ca2ae,435,run node:internal/modules/esm/module_job:188:12,0x18a5eb338b0,~
code-source-info,0xa8f33ca2ae,120,6984,8197,C10O6984C18O7005C23O7005C35O6994C58O7041C61O7072C66O7108C71O7115C76O7115C90O7097C128O7175C133O7180C143O7187C152O7222C158O7260C163O7222C169O7281C182O7291C186O7328C196O7360C204O7332C211O7395C224O7405C228O7495C235O7526C240O7533C248O7495C259O7565C267O7615C272O7622C277O7565C283O7627C294O7652C299O7707C304O7735C309O7742C314O7708C320O7775C327O7780C332O7807C346O7956C360O7898C366O7979C372O8059C378O7817C382O8140C384O8140C385O8161C390O8183C410O8192,,
code-creation,LazyCompile,10,428250,0xa8f33ca5ee,24,instantiate node:internal/modules/esm/module_job:98:14,0x18a5eb33810,~
code-source-info,0xa8f33ca5ee,120,3134,3273,C0O3153C6O3215C11O3215C15O3208C19O3255C23O3268,,
code-creation,LazyCompile,10,428448,0xa8f33cacde,935,_instantiate node:internal/modules/esm/module_job:105:21,0x18a5eb33860,~
code-source-info,0xa8f33cacde
code-creation,LazyCompile,10,428691,0xa8f33cb33e,152,addJobsToDependencyGraph node:internal/modules/esm/module_job:107:38,0xa8f33caa20,~
code-source-info,0xa8f33cb33e,120,3380,3637,C10O3380C18O3410C23O3426C28O3426C35O3453C46O3460C47O3477C52O3489C57O3489C62O3551C74O3535C100O3566C109O3604C112O3573C127O3630,,
code-creation,LazyCompile,10,428914,0xa8f33cb6a6,627,processPromiseRejections node:internal/process/promises:211:34,0x2f67da1e808,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0xa8f33cb6a
tick,0x7ff7853a1aa4,429857,0,0x0,3,0x7ff785a454e0,0x1e1c1934193
code-creation,LazyCompile,10,429914,0xa8f33cc606,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x2f67da1dd78,~
code-source-info,0xa8f33cc606,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
code-creation,LazyCompile,10,430028,0xa8f33cc726,112,FileHandle node:internal/fs/promises:122:14,0x1e1c19098f0,~
code-source-info,0xa8f33cc726,130,3033,3206,C3O3053C11O3053C40O3067C45O3072C50O3081C54O3100C59O3105C67O3112C69O3136C77O3110C81O3152C86O3157C91O3164C95O3174C100O3179C104O3194C111O3205,,
code-creation,LazyCompile,10,430111,0xa8f33cc8a6,63,MixedEventEmitter node:internal/event_target:1022:16,0x1e1c19133d0,~
code-source-info,0xa8f33cc8a6,44,27987,28121,C0O27987C8O28006C15O28013C21O28049C25O28058C29O28049C41O28072C48O28094C54O28072C62O28120,,
code-creation,LazyCompile,10,430351,0xa8f33ccb8e,601,readFileHandle node:internal/fs/promises:365:30,0x1e1c1908c70,~
code-source-info,0xa8f33ccb8e
code-creation,LazyCompile,10,430588,0xa8f33ccfd6,8,get fd node:internal/fs/promises:135:9,0x1e1c19099a8,~
code-source-info,0xa8f33ccfd6,130,3283,3315,C0O3293C2O3305C4O3304C7O3310,,
code-creation,LazyCompile,10,430709,0xa8f33cd156,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:424:43,0xaf8d78afb0,~
code-source-info,0xa8f33cd156,6,12854,13134,C0O12854C13O12990C27O12990C32O13134,,
code-creation,LazyCompile,10,430774,0xa8f33cd2e6,46, node:internal/per_context/primordials:427:15,0xa8f33cd0a8,~
code-source-info,0xa8f33cd2e6,6,13002,13129,C0O13119C14O13017C20O13092C28O13099C34O13118C39O13119C45O13129,,
code-creation,LazyCompile,10,430827,0xa8f33cd42e,27,SafePromise node:internal/per_context/primordials:408:16,0xaf8d78aea8,~
code-source-info,0xa8f33cd42e,6,12178,12209,C3O12191C7O12197C11O12191C26O12208,,
code-creation,LazyCompile,10,430879,0xa8f33cd526,22, node:internal/per_context/primordials:428:21,0xa8f33cd230,~
code-source-info,0xa8f33cd526,6,13033,13082,C0O13043C16O13043C21O13082,,
code-creation,LazyCompile,10,430960,0xa8f33cd61e,19,allocUnsafeSlow node:buffer:388:50,0x153421bb138,~
code-source-info,0xa8f33cd61e,24,11718,11786,C0O11730C5O11730C9O11751C14O11758C18O11783,,
code-creation,LazyCompile,10,431020,0xa8f33cd72e,54, node:buffer:354:36,0x153421bb010,~
code-source-info,0xa8f33cd72e,24,10662,10822,C0O10677C8O10677C13O10710C14O10721C21O10737C23O10734C28O10757C33O10789C46O10763C51O10757C53O10821,,
code-creation,LazyCompile,10,431107,0xa8f33cd8b6,177,validateNumber node:internal/validators:124:24,0x15342189430,~
code-source-info,0xa8f33cd8b6,16,3685,4141,C19O3726C25O3762C41O3768C46O3762C47O3822C54O3848C66O3880C83O3930C86O3930C92O3958C110O4029C136O4061C151O4105C169O3964C174O3958C176O4140,,
code-creation,LazyCompile,10,431181,0xa8f33cda96,71,createUnsafeBuffer node:internal/buffer:1059:28,0x2f67da0bd18,~
code-source-info,0xa8f33cda96,25,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
code-creation,LazyCompile,10,431357,0xa8f33cdd86,248,close node:internal/fs/promises:195:11,0x1e1c190bb10,~
code-source-info,0xa8f33cdd86,130,4469,5290,C0O4482C7O4491C9O4490C15O4496C20O4513C27O4520C30O4537C31O4552C38O4561C40O4560C45O4586C52O4598C54O4597C57O4613C58O4628C65O4633C73O4639C77O4648C84O4657C86O4656C91O4664C96O4680C103O4685C108O4690C112O4703C119O4708C126O4725C136O4768C138O4767C142O4777C147O4777C157O4725C162O4723C168O4869C175O4874C182O4891C189O4933C199O4929C210O4891C215O4889C219O5233C222O5238C230O5238C235O5258C242O5270C244O5269C247O5285,,
code-creation,LazyCompile,10,431533,0xa8f33ce0ee,17, node:internal/fs/promises:209:9,0xa8f33cdb70,~
code-source-info,0xa8f33ce0ee,130,4795,4837,C0O4803C7O4808C11O4823C16O4836,,
code-creation,LazyCompile,10,431623,0xa8f33ce3ae,36,validateOutput node:internal/modules/esm/loader:596:28,0xa8f33c4890,~
code-source-info,0xa8f33ce3ae,118,18441,18686,C0O18481C10O18550C28O18556C33O18550C35O18685,,
code-creation,Function,11,431793,0x1c660989fe0,2568, node:internal/url:695:12,0x2f67da38838,^
code-source-info,0x1c660989fe0,39,19991,21286,,,
code-creation,Function,11,431846,0x1c66098aa60,876, node:internal/validators:163:3,0x15342189540,^
code-source-info,0x1c66098aa60,16,4893,5464,,,
code-creation,Function,11,431881,0x1c66098ae40,620,get pathname node:internal/url:889:15,0x2f67da38f38,^
code-source-info,0x1c66098ae40,39,24904,25104,,,
code-creation,Function,11,431907,0x1c66098b120,188,isURLInstance node:internal/url:1509:23,0x2f67da398c8,^
code-source-info,0x1c66098b120,39,43533,43632,,,
code-creation,Function,11,431937,0x1c66098b240,168,get href node:internal/url:747:11,0x2f67da388d8,^
code-source-info,0x1c66098b240,39,21408,21448,,,
code-creation,Function,11,431966,0x1c66098b360,252,SafePromise node:internal/per_context/primordials:408:16,0xaf8d78aea8,^
code-source-info,0x1c66098b360,6,12178,12209,,,
code-creation,Function,11,431993,0x1c66098b4c0,336,initSearchParams node:internal/url:1030:26,0x2f67da393b8,^
code-source-info,0x1c66098b4c0,39,28698,28819,,,
code-creation,LazyCompile,10,432149,0xa8f33cedae,200,moduleStrategy node:internal/modules/esm/translators:114:56,0x1e1c1916478,~
code-source-info,0xa8f33cedae,132,3260,3690,C0O3260C27O3287C40O3287C45O3332C50O3341C56O3363C66O3363C71O3400C83O3436C88O3400C92O3462C113O3462C119O3511C126O3522C131O3534C136O3538C141O3575C153O3638C157O3534C163O3673C175O3687,,
code-creation,LazyCompile,10,432249,0xa8f33cfb2e,83,assertBufferSource node:internal/modules/esm/translators:78:28,0x1e1c1916248,~
code-source-info,0xa8f33cfb2e,132,2213,2620,C0O2248C10O2300C11O2307C12O2364C15O2364C19O2324C24O2343C29O2384C35O2411C41O2442C42O2449C43O2458C50O2511C77O2464C82O2458,,
code-creation,LazyCompile,10,432316,0xa8f33cfc86,31,lazyTypes node:internal/modules/esm/translators:22:19,0x1e1c19161a8,~
code-source-info,0xa8f33cfc86,132,417,514,C0O425C6O446C10O460C11O464C17O480C24O478C30O511,,
code-creation,LazyCompile,10,432382,0xa8f33cfd9e,72,stringify node:internal/modules/esm/translators:94:19,0x1e1c1916298,~
code-source-info,0xa8f33cfd9e,132,2642,2847,C0O2654C6O2684C8O2696C9O2700C20O2700C25O2755C33O2788C36O2784C45O2804C50O2763C56O2816C61O2831C66O2831C71O2844,,
code-creation,LazyCompile,10,432539,0xa8f33cff96,211,TextDecoder node:internal/encoding:383:16,0x2f67da14140,~
script-source,27,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': kEnumerableProperty\x2C\x0d\n    'encodeInto': kEnumerableProperty\x2C\x0d\n    'encoding': kEnumerableProperty\x2C\x0d\n    [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      const handle = getConverter(enc\x2C flags);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kHandle] = handle;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n    }\x0d\n\x0d\n\x0d\n    decode(input = empty\x2C options = kEmptyObject) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (!isArrayBufferView(input)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\x0d\n      if (typeof ret === 'number') {\x0d\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\x0d\n      }\x0d\n      return ret.toString('ucs2');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = kEmptyObject) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                  input.byteLength);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nconst sharedProperties = ObjectGetOwnPropertyDescriptors({\x0d\n  get encoding() {\x0d\n    validateDecoder(this);\x0d\n    return this[kEncoding];\x0d\n  }\x2C\x0d\n\x0d\n  get fatal() {\x0d\n    validateDecoder(this);\x0d\n    return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n  }\x2C\x0d\n\x0d\n  get ignoreBOM() {\x0d\n    validateDecoder(this);\x0d\n    return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n  }\x2C\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateDecoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const constructor = getConstructorOf(this) || TextDecoder;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n    obj.encoding = this.encoding;\x0d\n    obj.fatal = this.fatal;\x0d\n    obj.ignoreBOM = this.ignoreBOM;\x0d\n    if (opts.showHidden) {\x0d\n      obj[kFlags] = this[kFlags];\x0d\n      obj[kHandle] = this[kHandle];\x0d\n    }\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return `${constructor.name} ${inspect(obj)}`;\x0d\n  }\x0d\n});\x0d\nconst propertiesValues = ObjectValues(sharedProperties);\x0d\nfor (let i = 0; i < propertiesValues.length; i++) {\x0d\n  // We want to use null-prototype objects to not rely on globally mutable\x0d\n  // %Object.prototype%.\x0d\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n}\x0d\nsharedProperties[inspect].enumerable = false;\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: kEnumerableProperty\x2C\x0d\n  ...sharedProperties\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0xa8f33cff96,27,10775,11595,C19O10806C26O10829C30O10862C40O10877C48O10862C53O11013C58O11013C63O11052C65O11084C74O11090C79O11084C80O11153C82O11163C86O11213C99O11221C108O11274C121O11286C130O11351C135O11351C141O11384C143O11419C152O11425C157O11419C158O11476C162O11481C166O11491C170O11506C174O11511C179O11520C183O11537C187O11542C192O11550C196O11566C200O11571C205O11582C210O11594,,
code-creation,LazyCompile,10,433755,0xa8f33d1466,55,getEncodingFromLabel node:internal/encoding:317:30,0x2f67da13e78,~
code-source-info,0xa8f33d1466,27,9041,9195,C0O9066C5O9076C10O9076C16O9091C18O9114C20O9125C21O9129C26O9146C34O9176C39O9176C44O9150C49O9146C54O9192,,
code-creation,LazyCompile,10,433926,0xa8f33d177e,232,decode node:internal/encoding:412:11,0x2f67da14260,~
code-source-info,0xa8f33d177e,27,11611,12467,C8O11620C23O11637C30O11660C35O11660C39O11690C46O11694C52O11730C57O11738C61O11750C66O11751C74O11778C81O11783C87O11820C107O11826C112O11820C113O12000C123O12015C131O12000C136O12151C138O12161C142O12209C158O12222C164O12266C173O12279C175O12278C185O12266C191O12311C195O12351C202O12400C212O12357C217O12351C218O12443C226O12443C231O12460,,
code-creation,LazyCompile,10,434032,0xa8f33d19a6,37,validateDecoder node:internal/encoding:68:25,0x2f67da13dd8,~
code-source-info,0xa8f33d19a6,27,1416,1520,C0O1427C7O1450C9O1449C14O1460C19O1475C29O1481C34O1475C36O1519,,
code-creation,LazyCompile,10,434149,0xa8f33d1b1e,162,toString node:buffer:790:46,0x153421bcf50,~
code-source-info,0xa8f33d1b1e,24,24231,24823,C0O24231C2O24273C8O24280C13O24306C20O24324C25O24306C31O24332C32O24360C37O24373C38O24383C43O24394C48O24413C50O24423C55O24436C57O24446C58O24460C65O24477C71O24506C76O24518C83O24542C90O24557C92O24565C97O24580C99O24590C100O24596C104O24641C109O24641C115O24663C116O24681C119O24681C124O24710C126O24738C133O24744C138O24738C139O24796C156O24796C161O24820,,
code-creation,LazyCompile,10,434393,0xa8f33d1dde,499,getEncodingOps node:buffer:684:24,0x153421bcda8,~
code-source-info,0xa8f33d1dde
code-creation,LazyCompile,10,434638,0xa8f33d21c6,12,slice node:buffer:608:12,0x153421bba58,~
code-source-info,0xa8f33d21c6,24,17718,17764,C0O17743C5O17743C11O17764,,
code-creation,LazyCompile,10,434783,0xa8f33d24ce,274,maybeCacheSourceMap node:internal/source_map/source_map_cache:80:29,0x18a5eb1f9d0,~
code-source-info,0xa8f33d24ce,112,2568,3836,C0O2657C3O2657C7O2684C10O2698C15O2702C23O2722C25O2742C26O2749C30O2764C35O2775C44O2773C54O2911C64O2911C68O2928C69O2935C70O2958C80O2958C86O3065C88O3096C91O3124C96O3131C101O3096C107O3167C112O3187C117O3194C122O3217C126O3249C131O3267C136O3271C143O3301C150O3333C160O3364C166O3379C170O3267C178O3406C182O3438C187O3462C192O3466C200O3500C210O3531C216O3546C220O3462C228O3705C233O3723C238O3727C246O3761C256O3792C262O3807C266O3723C273O3835,,
code-creation,LazyCompile,10,434922,0xa8f33d30b6,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:49:30,0x18a5eb1f930,~
code-source-info,0xa8f33d30b6,112,1716,1866,C0O1724C6O1768C11O1789C17O1789C22O1768C26O1838C30O1863,,
code-creation,LazyCompile,10,435002,0xa8f33d322e,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:56:30,0x18a5eb1f980,~
code-source-info,0xa8f33d322e,112,1899,2536,C0O1910C8O1910C13O2020C19O2020C24O1957C29O1984C34O2050C38O2080C42O2138C48O2138C53O2111C58O2195C64O2254C70O2417C76O2417C81O2389C86O2450C90O2509C92O2527C99O2535,,
code-creation,LazyCompile,10,435080,0xa8f33d33a6,30,validateBoolean node:internal/validators:148:25,0x153421894d0,~
code-source-info,0xa8f33d33a6,16,4555,4669,C0O4574C6O4611C22O4617C27O4611C29O4668,,
code-creation,LazyCompile,10,435209,0xa8f33d349e,10, node:internal/modules/esm/translators:42:63,0x1e1c1916428,~
code-source-info,0xa8f33d349e,132,1058,1085,C0O1071C2O1077C9O1084,,
code-creation,Script,10,435328,0xa8f33d387e,77, file:///C:/Users/Sanntizo/Documents/Programacion%20Backend/Entregas/Entrega%2015/src/Router/child.js:1:1,0xa8f33d3688,~
script-source,136,file:///C:/Users/Sanntizo/Documents/Programacion%20Backend/Entregas/Entrega%2015/src/Router/child.js,process.on('message'\x2C msg => {\x0d\n    console.log('mensaje del padre'\x2C msg)\x0d\n    process.send({NumerosAleatorios: aleatorio(msg.cant)})\x0d\n})\x0d\n\x0d\nconst aleatorio = (cant)=>{\x0d\n    \x0d\n    if (!cant) {\x0d\n        console.log('La cantidad no fue definida')\x0d\n        cant = 100000000\x0d\n    }\x0d\n    \x0d\n    const contadorNumeros = []\x0d\n    \x0d\n    for (let index = 0; index < cant; index++) {\x0d\n        contadorNumeros.push(Math.floor(Math.random() * 1000 + 1 ))\x0d\n    }\x0d\n    \x0d\n    const repetidos = {};\x0d\n    \x0d\n    contadorNumeros.forEach(function(numero){\x0d\n    repetidos[numero] = (repetidos[numero] || 0) + 1;\x0d\n    });\x0d\n    \x0d\n    return repetidos\x0d\n}
code-source-info,0xa8f33d387e,136,0,628,C10O0C20O0C40O0C44O0C48O8C61O8C68O159C72O159C76O628,,
code-creation,LazyCompile,10,435509,0xa8f33d3c2e,33,primordials.SafePromiseAll node:internal/per_context/primordials:452:30,0xaf8d78b0c0,~
code-source-info,0xa8f33d3c2e,6,13753,13985,C0O13753C13O13882C27O13882C32O13985,,
code-creation,LazyCompile,10,435568,0xa8f33d3d6e,49, node:internal/per_context/primordials:455:15,0xa8f33d3b80,~
code-source-info,0xa8f33d3d6e,6,13894,13980,C0O13970C7O13921C16O13925C25O13925C31O13921C37O13969C42O13970C48O13980,,
code-creation,LazyCompile,10,435633,0xa8f33d3ef6,45,arrayToSafePromiseIterable node:internal/per_context/primordials:438:36,0xaf8d78b070,~
code-source-info,0xa8f33d3ef6,6,13334,13576,C0O13334C9O13358C14O13374C23O13398C26O13424C31O13398C39O13358C44O13576,,
code-creation,LazyCompile,10,435766,0xa8f33d410e,5,get node:internal/bootstrap/pre_execution:413:8,0x18a5eb243b8,~
code-source-info,0xa8f33d410e,100,13524,13559,C0O13536C4O13552,,
code-creation,LazyCompile,10,435904,0xa8f33d422e,44,refCounted node:internal/child_process:539:13,0x3ed75670a48,~
code-source-info,0xa8f33d422e,104,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,435993,0xa8f33d434e,15, node:internal/modules/esm/loader:530:15,0x1e1c19373e0,~
code-source-info,0xa8f33d434e,118,16405,16442,C0O16408C5O16428C10O16428C14O16442,,
code-creation,LazyCompile,10,436126,0xa8f33d44be,307,removeListener node:events:675:28,0x153421af928,~
code-source-info,0xa8f33d44be
code-creation,LazyCompile,10,436294,0xa8f33d47a6,64,stopListeningIfSignal node:internal/process/signal:43:31,0x2f67da3dc58,~
code-source-info,0xa8f33d47a6,97,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
code-creation,LazyCompile,10,436361,0xa8f33d48ee,30,onRemoveListener node:child_process:179:57,0x18a5eb15468,~
code-source-info,0xa8f33d48ee,103,5478,5569,C0O5492C2O5501C9O5523C14O5541C19O5549C24O5549C29O5568,,
tick,0x7ff8278cfeb4,445794,0,0x0,8
tick,0x7ff8278cfeb4,461811,0,0x0,8
tick,0x7ff8278cfeb4,476787,0,0x0,8
tick,0x7ff8278cfeb4,491846,0,0x0,8
tick,0x7ff8278cfeb4,507745,0,0x0,8
tick,0x7ff8278cfeb4,523936,0,0x0,8
tick,0x7ff8278cfeb4,539778,0,0x0,8
tick,0x7ff8278cfeb4,555806,0,0x0,8
tick,0x7ff8278cfeb4,570844,0,0x0,8
tick,0x7ff8278cfeb4,586697,0,0x0,8
tick,0x7ff8278cfeb4,601913,0,0x0,8
tick,0x7ff8278cfeb4,616698,0,0x0,8
tick,0x7ff8278cfeb4,631725,0,0x0,8
tick,0x7ff8278cfeb4,646686,0,0x0,8
tick,0x7ff8278cfeb4,662681,0,0x0,8
tick,0x7ff8278cfeb4,678909,0,0x0,8
tick,0x7ff8278cfeb4,694647,0,0x0,8
tick,0x7ff8278cfeb4,710628,0,0x0,8
tick,0x7ff8278cfeb4,727376,0,0x0,8
tick,0x7ff8278cfeb4,741692,0,0x0,8
tick,0x7ff8278cfeb4,757855,0,0x0,8
tick,0x7ff8278cfeb4,772711,0,0x0,8
tick,0x7ff8278cfeb4,788619,0,0x0,8
tick,0x7ff8278cfeb4,804628,0,0x0,8
tick,0x7ff8278cfeb4,819624,0,0x0,8
tick,0x7ff8278cfeb4,835281,0,0x0,8
tick,0x7ff8278cfeb4,850574,0,0x0,8
tick,0x7ff8278cfeb4,866690,0,0x0,8
tick,0x7ff8278cfeb4,882181,0,0x0,8
tick,0x7ff8278cfeb4,898405,0,0x0,8
tick,0x7ff8278cfeb4,913105,0,0x0,8
tick,0x7ff8278cfeb4,929060,0,0x0,8
tick,0x7ff8278cfeb4,944111,0,0x0,8
tick,0x7ff8278cfeb4,960058,0,0x0,8
tick,0x7ff8278cfeb4,975019,0,0x0,8
tick,0x7ff8278cfeb4,991085,0,0x0,8
tick,0x7ff8278cfeb4,1007031,0,0x0,8
tick,0x7ff8278cfeb4,1030285,0,0x0,8
tick,0x7ff8278cfeb4,1038157,0,0x0,8
tick,0x7ff8278cfeb4,1054002,0,0x0,8
tick,0x7ff8278cfeb4,1069981,0,0x0,8
tick,0x7ff8278cfeb4,1086122,0,0x0,8
tick,0x7ff8278cfeb4,1102112,0,0x0,8
tick,0x7ff8278cfeb4,1116974,0,0x0,8
tick,0x7ff8278cfeb4,1131957,0,0x0,8
tick,0x7ff8278cfeb4,1148068,0,0x0,8
tick,0x7ff8278cfeb4,1162904,0,0x0,8
tick,0x7ff8278cfeb4,1177938,0,0x0,8
tick,0x7ff8278cfeb4,1193893,0,0x0,8
tick,0x7ff8278cfeb4,1209905,0,0x0,8
tick,0x7ff8278cfeb4,1224950,0,0x0,8
tick,0x7ff8278cfeb4,1239904,0,0x0,8
tick,0x7ff8278cfeb4,1255966,0,0x0,8
tick,0x7ff8278cfeb4,1273763,0,0x0,8
tick,0x7ff8278cfeb4,1289876,0,0x0,8
tick,0x7ff8278cfeb4,1302928,0,0x0,8
tick,0x7ff8278cfeb4,1318829,0,0x0,8
tick,0x7ff8278cfeb4,1333840,0,0x0,8
tick,0x7ff8278cfeb4,1349818,0,0x0,8
tick,0x7ff8278cfeb4,1365801,0,0x0,8
tick,0x7ff8278cfeb4,1380942,0,0x0,8
tick,0x7ff8278cfeb4,1395838,0,0x0,8
tick,0x7ff8278cfeb4,1410984,0,0x0,8
tick,0x7ff8278cfeb4,1425758,0,0x0,8
tick,0x7ff8278cfeb4,1440864,0,0x0,8
tick,0x7ff8278cfeb4,1455778,0,0x0,8
tick,0x7ff8278cfeb4,1470802,0,0x0,8
tick,0x7ff8278cfeb4,1486952,0,0x0,8
tick,0x7ff8278cfeb4,1501731,0,0x0,8
tick,0x7ff8278cfeb4,1516788,0,0x0,8
tick,0x7ff8278cfeb4,1532963,0,0x0,8
tick,0x7ff8278cfeb4,1547690,0,0x0,8
tick,0x7ff8278cfeb4,1562681,0,0x0,8
tick,0x7ff8278cfeb4,1578699,0,0x0,8
tick,0x7ff8278cfeb4,1593657,0,0x0,8
tick,0x7ff8278cfeb4,1608801,0,0x0,8
tick,0x7ff8278cfeb4,1623707,0,0x0,8
tick,0x7ff8278cfeb4,1639710,0,0x0,8
tick,0x7ff8278cfeb4,1656528,0,0x0,8
tick,0x7ff8278cfeb4,1672716,0,0x0,8
tick,0x7ff8278cfeb4,1687614,0,0x0,8
tick,0x7ff8278cfeb4,1704174,0,0x0,8
tick,0x7ff8278cfeb4,1719587,0,0x0,8
tick,0x7ff8278cfeb4,1735610,0,0x0,8
tick,0x7ff8278cfeb4,1752508,0,0x0,8
tick,0x7ff8278cfeb4,1769316,0,0x0,8
tick,0x7ff8278cfeb4,1783846,0,0x0,8
tick,0x7ff8278cfeb4,1799628,0,0x0,8
tick,0x7ff8278cfeb4,1814705,0,0x0,8
tick,0x7ff8278cfeb4,1829569,0,0x0,8
tick,0x7ff8278cfeb4,1845851,0,0x0,8
tick,0x7ff8278cfeb4,1861841,0,0x0,8
tick,0x7ff8278cfeb4,1877521,0,0x0,8
tick,0x7ff8278cfeb4,1893588,0,0x0,8
tick,0x7ff8278cfeb4,1908646,0,0x0,8
tick,0x7ff8278cfeb4,1923600,0,0x0,8
tick,0x7ff8278cfeb4,1941909,0,0x0,8
tick,0x7ff8278cfeb4,1955703,0,0x0,8
tick,0x7ff8278cfeb4,1971567,0,0x0,8
tick,0x7ff8278cfeb4,1986638,0,0x0,8
tick,0x7ff8278cfeb4,2001981,0,0x0,8
tick,0x7ff8278cfeb4,2016456,0,0x0,8
tick,0x7ff8278cfeb4,2032508,0,0x0,8
tick,0x7ff8278cfeb4,2047543,0,0x0,8
tick,0x7ff8278cfeb4,2062461,0,0x0,8
tick,0x7ff8278cfeb4,2078483,0,0x0,8
tick,0x7ff8278cfeb4,2093921,0,0x0,8
tick,0x7ff8278cfeb4,2109840,0,0x0,8
tick,0x7ff8278cfeb4,2125867,0,0x0,8
tick,0x7ff8278cfeb4,2143059,0,0x0,8
tick,0x7ff8278cfeb4,2157878,0,0x0,8
tick,0x7ff8278cfeb4,2171944,0,0x0,8
tick,0x7ff8278cfeb4,2187809,0,0x0,8
tick,0x7ff8278cfeb4,2202803,0,0x0,8
tick,0x7ff8278cfeb4,2217806,0,0x0,8
tick,0x7ff8278cfeb4,2233859,0,0x0,8
tick,0x7ff8278cfeb4,2249794,0,0x0,8
tick,0x7ff8278cfeb4,2265843,0,0x0,8
tick,0x7ff8278cfeb4,2281846,0,0x0,8
tick,0x7ff8278cfeb4,2297786,0,0x0,8
tick,0x7ff8278cfeb4,2314873,0,0x0,8
tick,0x7ff8278cfeb4,2328781,0,0x0,8
tick,0x7ff8278cfeb4,2344700,0,0x0,8
tick,0x7ff8278cfeb4,2359737,0,0x0,8
tick,0x7ff8278cfeb4,2375781,0,0x0,8
tick,0x7ff8278cfeb4,2392076,0,0x0,8
tick,0x7ff8278cfeb4,2405674,0,0x0,8
tick,0x7ff8278cfeb4,2420700,0,0x0,8
tick,0x7ff8278cfeb4,2436670,0,0x0,8
tick,0x7ff8278cfeb4,2451736,0,0x0,8
tick,0x7ff8278cfeb4,2467751,0,0x0,8
tick,0x7ff8278cfeb4,2483816,0,0x0,8
tick,0x7ff8278cfeb4,2498760,0,0x0,8
tick,0x7ff8278cfeb4,2513759,0,0x0,8
tick,0x7ff8278cfeb4,2529621,0,0x0,8
tick,0x7ff8278cfeb4,2545641,0,0x0,8
tick,0x7ff8278cfeb4,2562204,0,0x0,8
tick,0x7ff8278cfeb4,2576554,0,0x0,8
tick,0x7ff8278cfeb4,2592575,0,0x0,8
tick,0x7ff8278cfeb4,2607586,0,0x0,8
tick,0x7ff8278cfeb4,2623635,0,0x0,8
tick,0x7ff8278cfeb4,2639565,0,0x0,8
tick,0x7ff8278cfeb4,2655579,0,0x0,8
tick,0x7ff8278cfeb4,2671644,0,0x0,8
tick,0x7ff8278cfeb4,2686593,0,0x0,8
tick,0x7ff8278cfeb4,2702848,0,0x0,8
tick,0x7ff8278cfeb4,2717478,0,0x0,8
tick,0x7ff8278cfeb4,2732536,0,0x0,8
tick,0x7ff8278cfeb4,2748621,0,0x0,8
tick,0x7ff8278cfeb4,2763576,0,0x0,8
tick,0x7ff8278cfeb4,2779450,0,0x0,8
tick,0x7ff8278cfeb4,2794714,0,0x0,8
tick,0x7ff8278cfeb4,2809597,0,0x0,8
tick,0x7ff8278cfeb4,2825611,0,0x0,8
tick,0x7ff8278cfeb4,2842115,0,0x0,8
tick,0x7ff8278cfeb4,2856657,0,0x0,8
tick,0x7ff8278cfeb4,2872551,0,0x0,8
tick,0x7ff8278cfeb4,2887579,0,0x0,8
tick,0x7ff8278cfeb4,2902581,0,0x0,8
tick,0x7ff8278cfeb4,2917584,0,0x0,8
tick,0x7ff8278cfeb4,2933626,0,0x0,8
tick,0x7ff8278cfeb4,2949585,0,0x0,8
tick,0x7ff8278cfeb4,2965512,0,0x0,8
tick,0x7ff8278cfeb4,2980694,0,0x0,8
tick,0x7ff8278cfeb4,2996588,0,0x0,8
tick,0x7ff8278cfeb4,3012210,0,0x0,8
tick,0x7ff8278cfeb4,3026709,0,0x0,8
tick,0x7ff8278cfeb4,3042984,0,0x0,8
tick,0x7ff8278cfeb4,3057543,0,0x0,8
tick,0x7ff8278cfeb4,3073518,0,0x0,8
tick,0x7ff8278cfeb4,3088457,0,0x0,8
tick,0x7ff8278cfeb4,3103517,0,0x0,8
tick,0x7ff8278cfeb4,3118673,0,0x0,8
tick,0x7ff8278cfeb4,3134420,0,0x0,8
tick,0x7ff8278cfeb4,3149624,0,0x0,8
tick,0x7ff8278cfeb4,3165424,0,0x0,8
tick,0x7ff8278cfeb4,3181392,0,0x0,8
tick,0x7ff8278cfeb4,3197009,0,0x0,8
tick,0x7ff8278cfeb4,3212105,0,0x0,8
tick,0x7ff8278cfeb4,3228090,0,0x0,8
tick,0x7ff8278cfeb4,3242985,0,0x0,8
tick,0x7ff8278cfeb4,3259320,0,0x0,8
tick,0x7ff8278cfeb4,3274061,0,0x0,8
tick,0x7ff8278cfeb4,3288953,0,0x0,8
tick,0x7ff8278cfeb4,3304075,0,0x0,8
tick,0x7ff8278cfeb4,3319941,0,0x0,8
tick,0x7ff8278cfeb4,3336658,0,0x0,8
tick,0x7ff8278cfeb4,3352208,0,0x0,8
tick,0x7ff8278cfeb4,3368112,0,0x0,8
tick,0x7ff8278cfeb4,3383904,0,0x0,8
tick,0x7ff8278cfeb4,3399972,0,0x0,8
tick,0x7ff8278cfeb4,3414871,0,0x0,8
tick,0x7ff8278cfeb4,3429876,0,0x0,8
tick,0x7ff8278cfeb4,3445897,0,0x0,8
tick,0x7ff8278cfeb4,3462115,0,0x0,8
tick,0x7ff8278cfeb4,3477855,0,0x0,8
tick,0x7ff8278cfeb4,3493883,0,0x0,8
tick,0x7ff8278cfeb4,3510018,0,0x0,8
tick,0x7ff8278cfeb4,3526562,0,0x0,8
tick,0x7ff8278cfeb4,3542621,0,0x0,8
tick,0x7ff8278cfeb4,3557829,0,0x0,8
tick,0x7ff8278cfeb4,3574010,0,0x0,8
tick,0x7ff8278cfeb4,3589865,0,0x0,8
tick,0x7ff8278cfeb4,3605842,0,0x0,8
tick,0x7ff8278cfeb4,3621887,0,0x0,8
tick,0x7ff8278cfeb4,3637882,0,0x0,8
tick,0x7ff8278cfeb4,3653793,0,0x0,8
tick,0x7ff8278cfeb4,3669765,0,0x0,8
tick,0x7ff8278cfeb4,3685045,0,0x0,8
tick,0x7ff8278cfeb4,3699736,0,0x0,8
tick,0x7ff8278cfeb4,3714786,0,0x0,8
tick,0x7ff8278cfeb4,3731317,0,0x0,8
tick,0x7ff8278cfeb4,3745817,0,0x0,8
tick,0x7ff8278cfeb4,3761768,0,0x0,8
tick,0x7ff8278cfeb4,3777793,0,0x0,8
tick,0x7ff8278cfeb4,3793930,0,0x0,8
tick,0x7ff8278cfeb4,3809838,0,0x0,8
tick,0x7ff8278cfeb4,3824867,0,0x0,8
tick,0x7ff8278cfeb4,3843308,0,0x0,8
tick,0x7ff8278cfeb4,3855850,0,0x0,8
tick,0x7ff8278cfeb4,3870847,0,0x0,8
tick,0x7ff8278cfeb4,3886791,0,0x0,8
tick,0x7ff8278cfeb4,3901929,0,0x0,8
tick,0x7ff8278cfeb4,3916817,0,0x0,8
tick,0x7ff8278cfeb4,3931631,0,0x0,8
tick,0x7ff8278cfeb4,3947844,0,0x0,8
tick,0x7ff8278cfeb4,3963733,0,0x0,8
tick,0x7ff8278cfeb4,3978785,0,0x0,8
tick,0x7ff8278cfeb4,3993767,0,0x0,8
tick,0x7ff8278cfeb4,4009174,0,0x0,8
tick,0x7ff8278cfeb4,4023759,0,0x0,8
tick,0x7ff8278cfeb4,4038670,0,0x0,8
tick,0x7ff8278cfeb4,4054794,0,0x0,8
tick,0x7ff8278cfeb4,4070500,0,0x0,8
tick,0x7ff8278cfeb4,4086507,0,0x0,8
tick,0x7ff8278cfeb4,4102478,0,0x0,8
tick,0x7ff8278cfeb4,4118165,0,0x0,8
tick,0x7ff8278cfeb4,4134171,0,0x0,8
tick,0x7ff8278cfeb4,4149159,0,0x0,8
tick,0x7ff8278cfeb4,4164492,0,0x0,8
tick,0x7ff8278cfeb4,4180167,0,0x0,8
tick,0x7ff8278cfeb4,4196227,0,0x0,8
tick,0x7ff8278cfeb4,4211783,0,0x0,8
tick,0x7ff8278cfeb4,4226483,0,0x0,8
tick,0x7ff8278cfeb4,4242451,0,0x0,8
tick,0x7ff8278cfeb4,4257092,0,0x0,8
tick,0x7ff8278cfeb4,4272320,0,0x0,8
tick,0x7ff8278cfeb4,4288149,0,0x0,8
tick,0x7ff8278cfeb4,4303060,0,0x0,8
tick,0x7ff8278cfeb4,4318189,0,0x0,8
tick,0x7ff8278cfeb4,4334101,0,0x0,8
tick,0x7ff8278cfeb4,4349159,0,0x0,8
tick,0x7ff8278cfeb4,4364058,0,0x0,8
tick,0x7ff8278cfeb4,4379187,0,0x0,8
tick,0x7ff8278cfeb4,4395087,0,0x0,8
tick,0x7ff8278cfeb4,4410121,0,0x0,8
tick,0x7ff8278cfeb4,4425093,0,0x0,8
tick,0x7ff8278cfeb4,4442414,0,0x0,8
tick,0x7ff8278cfeb4,4455966,0,0x0,8
tick,0x7ff8278cfeb4,4470990,0,0x0,8
tick,0x7ff8278cfeb4,4485974,0,0x0,8
tick,0x7ff8278cfeb4,4501961,0,0x0,8
tick,0x7ff8278cfeb4,4518003,0,0x0,8
tick,0x7ff8278cfeb4,4534127,0,0x0,8
tick,0x7ff8278cfeb4,4549907,0,0x0,8
tick,0x7ff8278cfeb4,4564917,0,0x0,8
tick,0x7ff8278cfeb4,4579917,0,0x0,8
tick,0x7ff8278cfeb4,4594982,0,0x0,8
tick,0x7ff8278cfeb4,4611078,0,0x0,8
tick,0x7ff8278cfeb4,4626100,0,0x0,8
tick,0x7ff8278cfeb4,4643990,0,0x0,8
tick,0x7ff8278cfeb4,4664094,0,0x0,8
tick,0x7ff8278cfeb4,4673985,0,0x0,8
tick,0x7ff8278cfeb4,4689939,0,0x0,8
tick,0x7ff8278cfeb4,4705852,0,0x0,8
tick,0x7ff8278cfeb4,4722355,0,0x0,8
tick,0x7ff8278cfeb4,4746099,0,0x0,8
tick,0x7ff8278cfeb4,4751818,0,0x0,8
tick,0x7ff8278cfeb4,4767789,0,0x0,8
tick,0x7ff8278cfeb4,4783785,0,0x0,8
tick,0x7ff8278cfeb4,4799839,0,0x0,8
tick,0x7ff8278cfeb4,4814828,0,0x0,8
tick,0x7ff8278cfeb4,4830835,0,0x0,8
tick,0x7ff8278cfeb4,4845866,0,0x0,8
tick,0x7ff8278cfeb4,4863640,0,0x0,8
tick,0x7ff8278cfeb4,4878249,0,0x0,8
tick,0x7ff8278cfeb4,4892745,0,0x0,8
tick,0x7ff8278cfeb4,4908792,0,0x0,8
tick,0x7ff8278cfeb4,4923789,0,0x0,8
tick,0x7ff8278cfeb4,4939789,0,0x0,8
tick,0x7ff8278cfeb4,4955947,0,0x0,8
tick,0x7ff8278cfeb4,4971037,0,0x0,8
tick,0x7ff8278cfeb4,4986812,0,0x0,8
tick,0x7ff8278cfeb4,5001686,0,0x0,8
tick,0x7ff8278cfeb4,5016682,0,0x0,8
tick,0x7ff8278cfeb4,5032631,0,0x0,8
tick,0x7ff8278cfeb4,5047691,0,0x0,8
tick,0x7ff8278cfeb4,5063622,0,0x0,8
tick,0x7ff8278cfeb4,5079639,0,0x0,8
tick,0x7ff8278cfeb4,5095639,0,0x0,8
tick,0x7ff8278cfeb4,5112305,0,0x0,8
tick,0x7ff8278cfeb4,5126726,0,0x0,8
tick,0x7ff8278cfeb4,5141622,0,0x0,8
tick,0x7ff8278cfeb4,5157653,0,0x0,8
tick,0x7ff8278cfeb4,5173760,0,0x0,8
tick,0x7ff8278cfeb4,5188609,0,0x0,8
tick,0x7ff8278cfeb4,5203541,0,0x0,8
tick,0x7ff8278cfeb4,5219550,0,0x0,8
tick,0x7ff8278cfeb4,5235689,0,0x0,8
tick,0x7ff8278cfeb4,5251543,0,0x0,8
tick,0x7ff8278cfeb4,5267721,0,0x0,8
tick,0x7ff8278cfeb4,5283583,0,0x0,8
tick,0x7ff8278cfeb4,5299551,0,0x0,8
tick,0x7ff8278cfeb4,5314609,0,0x0,8
tick,0x7ff8278cfeb4,5330555,0,0x0,8
tick,0x7ff8278cfeb4,5345693,0,0x0,8
tick,0x7ff8278cfeb4,5361912,0,0x0,8
tick,0x7ff8278cfeb4,5377364,0,0x0,8
tick,0x7ff8278cfeb4,5393323,0,0x0,8
tick,0x7ff8278cfeb4,5411882,0,0x0,8
tick,0x7ff8278cfeb4,5424190,0,0x0,8
tick,0x7ff8278cfeb4,5440157,0,0x0,8
tick,0x7ff8278cfeb4,5455140,0,0x0,8
tick,0x7ff8278cfeb4,5471121,0,0x0,8
tick,0x7ff8278cfeb4,5487216,0,0x0,8
tick,0x7ff8278cfeb4,5501976,0,0x0,8
tick,0x7ff8278cfeb4,5517131,0,0x0,8
tick,0x7ff8278cfeb4,5532341,0,0x0,8
tick,0x7ff8278cfeb4,5547922,0,0x0,8
tick,0x7ff8278cfeb4,5564803,0,0x0,8
tick,0x7ff8278cfeb4,5583285,0,0x0,8
tick,0x7ff8278cfeb4,5592100,0,0x0,8
tick,0x7ff8278cfeb4,5607071,0,0x0,8
tick,0x7ff8278cfeb4,5622027,0,0x0,8
tick,0x7ff8278cfeb4,5638099,0,0x0,8
tick,0x7ff8278cfeb4,5653050,0,0x0,8
tick,0x7ff8278cfeb4,5668992,0,0x0,8
tick,0x7ff8278cfeb4,5684025,0,0x0,8
tick,0x7ff8278cfeb4,5700160,0,0x0,8
tick,0x7ff8278cfeb4,5715112,0,0x0,8
tick,0x7ff8278cfeb4,5730045,0,0x0,8
tick,0x7ff8278cfeb4,5745863,0,0x0,8
tick,0x7ff8278cfeb4,5762913,0,0x0,8
tick,0x7ff8278cfeb4,5783865,0,0x0,8
tick,0x7ff8278cfeb4,5791986,0,0x0,8
tick,0x7ff8278cfeb4,5806930,0,0x0,8
tick,0x7ff8278cfeb4,5821980,0,0x0,8
tick,0x7ff8278cfeb4,5838004,0,0x0,8
tick,0x7ff8278cfeb4,5853900,0,0x0,8
tick,0x7ff8278cfeb4,5868877,0,0x0,8
tick,0x7ff8278cfeb4,5883980,0,0x0,8
tick,0x7ff8278cfeb4,5899914,0,0x0,8
tick,0x7ff8278cfeb4,5915978,0,0x0,8
tick,0x7ff8278cfeb4,5931953,0,0x0,8
tick,0x7ff8278cfeb4,5947845,0,0x0,8
tick,0x7ff8278cfeb4,5963899,0,0x0,8
tick,0x7ff8278cfeb4,5980423,0,0x0,8
tick,0x7ff8278cfeb4,5996029,0,0x0,8
tick,0x7ff8278cfeb4,6011252,0,0x0,8
tick,0x7ff8278cfeb4,6028580,0,0x0,8
tick,0x7ff8278cfeb4,6042114,0,0x0,8
tick,0x7ff8278cfeb4,6057794,0,0x0,8
tick,0x7ff8278cfeb4,6073853,0,0x0,8
tick,0x7ff8278cfeb4,6089775,0,0x0,8
tick,0x7ff8278cfeb4,6104745,0,0x0,8
tick,0x7ff8278cfeb4,6119751,0,0x0,8
tick,0x7ff8278cfeb4,6135790,0,0x0,8
tick,0x7ff8278cfeb4,6151746,0,0x0,8
tick,0x7ff8278cfeb4,6167742,0,0x0,8
tick,0x7ff8278cfeb4,6183833,0,0x0,8
tick,0x7ff8278cfeb4,6199698,0,0x0,8
tick,0x7ff8278cfeb4,6215724,0,0x0,8
tick,0x7ff8278cfeb4,6231722,0,0x0,8
tick,0x7ff8278cfeb4,6247029,0,0x0,8
tick,0x7ff8278cfeb4,6262194,0,0x0,8
tick,0x7ff8278cfeb4,6277894,0,0x0,8
tick,0x7ff8278cfeb4,6296166,0,0x0,8
tick,0x7ff8278cfeb4,6312241,0,0x0,8
tick,0x7ff8278cfeb4,6324638,0,0x0,8
tick,0x7ff8278cfeb4,6339630,0,0x0,8
tick,0x7ff8278cfeb4,6355625,0,0x0,8
tick,0x7ff8278cfeb4,6371798,0,0x0,8
tick,0x7ff8278cfeb4,6387110,0,0x0,8
tick,0x7ff8278cfeb4,6401613,0,0x0,8
tick,0x7ff8278cfeb4,6416590,0,0x0,8
tick,0x7ff8278cfeb4,6431594,0,0x0,8
tick,0x7ff8278cfeb4,6447555,0,0x0,8
tick,0x7ff8278cfeb4,6462751,0,0x0,8
tick,0x7ff8278cfeb4,6478579,0,0x0,8
tick,0x7ff8278cfeb4,6494591,0,0x0,8
tick,0x7ff8278cfeb4,6510602,0,0x0,8
tick,0x7ff8278cfeb4,6526971,0,0x0,8
tick,0x7ff8278cfeb4,6542568,0,0x0,8
tick,0x7ff8278cfeb4,6558405,0,0x0,8
tick,0x7ff8278cfeb4,6573673,0,0x0,8
tick,0x7ff8278cfeb4,6588273,0,0x0,8
tick,0x7ff8278cfeb4,6604247,0,0x0,8
tick,0x7ff8278cfeb4,6620235,0,0x0,8
tick,0x7ff8278cfeb4,6636399,0,0x0,8
tick,0x7ff8278cfeb4,6652237,0,0x0,8
tick,0x7ff8278cfeb4,6668391,0,0x0,8
tick,0x7ff8278cfeb4,6683415,0,0x0,8
tick,0x7ff8278cfeb4,6699292,0,0x0,8
tick,0x7ff8278cfeb4,6714298,0,0x0,8
tick,0x7ff8278cfeb4,6730364,0,0x0,8
tick,0x7ff8278cfeb4,6745224,0,0x0,8
tick,0x7ff8278cfeb4,6760175,0,0x0,8
tick,0x7ff8278cfeb4,6776210,0,0x0,8
tick,0x7ff8278cfeb4,6791133,0,0x0,8
tick,0x7ff8278cfeb4,6806168,0,0x0,8
tick,0x7ff8278cfeb4,6821364,0,0x0,8
tick,0x7ff8278cfeb4,6837116,0,0x0,8
tick,0x7ff8278cfeb4,6852106,0,0x0,8
tick,0x7ff8278cfeb4,6868172,0,0x0,8
tick,0x7ff8278cfeb4,6884086,0,0x0,8
tick,0x7ff8278cfeb4,6899109,0,0x0,8
tick,0x7ff8278cfeb4,6915196,0,0x0,8
tick,0x7ff8278cfeb4,6930234,0,0x0,8
tick,0x7ff8278cfeb4,6946235,0,0x0,8
tick,0x7ff8278cfeb4,6962902,0,0x0,8
tick,0x7ff8278cfeb4,6977617,0,0x0,8
tick,0x7ff8278cfeb4,6993020,0,0x0,8
tick,0x7ff8278cfeb4,7008082,0,0x0,8
tick,0x7ff8278cfeb4,7023017,0,0x0,8
tick,0x7ff8278cfeb4,7038981,0,0x0,8
tick,0x7ff8278cfeb4,7054511,0,0x0,8
tick,0x7ff8278cfeb4,7070096,0,0x0,8
tick,0x7ff8278cfeb4,7087177,0,0x0,8
tick,0x7ff8278cfeb4,7102067,0,0x0,8
tick,0x7ff8278cfeb4,7117950,0,0x0,8
tick,0x7ff8278cfeb4,7132936,0,0x0,8
tick,0x7ff8278cfeb4,7149048,0,0x0,8
tick,0x7ff8278cfeb4,7163979,0,0x0,8
tick,0x7ff8278cfeb4,7180204,0,0x0,8
tick,0x7ff8278cfeb4,7196792,0,0x0,8
tick,0x7ff8278cfeb4,7212735,0,0x0,8
tick,0x7ff8278cfeb4,7226978,0,0x0,8
tick,0x7ff8278cfeb4,7242195,0,0x0,8
tick,0x7ff8278cfeb4,7257866,0,0x0,8
tick,0x7ff8278cfeb4,7273878,0,0x0,8
tick,0x7ff8278cfeb4,7289878,0,0x0,8
tick,0x7ff8278cfeb4,7305853,0,0x0,8
tick,0x7ff8278cfeb4,7320862,0,0x0,8
tick,0x7ff8278cfeb4,7335849,0,0x0,8
tick,0x7ff8278cfeb4,7353210,0,0x0,8
tick,0x7ff8278cfeb4,7366828,0,0x0,8
tick,0x7ff8278cfeb4,7382899,0,0x0,8
tick,0x7ff8278cfeb4,7397784,0,0x0,8
tick,0x7ff8278cfeb4,7413987,0,0x0,8
tick,0x7ff8278cfeb4,7429824,0,0x0,8
tick,0x7ff8278cfeb4,7445769,0,0x0,8
tick,0x7ff8278cfeb4,7460837,0,0x0,8
tick,0x7ff8278cfeb4,7476037,0,0x0,8
tick,0x7ff8278cfeb4,7491741,0,0x0,8
tick,0x7ff8278cfeb4,7506805,0,0x0,8
tick,0x7ff8278cfeb4,7521851,0,0x0,8
tick,0x7ff8278cfeb4,7537714,0,0x0,8
tick,0x7ff8278cfeb4,7552869,0,0x0,8
tick,0x7ff8278cfeb4,7567716,0,0x0,8
tick,0x7ff8278cfeb4,7583748,0,0x0,8
tick,0x7ff8278cfeb4,7598673,0,0x0,8
tick,0x7ff8278cfeb4,7613951,0,0x0,8
tick,0x7ff8278cfeb4,7629655,0,0x0,8
tick,0x7ff8278cfeb4,7646052,0,0x0,8
tick,0x7ff8278cfeb4,7661958,0,0x0,8
tick,0x7ff8278cfeb4,7677643,0,0x0,8
tick,0x7ff8278cfeb4,7693656,0,0x0,8
tick,0x7ff8278cfeb4,7708724,0,0x0,8
tick,0x7ff8278cfeb4,7723650,0,0x0,8
tick,0x7ff8278cfeb4,7739599,0,0x0,8
tick,0x7ff8278cfeb4,7754752,0,0x0,8
tick,0x7ff8278cfeb4,7769568,0,0x0,8
tick,0x7ff8278cfeb4,7785989,0,0x0,8
tick,0x7ff8278cfeb4,7801727,0,0x0,8
tick,0x7ff8278cfeb4,7816617,0,0x0,8
tick,0x7ff8278cfeb4,7832548,0,0x0,8
tick,0x7ff8278cfeb4,7847776,0,0x0,8
tick,0x7ff8278cfeb4,7862535,0,0x0,8
tick,0x7ff8278cfeb4,7878831,0,0x0,8
tick,0x7ff8278cfeb4,7893583,0,0x0,8
tick,0x7ff8278cfeb4,7909631,0,0x0,8
tick,0x7ff8278cfeb4,7925898,0,0x0,8
tick,0x7ff8278cfeb4,7941793,0,0x0,8
tick,0x7ff8278cfeb4,7957107,0,0x0,8
tick,0x7ff8278cfeb4,7972379,0,0x0,8
tick,0x7ff8278cfeb4,7988199,0,0x0,8
tick,0x7ff8278cfeb4,8003252,0,0x0,8
tick,0x7ff8278cfeb4,8018086,0,0x0,8
tick,0x7ff8278cfeb4,8034136,0,0x0,8
tick,0x7ff8278cfeb4,8049304,0,0x0,8
tick,0x7ff8278cfeb4,8094050,0,0x0,8
tick,0x7ff8278cfeb4,8097607,0,0x0,8
tick,0x7ff8278cfeb4,8110045,0,0x0,8
tick,0x7ff8278cfeb4,8126023,0,0x0,8
tick,0x7ff8278cfeb4,8141497,0,0x0,8
tick,0x7ff8278cfeb4,8156061,0,0x0,8
tick,0x7ff8278cfeb4,8172156,0,0x0,8
tick,0x7ff8278cfeb4,8187098,0,0x0,8
tick,0x7ff8278cfeb4,8203247,0,0x0,8
tick,0x7ff8278cfeb4,8219027,0,0x0,8
tick,0x7ff8278cfeb4,8235316,0,0x0,8
tick,0x7ff8278cfeb4,8251974,0,0x0,8
tick,0x7ff8278cfeb4,8265099,0,0x0,8
tick,0x7ff8278cfeb4,8279962,0,0x0,8
tick,0x7ff8278cfeb4,8296363,0,0x0,8
tick,0x7ff8278cfeb4,8310930,0,0x0,8
tick,0x7ff8278cfeb4,8326915,0,0x0,8
tick,0x7ff8278cfeb4,8342877,0,0x0,8
tick,0x7ff8278cfeb4,8357887,0,0x0,8
tick,0x7ff8278cfeb4,8373901,0,0x0,8
tick,0x7ff8278cfeb4,8388913,0,0x0,8
tick,0x7ff8278cfeb4,8404855,0,0x0,8
tick,0x7ff8278cfeb4,8420891,0,0x0,8
tick,0x7ff8278cfeb4,8435823,0,0x0,8
tick,0x7ff8278cfeb4,8451825,0,0x0,8
tick,0x7ff8278cfeb4,8466949,0,0x0,8
tick,0x7ff8278cfeb4,8481811,0,0x0,8
tick,0x7ff8278cfeb4,8496849,0,0x0,8
tick,0x7ff8278cfeb4,8511853,0,0x0,8
tick,0x7ff8278cfeb4,8527789,0,0x0,8
tick,0x7ff8278cfeb4,8543818,0,0x0,8
tick,0x7ff8278cfeb4,8559801,0,0x0,8
tick,0x7ff8278cfeb4,8574740,0,0x0,8
tick,0x7ff8278cfeb4,8589731,0,0x0,8
tick,0x7ff8278cfeb4,8605804,0,0x0,8
tick,0x7ff8278cfeb4,8622237,0,0x0,8
tick,0x7ff8278cfeb4,8637709,0,0x0,8
tick,0x7ff8278cfeb4,8653819,0,0x0,8
tick,0x7ff8278cfeb4,8669704,0,0x0,8
tick,0x7ff8278cfeb4,8684677,0,0x0,8
tick,0x7ff8278cfeb4,8700024,0,0x0,8
tick,0x7ff8278cfeb4,8715756,0,0x0,8
tick,0x7ff8278cfeb4,8732046,0,0x0,8
tick,0x7ff8278cfeb4,8746024,0,0x0,8
tick,0x7ff8278cfeb4,8762848,0,0x0,8
tick,0x7ff8278cfeb4,8776621,0,0x0,8
tick,0x7ff8278cfeb4,8791624,0,0x0,8
tick,0x7ff8278cfeb4,8807636,0,0x0,8
tick,0x7ff8278cfeb4,8822595,0,0x0,8
tick,0x7ff8278cfeb4,8837625,0,0x0,8
tick,0x7ff8278cfeb4,8853647,0,0x0,8
tick,0x7ff8278cfeb4,8869691,0,0x0,8
tick,0x7ff8278cfeb4,8885570,0,0x0,8
tick,0x7ff8278cfeb4,8901660,0,0x0,8
tick,0x7ff8278cfeb4,8916692,0,0x0,8
tick,0x7ff8278cfeb4,8931941,0,0x0,8
tick,0x7ff8278cfeb4,8947762,0,0x0,8
tick,0x7ff8278cfeb4,8963718,0,0x0,8
tick,0x7ff8278cfeb4,8981433,0,0x0,8
tick,0x7ff8278cfeb4,8995498,0,0x0,8
tick,0x7ff8278cfeb4,9010923,0,0x0,8
tick,0x7ff8278cfeb4,9025544,0,0x0,8
tick,0x7ff8278cfeb4,9041474,0,0x0,8
tick,0x7ff8278cfeb4,9057466,0,0x0,8
tick,0x7ff8278cfeb4,9073690,0,0x0,8
tick,0x7ff8278cfeb4,9088521,0,0x0,8
tick,0x7ff8278cfeb4,9103432,0,0x0,8
tick,0x7ff8278cfeb4,9120585,0,0x0,8
tick,0x7ff8278cfeb4,9135448,0,0x0,8
tick,0x7ff8278cfeb4,9150451,0,0x0,8
tick,0x7ff8278cfeb4,9166325,0,0x0,8
tick,0x7ff8278cfeb4,9183907,0,0x0,8
tick,0x7ff8278cfeb4,9195414,0,0x0,8
tick,0x7ff8278cfeb4,9210600,0,0x0,8
tick,0x7ff8278cfeb4,9226445,0,0x0,8
tick,0x7ff8278cfeb4,9242355,0,0x0,8
tick,0x7ff8278cfeb4,9258465,0,0x0,8
tick,0x7ff8278cfeb4,9274167,0,0x0,8
tick,0x7ff8278cfeb4,9290139,0,0x0,8
tick,0x7ff8278cfeb4,9306146,0,0x0,8
tick,0x7ff8278cfeb4,9322138,0,0x0,8
tick,0x7ff8278cfeb4,9338152,0,0x0,8
tick,0x7ff8278cfeb4,9354211,0,0x0,8
tick,0x7ff8278cfeb4,9370158,0,0x0,8
tick,0x7ff8278cfeb4,9386092,0,0x0,8
tick,0x7ff8278cfeb4,9401201,0,0x0,8
tick,0x7ff8278cfeb4,9417539,0,0x0,8
tick,0x7ff8278cfeb4,9433925,0,0x0,8
tick,0x7ff8278cfeb4,9448102,0,0x0,8
tick,0x7ff8278cfeb4,9465696,0,0x0,8
tick,0x7ff8278cfeb4,9480024,0,0x0,8
tick,0x7ff8278cfeb4,9496215,0,0x0,8
tick,0x7ff8278cfeb4,9511178,0,0x0,8
tick,0x7ff8278cfeb4,9526988,0,0x0,8
tick,0x7ff8278cfeb4,9541972,0,0x0,8
tick,0x7ff8278cfeb4,9558028,0,0x0,8
tick,0x7ff8278cfeb4,9573929,0,0x0,8
tick,0x7ff8278cfeb4,9590051,0,0x0,8
tick,0x7ff8278cfeb4,9605919,0,0x0,8
tick,0x7ff8278cfeb4,9622882,0,0x0,8
tick,0x7ff8278cfeb4,9637004,0,0x0,8
tick,0x7ff8278cfeb4,9652003,0,0x0,8
tick,0x7ff8278cfeb4,9666933,0,0x0,8
tick,0x7ff8278cfeb4,9682584,0,0x0,8
tick,0x7ff8278cfeb4,9698007,0,0x0,8
tick,0x7ff8278cfeb4,9713980,0,0x0,8
tick,0x7ff8278cfeb4,9733537,0,0x0,8
tick,0x7ff8278cfeb4,9744820,0,0x0,8
tick,0x7ff8278cfeb4,9759809,0,0x0,8
tick,0x7ff8278cfeb4,9775951,0,0x0,8
tick,0x7ff8278cfeb4,9791824,0,0x0,8
tick,0x7ff8278cfeb4,9807778,0,0x0,8
tick,0x7ff8278cfeb4,9822766,0,0x0,8
tick,0x7ff8278cfeb4,9837785,0,0x0,8
tick,0x7ff8278cfeb4,9853757,0,0x0,8
tick,0x7ff8278cfeb4,9869832,0,0x0,8
tick,0x7ff8278cfeb4,9885792,0,0x0,8
tick,0x7ff8278cfeb4,9901859,0,0x0,8
tick,0x7ff8278cfeb4,9916932,0,0x0,8
tick,0x7ff8278cfeb4,9931734,0,0x0,8
tick,0x7ff8278cfeb4,9946850,0,0x0,8
tick,0x7ff8278cfeb4,9962847,0,0x0,8
tick,0x7ff8278cfeb4,9977748,0,0x0,8
tick,0x7ff8278cfeb4,9993789,0,0x0,8
tick,0x7ff8278cfeb4,10008807,0,0x0,8
tick,0x7ff8278cfeb4,10023959,0,0x0,8
tick,0x7ff8278cfeb4,10039662,0,0x0,8
tick,0x7ff8278cfeb4,10055798,0,0x0,8
tick,0x7ff8278cfeb4,10071629,0,0x0,8
tick,0x7ff8278cfeb4,10087662,0,0x0,8
tick,0x7ff8278cfeb4,10102637,0,0x0,8
tick,0x7ff8278cfeb4,10117607,0,0x0,8
tick,0x7ff8278cfeb4,10133650,0,0x0,8
tick,0x7ff8278cfeb4,10149681,0,0x0,8
tick,0x7ff8278cfeb4,10165600,0,0x0,8
tick,0x7ff8278cfeb4,10181665,0,0x0,8
tick,0x7ff8278cfeb4,10196853,0,0x0,8
tick,0x7ff8278cfeb4,10211794,0,0x0,8
tick,0x7ff8278cfeb4,10227659,0,0x0,8
tick,0x7ff8278cfeb4,10243647,0,0x0,8
tick,0x7ff8278cfeb4,10259837,0,0x0,8
tick,0x7ff8278cfeb4,10275516,0,0x0,8
tick,0x7ff8278cfeb4,10291953,0,0x0,8
tick,0x7ff8278cfeb4,10307767,0,0x0,8
tick,0x7ff8278cfeb4,10323493,0,0x0,8
tick,0x7ff8278cfeb4,10338996,0,0x0,8
tick,0x7ff8278cfeb4,10353467,0,0x0,8
tick,0x7ff8278cfeb4,10368440,0,0x0,8
tick,0x7ff8278cfeb4,10383518,0,0x0,8
tick,0x7ff8278cfeb4,10399465,0,0x0,8
tick,0x7ff8278cfeb4,10415450,0,0x0,8
tick,0x7ff8278cfeb4,10430467,0,0x0,8
tick,0x7ff8278cfeb4,10445422,0,0x0,8
tick,0x7ff8278cfeb4,10460585,0,0x0,8
tick,0x7ff8278cfeb4,10476423,0,0x0,8
tick,0x7ff8278cfeb4,10491401,0,0x0,8
tick,0x7ff8278cfeb4,10506422,0,0x0,8
tick,0x7ff8278cfeb4,10522455,0,0x0,8
tick,0x7ff8278cfeb4,10537363,0,0x0,8
tick,0x7ff8278cfeb4,10553352,0,0x0,8
tick,0x7ff8278cfeb4,10568342,0,0x0,8
tick,0x7ff8278cfeb4,10583889,0,0x0,8
tick,0x7ff8278cfeb4,10599324,0,0x0,8
tick,0x7ff8278cfeb4,10616047,0,0x0,8
tick,0x7ff8278cfeb4,10631757,0,0x0,8
tick,0x7ff8278cfeb4,10646453,0,0x0,8
tick,0x7ff8278cfeb4,10661458,0,0x0,8
tick,0x7ff8278cfeb4,10677273,0,0x0,8
tick,0x7ff8278cfeb4,10693294,0,0x0,8
tick,0x7ff8278cfeb4,10708285,0,0x0,8
tick,0x7ff8278cfeb4,10723272,0,0x0,8
tick,0x7ff8278cfeb4,10738241,0,0x0,8
tick,0x7ff8278cfeb4,10754668,0,0x0,8
tick,0x7ff8278cfeb4,10770346,0,0x0,8
tick,0x7ff8278cfeb4,10786390,0,0x0,8
tick,0x7ff8278cfeb4,10802271,0,0x0,8
tick,0x7ff8278cfeb4,10818182,0,0x0,8
tick,0x7ff8278cfeb4,10834328,0,0x0,8
tick,0x7ff8278cfeb4,10849098,0,0x0,8
tick,0x7ff8278cfeb4,10864055,0,0x0,8
tick,0x7ff8278cfeb4,10880057,0,0x0,8
tick,0x7ff8278cfeb4,10895062,0,0x0,8
tick,0x7ff8278cfeb4,10910075,0,0x0,8
tick,0x7ff8278cfeb4,10926116,0,0x0,8
tick,0x7ff8278cfeb4,10942246,0,0x0,8
tick,0x7ff8278cfeb4,10958018,0,0x0,8
tick,0x7ff8278cfeb4,10974036,0,0x0,8
tick,0x7ff8278cfeb4,10990088,0,0x0,8
tick,0x7ff8278cfeb4,11004999,0,0x0,8
tick,0x7ff8278cfeb4,11019979,0,0x0,8
tick,0x7ff8278cfeb4,11036056,0,0x0,8
tick,0x7ff8278cfeb4,11051328,0,0x0,8
tick,0x7ff8278cfeb4,11067417,0,0x0,8
tick,0x7ff8278cfeb4,11082397,0,0x0,8
tick,0x7ff8278cfeb4,11096960,0,0x0,8
tick,0x7ff8278cfeb4,11113885,0,0x0,8
tick,0x7ff8278cfeb4,11127932,0,0x0,8
tick,0x7ff8278cfeb4,11143976,0,0x0,8
tick,0x7ff8278cfeb4,11159990,0,0x0,8
tick,0x7ff8278cfeb4,11176272,0,0x0,8
tick,0x7ff8278cfeb4,11191907,0,0x0,8
tick,0x7ff8278cfeb4,11207868,0,0x0,8
tick,0x7ff8278cfeb4,11223978,0,0x0,8
tick,0x7ff8278cfeb4,11239984,0,0x0,8
tick,0x7ff8278cfeb4,11263914,0,0x0,8
tick,0x7ff8278cfeb4,11271923,0,0x0,8
tick,0x7ff8278cfeb4,11288153,0,0x0,8
tick,0x7ff8278cfeb4,11303890,0,0x0,8
tick,0x7ff8278cfeb4,11319031,0,0x0,8
tick,0x7ff8278cfeb4,11334167,0,0x0,8
tick,0x7ff8278cfeb4,11348858,0,0x0,8
tick,0x7ff8278cfeb4,11363806,0,0x0,8
tick,0x7ff8278cfeb4,11379933,0,0x0,8
tick,0x7ff8278cfeb4,11395940,0,0x0,8
tick,0x7ff8278cfeb4,11411911,0,0x0,8
tick,0x7ff8278cfeb4,11425772,0,0x0,8
tick,0x7ff8278cfeb4,11442007,0,0x0,8
tick,0x7ff8278cfeb4,11458859,0,0x0,8
tick,0x7ff8278cfeb4,11473774,0,0x0,8
tick,0x7ff8278cfeb4,11488762,0,0x0,8
tick,0x7ff8278cfeb4,11503769,0,0x0,8
tick,0x7ff8278cfeb4,11519766,0,0x0,8
tick,0x7ff8278cfeb4,11535693,0,0x0,8
tick,0x7ff8278cfeb4,11551815,0,0x0,8
tick,0x7ff8278cfeb4,11567686,0,0x0,8
tick,0x7ff8278cfeb4,11583896,0,0x0,8
tick,0x7ff8278cfeb4,11600005,0,0x0,8
tick,0x7ff8278cfeb4,11614651,0,0x0,8
tick,0x7ff8278cfeb4,11630711,0,0x0,8
tick,0x7ff8278cfeb4,11645818,0,0x0,8
tick,0x7ff8278cfeb4,11662242,0,0x0,8
tick,0x7ff8278cfeb4,11677111,0,0x0,8
tick,0x7ff8278cfeb4,11692133,0,0x0,8
tick,0x7ff8278cfeb4,11708106,0,0x0,8
tick,0x7ff8278cfeb4,11723111,0,0x0,8
tick,0x7ff8278cfeb4,11738303,0,0x0,8
tick,0x7ff8278cfeb4,11753052,0,0x0,8
tick,0x7ff8278cfeb4,11769056,0,0x0,8
tick,0x7ff8278cfeb4,11785126,0,0x0,8
tick,0x7ff8278cfeb4,11800166,0,0x0,8
tick,0x7ff8278cfeb4,11815124,0,0x0,8
tick,0x7ff8278cfeb4,11830110,0,0x0,8
tick,0x7ff8278cfeb4,11845043,0,0x0,8
tick,0x7ff8278cfeb4,11860013,0,0x0,8
tick,0x7ff8278cfeb4,11876044,0,0x0,8
tick,0x7ff8278cfeb4,11892002,0,0x0,8
tick,0x7ff8278cfeb4,11908085,0,0x0,8
tick,0x7ff8278cfeb4,11924213,0,0x0,8
tick,0x7ff8278cfeb4,11939949,0,0x0,8
tick,0x7ff8278cfeb4,11956055,0,0x0,8
tick,0x7ff8278cfeb4,11971074,0,0x0,8
tick,0x7ff8278cfeb4,11987142,0,0x0,8
tick,0x7ff8278cfeb4,12001938,0,0x0,8
tick,0x7ff8278cfeb4,12017960,0,0x0,8
tick,0x7ff8278cfeb4,12033512,0,0x0,8
tick,0x7ff8278cfeb4,12047936,0,0x0,8
tick,0x7ff8278cfeb4,12064416,0,0x0,8
tick,0x7ff8278cfeb4,12079935,0,0x0,8
tick,0x7ff8278cfeb4,12095998,0,0x0,8
tick,0x7ff8278cfeb4,12111380,0,0x0,8
tick,0x7ff8278cfeb4,12128824,0,0x0,8
tick,0x7ff8278cfeb4,12141840,0,0x0,8
tick,0x7ff8278cfeb4,12168934,0,0x0,8
tick,0x7ff8278cfeb4,12177144,0,0x0,8
tick,0x7ff8278cfeb4,12192024,0,0x0,8
tick,0x7ff8278cfeb4,12204560,0,0x0,8
tick,0x7ff8278cfeb4,12227756,0,0x0,8
tick,0x7ff8278cfeb4,12243277,0,0x0,8
tick,0x7ff8278cfeb4,12256843,0,0x0,8
tick,0x7ff8278cfeb4,12271259,0,0x0,8
tick,0x7ff8278cfeb4,12286967,0,0x0,8
tick,0x7ff8278cfeb4,12299517,0,0x0,8
tick,0x7ff8278cfeb4,12315261,0,0x0,8
tick,0x7ff8278cfeb4,12328880,0,0x0,8
tick,0x7ff8278cfeb4,12354959,0,0x0,8
tick,0x7ff8278cfeb4,12364729,0,0x0,8
tick,0x7ff8278cfeb4,12380169,0,0x0,8
tick,0x7ff8278cfeb4,12392507,0,0x0,8
tick,0x7ff8278cfeb4,12406521,0,0x0,8
tick,0x7ff8278cfeb4,12423423,0,0x0,8
tick,0x7ff8278cfeb4,12438162,0,0x0,8
tick,0x7ff8278cfeb4,12453091,0,0x0,8
tick,0x7ff8278cfeb4,12475995,0,0x0,8
tick,0x7ff8278cfeb4,12493927,0,0x0,8
tick,0x7ff8278cfeb4,12507966,0,0x0,8
tick,0x7ff8278cfeb4,12514350,0,0x0,8
tick,0x7ff8278cfeb4,12531846,0,0x0,8
tick,0x7ff8278cfeb4,12546464,0,0x0,8
tick,0x7ff8278cfeb4,12562993,0,0x0,8
tick,0x7ff8278cfeb4,12578851,0,0x0,8
tick,0x7ff8278cfeb4,12593653,0,0x0,8
tick,0x7ff8278cfeb4,12605662,0,0x0,8
tick,0x7ff8278cfeb4,12625174,0,0x0,8
tick,0x7ff8278cfeb4,12637296,0,0x0,8
tick,0x7ff8278cfeb4,12652846,0,0x0,8
tick,0x7ff8278cfeb4,12672314,0,0x0,8
tick,0x7ff8278cfeb4,12681870,0,0x0,8
tick,0x7ff8278cfeb4,12697225,0,0x0,8
tick,0x7ff8278cfeb4,12713015,0,0x0,8
tick,0x7ff8278cfeb4,12732423,0,0x0,8
tick,0x7ff8278cfeb4,12743728,0,0x0,8
tick,0x7ff8278cfeb4,12760605,0,0x0,8
tick,0x7ff8278cfeb4,12774084,0,0x0,8
tick,0x7ff8278cfeb4,12789732,0,0x0,8
tick,0x7ff8278cfeb4,12804680,0,0x0,8
tick,0x7ff8278cfeb4,12821819,0,0x0,8
tick,0x7ff8278cfeb4,12837175,0,0x0,8
tick,0x7ff8278cfeb4,12853144,0,0x0,8
tick,0x7ff8278cfeb4,12869334,0,0x0,8
tick,0x7ff8278cfeb4,12882831,0,0x0,8
tick,0x7ff8278cfeb4,12899348,0,0x0,8
tick,0x7ff8278cfeb4,12914582,0,0x0,8
tick,0x7ff8278cfeb4,12928763,0,0x0,8
tick,0x7ff8278cfeb4,12944546,0,0x0,8
tick,0x7ff8278cfeb4,12960366,0,0x0,8
tick,0x7ff8278cfeb4,12975113,0,0x0,8
tick,0x7ff8278cfeb4,12991756,0,0x0,8
tick,0x7ff8278cfeb4,13006733,0,0x0,8
tick,0x7ff8278cfeb4,13022622,0,0x0,8
tick,0x7ff8278cfeb4,13054916,0,0x0,8
tick,0x7ff8278cfeb4,13070094,0,0x0,8
tick,0x7ff8278cfeb4,13086007,0,0x0,8
tick,0x7ff8278cfeb4,13109356,0,0x0,8
tick,0x7ff8278cfeb4,13123397,0,0x0,8
tick,0x7ff8278cfeb4,13131966,0,0x0,8
tick,0x7ff8278cfeb4,13148656,0,0x0,8
tick,0x7ff8278cfeb4,13163744,0,0x0,8
tick,0x7ff8278cfeb4,13187069,0,0x0,8
tick,0x7ff8278cfeb4,13199821,0,0x0,8
tick,0x7ff8278cfeb4,13208090,0,0x0,8
tick,0x7ff8278cfeb4,13224190,0,0x0,8
tick,0x7ff8278cfeb4,13239134,0,0x0,8
tick,0x7ff8278cfeb4,13254195,0,0x0,8
tick,0x7ff8278cfeb4,13270095,0,0x0,8
tick,0x7ff8278cfeb4,13287342,0,0x0,8
tick,0x7ff8278cfeb4,13303643,0,0x0,8
tick,0x7ff8278cfeb4,13327844,0,0x0,8
tick,0x7ff8278cfeb4,13362420,0,0x0,8
tick,0x7ff8278cfeb4,13397718,0,0x0,8
tick,0x7ff8278cfeb4,13416461,0,0x0,8
tick,0x7ff8278cfeb4,13441285,0,0x0,8
tick,0x7ff8278cfeb4,13458687,0,0x0,8
tick,0x7ff8278cfeb4,13472923,0,0x0,8
tick,0x7ff8278cfeb4,13492005,0,0x0,8
tick,0x7ff8278cfeb4,13509424,0,0x0,8
tick,0x7ff8278cfeb4,13522908,0,0x0,8
tick,0x7ff8278cfeb4,13533095,0,0x0,8
tick,0x7ff8278cfeb4,13549972,0,0x0,8
tick,0x7ff8278cfeb4,13566139,0,0x0,8
tick,0x7ff8278cfeb4,13587535,0,0x0,8
tick,0x7ff8278cfeb4,13596150,0,0x0,8
tick,0x7ff8278cfeb4,13612289,0,0x0,8
tick,0x7ff8278cfeb4,13626425,0,0x0,8
tick,0x7ff8278cfeb4,13646344,0,0x0,8
tick,0x7ff8278cfeb4,13659251,0,0x0,8
tick,0x7ff8278cfeb4,13699141,0,0x0,8
tick,0x7ff8278cfeb4,13716393,0,0x0,8
tick,0x7ff8278cfeb4,13722406,0,0x0,8
tick,0x7ff8278cfeb4,13737947,0,0x0,8
tick,0x7ff8278cfeb4,13752235,0,0x0,8
tick,0x7ff8278cfeb4,13767612,0,0x0,8
tick,0x7ff8278cfeb4,13783346,0,0x0,8
tick,0x7ff8278cfeb4,13799045,0,0x0,8
tick,0x7ff8278cfeb4,13813656,0,0x0,8
tick,0x7ff8278cfeb4,13829698,0,0x0,8
tick,0x7ff8278cfeb4,13854082,0,0x0,8
tick,0x7ff8278cfeb4,13862587,0,0x0,8
tick,0x7ff8278cfeb4,13876652,0,0x0,8
tick,0x7ff8278cfeb4,13892371,0,0x0,8
tick,0x7ff8278cfeb4,13908858,0,0x0,8
tick,0x7ff8278cfeb4,13923587,0,0x0,8
tick,0x7ff8278cfeb4,13941846,0,0x0,8
tick,0x7ff8278cfeb4,13962954,0,0x0,8
tick,0x7ff8278cfeb4,13972793,0,0x0,8
tick,0x7ff8278cfeb4,13987752,0,0x0,8
tick,0x7ff8278cfeb4,14012250,0,0x0,8
tick,0x7ff8278cfeb4,14020462,0,0x0,8
tick,0x7ff8278cfeb4,14042437,0,0x0,8
tick,0x7ff8278cfeb4,14054023,0,0x0,8
tick,0x7ff8278cfeb4,14065669,0,0x0,8
tick,0x7ff8278cfeb4,14081947,0,0x0,8
tick,0x7ff8278cfeb4,14097980,0,0x0,8
tick,0x7ff8278cfeb4,14113823,0,0x0,8
tick,0x7ff8278cfeb4,14128847,0,0x0,8
tick,0x7ff8278cfeb4,14143871,0,0x0,8
tick,0x7ff8278cfeb4,14158745,0,0x0,8
tick,0x7ff8278cfeb4,14181317,0,0x0,8
tick,0x7ff8278cfeb4,14188545,0,0x0,8
tick,0x7ff8278cfeb4,14204682,0,0x0,8
tick,0x7ff8278cfeb4,14223237,0,0x0,8
tick,0x7ff8278cfeb4,14236090,0,0x0,8
tick,0x7ff8278cfeb4,14252414,0,0x0,8
tick,0x7ff8278cfeb4,14268856,0,0x0,8
tick,0x7ff8278cfeb4,14282917,0,0x0,8
tick,0x7ff8278cfeb4,14299487,0,0x0,8
tick,0x7ff8278cfeb4,14313947,0,0x0,8
tick,0x7ff8278cfeb4,14338393,0,0x0,8
tick,0x7ff8278cfeb4,14347691,0,0x0,8
tick,0x7ff8278cfeb4,14363243,0,0x0,8
tick,0x7ff8278cfeb4,14376084,0,0x0,8
tick,0x7ff8278cfeb4,14391742,0,0x0,8
tick,0x7ff8278cfeb4,14413538,0,0x0,8
tick,0x7ff8278cfeb4,14426328,0,0x0,8
tick,0x7ff8278cfeb4,14438735,0,0x0,8
tick,0x7ff8278cfeb4,14454558,0,0x0,8
tick,0x7ff8278cfeb4,14474465,0,0x0,8
tick,0x7ff8278cfeb4,14491920,0,0x0,8
tick,0x7ff8278cfeb4,14504802,0,0x0,8
tick,0x7ff8278cfeb4,14517557,0,0x0,8
tick,0x7ff8278cfeb4,14539089,0,0x0,8
tick,0x7ff8278cfeb4,14554291,0,0x0,8
tick,0x7ff8278cfeb4,14564917,0,0x0,8
tick,0x7ff8278cfeb4,14580140,0,0x0,8
tick,0x7ff8278cfeb4,14598176,0,0x0,8
tick,0x7ff8278cfeb4,14612352,0,0x0,8
tick,0x7ff8278cfeb4,14626119,0,0x0,8
tick,0x7ff8278cfeb4,14641759,0,0x0,8
tick,0x7ff8278cfeb4,14656890,0,0x0,8
tick,0x7ff8278cfeb4,14673039,0,0x0,8
tick,0x7ff8278cfeb4,14694616,0,0x0,8
tick,0x7ff8278cfeb4,14705252,0,0x0,8
tick,0x7ff8278cfeb4,14723020,0,0x0,8
tick,0x7ff8278cfeb4,14738201,0,0x0,8
tick,0x7ff8278cfeb4,14756846,0,0x0,8
tick,0x7ff8278cfeb4,14773178,0,0x0,8
tick,0x7ff8278cfeb4,14788883,0,0x0,8
tick,0x7ff8278cfeb4,14801671,0,0x0,8
tick,0x7ff8278cfeb4,14816158,0,0x0,8
tick,0x7ff8278cfeb4,14831289,0,0x0,8
tick,0x7ff8278cfeb4,14847386,0,0x0,8
tick,0x7ff8278cfeb4,14861361,0,0x0,8
tick,0x7ff8278cfeb4,14876840,0,0x0,8
tick,0x7ff8278cfeb4,14893018,0,0x0,8
tick,0x7ff8278cfeb4,14914513,0,0x0,8
tick,0x7ff8278cfeb4,14925945,0,0x0,8
tick,0x7ff8278cfeb4,14941909,0,0x0,8
tick,0x7ff8278cfeb4,14955625,0,0x0,8
tick,0x7ff8278cfeb4,14972441,0,0x0,8
tick,0x7ff8278cfeb4,14990465,0,0x0,8
tick,0x7ff8278cfeb4,15005121,0,0x0,8
tick,0x7ff8278cfeb4,15020066,0,0x0,8
tick,0x7ff8278cfeb4,15034727,0,0x0,8
tick,0x7ff8278cfeb4,15048816,0,0x0,8
tick,0x7ff8278cfeb4,15061824,0,0x0,8
tick,0x7ff8278cfeb4,15076730,0,0x0,8
tick,0x7ff8278cfeb4,15097108,0,0x0,8
tick,0x7ff8278cfeb4,15107660,0,0x0,8
tick,0x7ff8278cfeb4,15123327,0,0x0,8
tick,0x7ff8278cfeb4,15139191,0,0x0,8
tick,0x7ff8278cfeb4,15156765,0,0x0,8
tick,0x7ff8278cfeb4,15172356,0,0x0,8
tick,0x7ff8278cfeb4,15187715,0,0x0,8
tick,0x7ff8278cfeb4,15201234,0,0x0,8
tick,0x7ff8278cfeb4,15217080,0,0x0,8
tick,0x7ff8278cfeb4,15233117,0,0x0,8
tick,0x7ff8278cfeb4,15249131,0,0x0,8
tick,0x7ff8278cfeb4,15265330,0,0x0,8
tick,0x7ff8278cfeb4,15280121,0,0x0,8
tick,0x7ff8278cfeb4,15295083,0,0x0,8
tick,0x7ff8278cfeb4,15310136,0,0x0,8
tick,0x7ff8278cfeb4,15326146,0,0x0,8
tick,0x7ff8278cfeb4,15342045,0,0x0,8
tick,0x7ff8278cfeb4,15357953,0,0x0,8
tick,0x7ff8278cfeb4,15374237,0,0x0,8
tick,0x7ff8278cfeb4,15389968,0,0x0,8
tick,0x7ff8278cfeb4,15406002,0,0x0,8
tick,0x7ff8278cfeb4,15427195,0,0x0,8
tick,0x7ff8278cfeb4,15437200,0,0x0,8
tick,0x7ff8278cfeb4,15452134,0,0x0,8
tick,0x7ff8278cfeb4,15466561,0,0x0,8
tick,0x7ff8278cfeb4,15482139,0,0x0,8
tick,0x7ff8278cfeb4,15499991,0,0x0,8
tick,0x7ff8278cfeb4,15513552,0,0x0,8
tick,0x7ff8278cfeb4,15528597,0,0x0,8
tick,0x7ff8278cfeb4,15545159,0,0x0,8
tick,0x7ff8278cfeb4,15559191,0,0x0,8
tick,0x7ff8278cfeb4,15575036,0,0x0,8
tick,0x7ff8278cfeb4,15590247,0,0x0,8
tick,0x7ff8278cfeb4,15606021,0,0x0,8
tick,0x7ff8278cfeb4,15622567,0,0x0,8
tick,0x7ff8278cfeb4,15636757,0,0x0,8
tick,0x7ff8278cfeb4,15652707,0,0x0,8
tick,0x7ff8278cfeb4,15667810,0,0x0,8
tick,0x7ff8278cfeb4,15683702,0,0x0,8
tick,0x7ff8278cfeb4,15698948,0,0x0,8
tick,0x7ff8278cfeb4,15713837,0,0x0,8
tick,0x7ff8278cfeb4,15729980,0,0x0,8
tick,0x7ff8278cfeb4,15746087,0,0x0,8
tick,0x7ff8278cfeb4,15761664,0,0x0,8
tick,0x7ff8278cfeb4,15777918,0,0x0,8
tick,0x7ff8278cfeb4,15798771,0,0x0,8
tick,0x7ff8278cfeb4,15807783,0,0x0,8
tick,0x7ff8278cfeb4,15823737,0,0x0,8
tick,0x7ff8278cfeb4,15838721,0,0x0,8
tick,0x7ff8278cfeb4,15854687,0,0x0,8
tick,0x7ff8278cfeb4,15869599,0,0x0,8
tick,0x7ff8278cfeb4,15885880,0,0x0,8
tick,0x7ff8278cfeb4,15901776,0,0x0,8
tick,0x7ff8278cfeb4,15916579,0,0x0,8
tick,0x7ff8278cfeb4,15932423,0,0x0,8
tick,0x7ff8278cfeb4,15947583,0,0x0,8
tick,0x7ff8278cfeb4,15963878,0,0x0,8
tick,0x7ff8278cfeb4,15979719,0,0x0,8
tick,0x7ff8278cfeb4,15995564,0,0x0,8
tick,0x7ff8278cfeb4,16010661,0,0x0,8
tick,0x7ff8278cfeb4,16025756,0,0x0,8
tick,0x7ff8278cfeb4,16041779,0,0x0,8
tick,0x7ff8278cfeb4,16059647,0,0x0,8
tick,0x7ff8278cfeb4,16073474,0,0x0,8
tick,0x7ff8278cfeb4,16087550,0,0x0,8
tick,0x7ff8278cfeb4,16102502,0,0x0,8
tick,0x7ff8278cfeb4,16120168,0,0x0,8
tick,0x7ff8278cfeb4,16139999,0,0x0,8
tick,0x7ff8278cfeb4,16156778,0,0x0,8
tick,0x7ff8278cfeb4,16174041,0,0x0,8
tick,0x7ff8278cfeb4,16179716,0,0x0,8
tick,0x7ff8278cfeb4,16198104,0,0x0,8
tick,0x7ff8278cfeb4,16215619,0,0x0,8
tick,0x7ff8278cfeb4,16232608,0,0x0,8
tick,0x7ff8278cfeb4,16242412,0,0x0,8
tick,0x7ff8278cfeb4,16258664,0,0x0,8
tick,0x7ff8278cfeb4,16274858,0,0x0,8
tick,0x7ff8278cfeb4,16296122,0,0x0,8
tick,0x7ff8278cfeb4,16308466,0,0x0,8
tick,0x7ff8278cfeb4,16323312,0,0x0,8
tick,0x7ff8278cfeb4,16335434,0,0x0,8
tick,0x7ff8278cfeb4,16350517,0,0x0,8
tick,0x7ff8278cfeb4,16366410,0,0x0,8
tick,0x7ff8278cfeb4,16382689,0,0x0,8
tick,0x7ff8278cfeb4,16399311,0,0x0,8
tick,0x7ff8278cfeb4,16412327,0,0x0,8
tick,0x7ff8278cfeb4,16427478,0,0x0,8
tick,0x7ff8278cfeb4,16452559,0,0x0,8
tick,0x7ff8278cfeb4,16458658,0,0x0,8
tick,0x7ff8278cfeb4,16474066,0,0x0,8
tick,0x7ff8278cfeb4,16495128,0,0x0,8
tick,0x7ff8278cfeb4,16512983,0,0x0,8
tick,0x7ff8278cfeb4,16548291,0,0x0,8
tick,0x7ff8278cfeb4,16552303,0,0x0,8
tick,0x7ff8278cfeb4,16567064,0,0x0,8
tick,0x7ff8278cfeb4,16582993,0,0x0,8
tick,0x7ff8278cfeb4,16599293,0,0x0,8
tick,0x7ff8278cfeb4,16614435,0,0x0,8
tick,0x7ff8278cfeb4,16629406,0,0x0,8
tick,0x7ff8278cfeb4,16645482,0,0x0,8
tick,0x7ff8278cfeb4,16662048,0,0x0,8
tick,0x7ff8278cfeb4,16677390,0,0x0,8
tick,0x7ff8278cfeb4,16693491,0,0x0,8
tick,0x7ff8278cfeb4,16708435,0,0x0,8
tick,0x7ff8278cfeb4,16724215,0,0x0,8
tick,0x7ff8278cfeb4,16740444,0,0x0,8
tick,0x7ff8278cfeb4,16755926,0,0x0,8
tick,0x7ff8278cfeb4,16773666,0,0x0,8
tick,0x7ff8278cfeb4,16788262,0,0x0,8
tick,0x7ff8278cfeb4,16804646,0,0x0,8
tick,0x7ff8278cfeb4,16819362,0,0x0,8
tick,0x7ff8278cfeb4,16835876,0,0x0,8
tick,0x7ff8278cfeb4,16851205,0,0x0,8
tick,0x7ff8278cfeb4,16867585,0,0x0,8
tick,0x7ff8278cfeb4,16883411,0,0x0,8
tick,0x7ff8278cfeb4,16899274,0,0x0,8
tick,0x7ff8278cfeb4,16915145,0,0x0,8
tick,0x7ff8278cfeb4,16931699,0,0x0,8
tick,0x7ff8278cfeb4,16948418,0,0x0,8
tick,0x7ff8278cfeb4,16963223,0,0x0,8
tick,0x7ff8278cfeb4,16979687,0,0x0,8
tick,0x7ff8278cfeb4,16995218,0,0x0,8
tick,0x7ff8278cfeb4,17011633,0,0x0,8
tick,0x7ff8278cfeb4,17025590,0,0x0,8
tick,0x7ff8278cfeb4,17040315,0,0x0,8
tick,0x7ff8278cfeb4,17056416,0,0x0,8
tick,0x7ff8278cfeb4,17073235,0,0x0,8
tick,0x7ff8278cfeb4,17087059,0,0x0,8
tick,0x7ff8278cfeb4,17103495,0,0x0,8
tick,0x7ff8278cfeb4,17118523,0,0x0,8
tick,0x7ff8278cfeb4,17134489,0,0x0,8
tick,0x7ff8278cfeb4,17149085,0,0x0,8
tick,0x7ff8278cfeb4,17165404,0,0x0,8
tick,0x7ff8278cfeb4,17182238,0,0x0,8
tick,0x7ff8278cfeb4,17198024,0,0x0,8
tick,0x7ff8278cfeb4,17213273,0,0x0,8
tick,0x7ff8278cfeb4,17227160,0,0x0,8
tick,0x7ff8278cfeb4,17243137,0,0x0,8
tick,0x7ff8278cfeb4,17258614,0,0x0,8
tick,0x7ff8278cfeb4,17273387,0,0x0,8
tick,0x7ff8278cfeb4,17289000,0,0x0,8
tick,0x7ff8278cfeb4,17308155,0,0x0,8
tick,0x7ff8278cfeb4,17321856,0,0x0,8
tick,0x7ff8278cfeb4,17336490,0,0x0,8
tick,0x7ff8278cfeb4,17353838,0,0x0,8
tick,0x7ff8278cfeb4,17366777,0,0x0,8
tick,0x7ff8278cfeb4,17381969,0,0x0,8
tick,0x7ff8278cfeb4,17397909,0,0x0,8
tick,0x7ff8278cfeb4,17412960,0,0x0,8
tick,0x7ff8278cfeb4,17429005,0,0x0,8
tick,0x7ff8278cfeb4,17444076,0,0x0,8
tick,0x7ff8278cfeb4,17459935,0,0x0,8
tick,0x7ff8278cfeb4,17475017,0,0x0,8
tick,0x7ff8278cfeb4,17492519,0,0x0,8
tick,0x7ff8278cfeb4,17506109,0,0x0,8
tick,0x7ff8278cfeb4,17521177,0,0x0,8
tick,0x7ff8278cfeb4,17541443,0,0x0,8
tick,0x7ff8278cfeb4,17556410,0,0x0,8
tick,0x7ff8278cfeb4,17566786,0,0x0,8
tick,0x7ff8278cfeb4,17583493,0,0x0,8
tick,0x7ff8278cfeb4,17598789,0,0x0,8
tick,0x7ff8278cfeb4,17613969,0,0x0,8
tick,0x7ff8278cfeb4,17630064,0,0x0,8
tick,0x7ff8278cfeb4,17647542,0,0x0,8
tick,0x7ff8278cfeb4,17664742,0,0x0,8
tick,0x7ff8278cfeb4,17680332,0,0x0,8
tick,0x7ff8278cfeb4,17699978,0,0x0,8
tick,0x7ff8278cfeb4,17708894,0,0x0,8
tick,0x7ff8278cfeb4,17721439,0,0x0,8
tick,0x7ff8278cfeb4,17736820,0,0x0,8
tick,0x7ff8278cfeb4,17752871,0,0x0,8
tick,0x7ff8278cfeb4,17768119,0,0x0,8
tick,0x7ff8278cfeb4,17782918,0,0x0,8
tick,0x7ff8278cfeb4,17798911,0,0x0,8
tick,0x7ff8278cfeb4,17814450,0,0x0,8
tick,0x7ff8278cfeb4,17829330,0,0x0,8
tick,0x7ff8278cfeb4,17845391,0,0x0,8
tick,0x7ff8278cfeb4,17860911,0,0x0,8
tick,0x7ff8278cfeb4,17876928,0,0x0,8
tick,0x7ff8278cfeb4,17892852,0,0x0,8
tick,0x7ff8278cfeb4,17908219,0,0x0,8
tick,0x7ff8278cfeb4,17925300,0,0x0,8
tick,0x7ff8278cfeb4,17940890,0,0x0,8
tick,0x7ff8278cfeb4,17953703,0,0x0,8
tick,0x7ff8278cfeb4,17969553,0,0x0,8
tick,0x7ff8278cfeb4,17984637,0,0x0,8
tick,0x7ff8278cfeb4,18000856,0,0x0,8
tick,0x7ff8278cfeb4,18015732,0,0x0,8
tick,0x7ff8278cfeb4,18030835,0,0x0,8
tick,0x7ff8278cfeb4,18045667,0,0x0,8
tick,0x7ff8278cfeb4,18060889,0,0x0,8
tick,0x7ff8278cfeb4,18076796,0,0x0,8
tick,0x7ff8278cfeb4,18092676,0,0x0,8
tick,0x7ff8278cfeb4,18107996,0,0x0,8
tick,0x7ff8278cfeb4,18122924,0,0x0,8
tick,0x7ff8278cfeb4,18138720,0,0x0,8
tick,0x7ff8278cfeb4,18154669,0,0x0,8
tick,0x7ff8278cfeb4,18171077,0,0x0,8
tick,0x7ff8278cfeb4,18187453,0,0x0,8
tick,0x7ff8278cfeb4,18202705,0,0x0,8
tick,0x7ff8278cfeb4,18218403,0,0x0,8
tick,0x7ff8278cfeb4,18234553,0,0x0,8
tick,0x7ff8278cfeb4,18249300,0,0x0,8
tick,0x7ff8278cfeb4,18264377,0,0x0,8
tick,0x7ff8278cfeb4,18279479,0,0x0,8
tick,0x7ff8278cfeb4,18294350,0,0x0,8
tick,0x7ff8278cfeb4,18310962,0,0x0,8
tick,0x7ff8278cfeb4,18325882,0,0x0,8
tick,0x7ff8278cfeb4,18341815,0,0x0,8
tick,0x7ff8278cfeb4,18356742,0,0x0,8
tick,0x7ff8278cfeb4,18371816,0,0x0,8
tick,0x7ff8278cfeb4,18386429,0,0x0,8
tick,0x7ff8278cfeb4,18402398,0,0x0,8
tick,0x7ff8278cfeb4,18418605,0,0x0,8
tick,0x7ff8278cfeb4,18433367,0,0x0,8
tick,0x7ff8278cfeb4,18448395,0,0x0,8
tick,0x7ff8278cfeb4,18463667,0,0x0,8
tick,0x7ff8278cfeb4,18479864,0,0x0,8
tick,0x7ff8278cfeb4,18495607,0,0x0,8
tick,0x7ff8278cfeb4,18512652,0,0x0,8
tick,0x7ff8278cfeb4,18526602,0,0x0,8
tick,0x7ff8278cfeb4,18545432,0,0x0,8
tick,0x7ff8278cfeb4,18558914,0,0x0,8
tick,0x7ff8278cfeb4,18573947,0,0x0,8
tick,0x7ff8278cfeb4,18588805,0,0x0,8
tick,0x7ff8278cfeb4,18603630,0,0x0,8
tick,0x7ff8278cfeb4,18619547,0,0x0,8
tick,0x7ff8278cfeb4,18635609,0,0x0,8
tick,0x7ff8278cfeb4,18651777,0,0x0,8
tick,0x7ff8278cfeb4,18666727,0,0x0,8
tick,0x7ff8278cfeb4,18681690,0,0x0,8
tick,0x7ff8278cfeb4,18696483,0,0x0,8
tick,0x7ff8278cfeb4,18712007,0,0x0,8
tick,0x7ff8278cfeb4,18727690,0,0x0,8
tick,0x7ff8278cfeb4,18743569,0,0x0,8
tick,0x7ff8278cfeb4,18759529,0,0x0,8
tick,0x7ff8278cfeb4,18774880,0,0x0,8
tick,0x7ff8278cfeb4,18789196,0,0x0,8
tick,0x7ff8278cfeb4,18804645,0,0x0,8
tick,0x7ff8278cfeb4,18819680,0,0x0,8
tick,0x7ff8278cfeb4,18836500,0,0x0,8
tick,0x7ff8278cfeb4,18851258,0,0x0,8
tick,0x7ff8278cfeb4,18866825,0,0x0,8
tick,0x7ff8278cfeb4,18882744,0,0x0,8
tick,0x7ff8278cfeb4,18897595,0,0x0,8
tick,0x7ff8278cfeb4,18912730,0,0x0,8
tick,0x7ff8278cfeb4,18927685,0,0x0,8
tick,0x7ff8278cfeb4,18942725,0,0x0,8
tick,0x7ff8278cfeb4,18959626,0,0x0,8
tick,0x7ff8278cfeb4,18976185,0,0x0,8
tick,0x7ff8278cfeb4,18988634,0,0x0,8
tick,0x7ff8278cfeb4,19005717,0,0x0,8
tick,0x7ff8278cfeb4,19035300,0,0x0,8
tick,0x7ff8278cfeb4,19053642,0,0x0,8
tick,0x7ff8278cfeb4,19072249,0,0x0,8
tick,0x7ff8278cfeb4,19081152,0,0x0,8
tick,0x7ff8278cfeb4,19101501,0,0x0,8
tick,0x7ff8278cfeb4,19117887,0,0x0,8
tick,0x7ff8278cfeb4,19129468,0,0x0,8
tick,0x7ff8278cfeb4,19147662,0,0x0,8
tick,0x7ff8278cfeb4,19166552,0,0x0,8
tick,0x7ff8278cfeb4,19182536,0,0x0,8
tick,0x7ff8278cfeb4,19193930,0,0x0,8
tick,0x7ff8278cfeb4,19205867,0,0x0,8
tick,0x7ff8278cfeb4,19230289,0,0x0,8
tick,0x7ff8278cfeb4,19238378,0,0x0,8
tick,0x7ff8278cfeb4,19250119,0,0x0,8
tick,0x7ff8278cfeb4,19277029,0,0x0,8
tick,0x7ff8278cfeb4,19283043,0,0x0,8
tick,0x7ff8278cfeb4,19296424,0,0x0,8
tick,0x7ff8278cfeb4,19312299,0,0x0,8
tick,0x7ff8278cfeb4,19335315,0,0x0,8
tick,0x7ff8278cfeb4,19345413,0,0x0,8
tick,0x7ff8278cfeb4,19364716,0,0x0,8
tick,0x7ff8278cfeb4,19381917,0,0x0,8
tick,0x7ff8278cfeb4,19388577,0,0x0,8
tick,0x7ff8278cfeb4,19402617,0,0x0,8
tick,0x7ff8278cfeb4,19420386,0,0x0,8
tick,0x7ff8278cfeb4,19439744,0,0x0,8
tick,0x7ff8278cfeb4,19459624,0,0x0,8
tick,0x7ff8278cfeb4,19464686,0,0x0,8
tick,0x7ff8278cfeb4,19483333,0,0x0,8
tick,0x7ff8278cfeb4,19499727,0,0x0,8
tick,0x7ff8278cfeb4,19509908,0,0x0,8
tick,0x7ff8278cfeb4,19529183,0,0x0,8
tick,0x7ff8278cfeb4,19548845,0,0x0,8
tick,0x7ff8278cfeb4,19556226,0,0x0,8
tick,0x7ff8278cfeb4,19582091,0,0x0,8
tick,0x7ff8278cfeb4,19589998,0,0x0,8
tick,0x7ff8278cfeb4,19619129,0,0x0,8
tick,0x7ff8278cfeb4,19643249,0,0x0,8
tick,0x7ff8278cfeb4,19649099,0,0x0,8
tick,0x7ff8278cfeb4,19668642,0,0x0,8
tick,0x7ff8278cfeb4,19688453,0,0x0,8
tick,0x7ff8278cfeb4,19696611,0,0x0,8
tick,0x7ff8278cfeb4,19712330,0,0x0,8
tick,0x7ff8278cfeb4,19726751,0,0x0,8
tick,0x7ff8278cfeb4,19749667,0,0x0,8
tick,0x7ff8278cfeb4,19760238,0,0x0,8
tick,0x7ff8278cfeb4,19777525,0,0x0,8
tick,0x7ff8278cfeb4,19788113,0,0x0,8
tick,0x7ff8278cfeb4,19802157,0,0x0,8
tick,0x7ff8278cfeb4,19818166,0,0x0,8
tick,0x7ff8278cfeb4,19833329,0,0x0,8
tick,0x7ff8278cfeb4,19849663,0,0x0,8
tick,0x7ff8278cfeb4,19864139,0,0x0,8
tick,0x7ff8278cfeb4,19879042,0,0x0,8
tick,0x7ff8278cfeb4,19894761,0,0x0,8
tick,0x7ff8278cfeb4,19910174,0,0x0,8
tick,0x7ff8278cfeb4,19927296,0,0x0,8
tick,0x7ff8278cfeb4,19949420,0,0x0,8
tick,0x7ff8278cfeb4,19957044,0,0x0,8
tick,0x7ff8278cfeb4,19973217,0,0x0,8
tick,0x7ff8278cfeb4,19987350,0,0x0,8
tick,0x7ff8278cfeb4,20002326,0,0x0,8
tick,0x7ff8278cfeb4,20018057,0,0x0,8
tick,0x7ff8278cfeb4,20035512,0,0x0,8
tick,0x7ff8278cfeb4,20052229,0,0x0,8
tick,0x7ff8278cfeb4,20064972,0,0x0,8
tick,0x7ff8278cfeb4,20080138,0,0x0,8
tick,0x7ff8278cfeb4,20094975,0,0x0,8
tick,0x7ff8278cfeb4,20111830,0,0x0,8
tick,0x7ff8278cfeb4,20127879,0,0x0,8
tick,0x7ff8278cfeb4,20143648,0,0x0,8
tick,0x7ff8278cfeb4,20156388,0,0x0,8
tick,0x7ff8278cfeb4,20173212,0,0x0,8
tick,0x7ff8278cfeb4,20188231,0,0x0,8
tick,0x7ff8278cfeb4,20204359,0,0x0,8
tick,0x7ff8278cfeb4,20221966,0,0x0,8
tick,0x7ff8278cfeb4,20233696,0,0x0,8
tick,0x7ff8278cfeb4,20247961,0,0x0,8
tick,0x7ff8278cfeb4,20273223,0,0x0,8
tick,0x7ff8278cfeb4,20278256,0,0x0,8
tick,0x7ff8278cfeb4,20294430,0,0x0,8
tick,0x7ff8278cfeb4,20313312,0,0x0,8
tick,0x7ff8278cfeb4,20327766,0,0x0,8
tick,0x7ff8278cfeb4,20342002,0,0x0,8
tick,0x7ff8278cfeb4,20356279,0,0x0,8
tick,0x7ff8278cfeb4,20377336,0,0x0,8
tick,0x7ff8278cfeb4,20387556,0,0x0,8
tick,0x7ff8278cfeb4,20402117,0,0x0,8
tick,0x7ff8278cfeb4,20416821,0,0x0,8
tick,0x7ff8278cfeb4,20432232,0,0x0,8
tick,0x7ff8278cfeb4,20447934,0,0x0,8
tick,0x7ff8278cfeb4,20463032,0,0x0,8
tick,0x7ff8278cfeb4,20477778,0,0x0,8
tick,0x7ff8278cfeb4,20494557,0,0x0,8
tick,0x7ff8278cfeb4,20522514,0,0x0,8
tick,0x7ff8278cfeb4,20528830,0,0x0,8
tick,0x7ff8278cfeb4,20543306,0,0x0,8
tick,0x7ff8278cfeb4,20563366,0,0x0,8
tick,0x7ff8278cfeb4,20572825,0,0x0,8
tick,0x7ff8278cfeb4,20588662,0,0x0,8
tick,0x7ff8278cfeb4,20603320,0,0x0,8
tick,0x7ff8278cfeb4,20618709,0,0x0,8
tick,0x7ff8278cfeb4,20633915,0,0x0,8
tick,0x7ff8278cfeb4,20649673,0,0x0,8
tick,0x7ff8278cfeb4,20665670,0,0x0,8
tick,0x7ff8278cfeb4,20682352,0,0x0,8
tick,0x7ff8278cfeb4,20697308,0,0x0,8
tick,0x7ff8278cfeb4,20712080,0,0x0,8
tick,0x7ff8278cfeb4,20729160,0,0x0,8
tick,0x7ff8278cfeb4,20745757,0,0x0,8
tick,0x7ff8278cfeb4,20767628,0,0x0,8
tick,0x7ff8278cfeb4,20783124,0,0x0,8
tick,0x7ff8278cfeb4,20798870,0,0x0,8
tick,0x7ff8278cfeb4,20813625,0,0x0,8
tick,0x7ff8278cfeb4,20819240,0,0x0,8
tick,0x7ff8278cfeb4,20837283,0,0x0,8
tick,0x7ff8278cfeb4,20849699,0,0x0,8
tick,0x7ff8278cfeb4,20865909,0,0x0,8
tick,0x7ff8278cfeb4,20882892,0,0x0,8
tick,0x7ff8278cfeb4,20899978,0,0x0,8
tick,0x7ff8278cfeb4,20924517,0,0x0,8
tick,0x7ff8278cfeb4,20930247,0,0x0,8
tick,0x7ff8278cfeb4,20943886,0,0x0,8
tick,0x7ff8278cfeb4,20965609,0,0x0,8
tick,0x7ff8278cfeb4,20982050,0,0x0,8
tick,0x7ff8278cfeb4,20999879,0,0x0,8
tick,0x7ff8278cfeb4,21006196,0,0x0,8
tick,0x7ff8278cfeb4,21021418,0,0x0,8
tick,0x7ff8278cfeb4,21045448,0,0x0,8
tick,0x7ff8278cfeb4,21053863,0,0x0,8
tick,0x7ff8278cfeb4,21081304,0,0x0,8
tick,0x7ff8278cfeb4,21101893,0,0x0,8
tick,0x7ff8278cfeb4,21112915,0,0x0,8
tick,0x7ff8278cfeb4,21128526,0,0x0,8
tick,0x7ff8278cfeb4,21152279,0,0x0,8
tick,0x7ff8278cfeb4,21162121,0,0x0,8
tick,0x7ff8278cfeb4,21184621,0,0x0,8
tick,0x7ff8278cfeb4,21191166,0,0x0,8
tick,0x7ff8278cfeb4,21206350,0,0x0,8
tick,0x7ff8278cfeb4,21234669,0,0x0,8
tick,0x7ff8278cfeb4,21251352,0,0x0,8
tick,0x7ff8278cfeb4,21267056,0,0x0,8
tick,0x7ff8278cfeb4,21281885,0,0x0,8
tick,0x7ff8278cfeb4,21301692,0,0x0,8
tick,0x7ff8278cfeb4,21312561,0,0x0,8
tick,0x7ff8278cfeb4,21328633,0,0x0,8
tick,0x7ff8278cfeb4,21345159,0,0x0,8
tick,0x7ff8278cfeb4,21357141,0,0x0,8
tick,0x7ff8278cfeb4,21372658,0,0x0,8
tick,0x7ff8278cfeb4,21387383,0,0x0,8
tick,0x7ff8278cfeb4,21406209,0,0x0,8
tick,0x7ff8278cfeb4,21418508,0,0x0,8
tick,0x7ff8278cfeb4,21433036,0,0x0,8
tick,0x7ff8278cfeb4,21451473,0,0x0,8
tick,0x7ff8278cfeb4,21466352,0,0x0,8
tick,0x7ff8278cfeb4,21479314,0,0x0,8
tick,0x7ff8278cfeb4,21496016,0,0x0,8
tick,0x7ff8278cfeb4,21514750,0,0x0,8
tick,0x7ff8278cfeb4,21532660,0,0x0,8
tick,0x7ff8278cfeb4,21549079,0,0x0,8
tick,0x7ff8278cfeb4,21562272,0,0x0,8
tick,0x7ff8278cfeb4,21582184,0,0x0,8
tick,0x7ff8278cfeb4,21590660,0,0x0,8
tick,0x7ff8278cfeb4,21602458,0,0x0,8
tick,0x7ff8278cfeb4,21617305,0,0x0,8
tick,0x7ff8278cfeb4,21632501,0,0x0,8
tick,0x7ff8278cfeb4,21648106,0,0x0,8
tick,0x7ff8278cfeb4,21664167,0,0x0,8
tick,0x7ff8278cfeb4,21679703,0,0x0,8
tick,0x7ff8278cfeb4,21695871,0,0x0,8
tick,0x7ff8278cfeb4,21712603,0,0x0,8
tick,0x7ff8278cfeb4,21725280,0,0x0,8
tick,0x7ff8278cfeb4,21743991,0,0x0,8
tick,0x7ff8278cfeb4,21756597,0,0x0,8
tick,0x7ff8278cfeb4,21772166,0,0x0,8
tick,0x7ff8278cfeb4,21788975,0,0x0,8
tick,0x7ff8278cfeb4,21807724,0,0x0,8
tick,0x7ff8278cfeb4,21819628,0,0x0,8
tick,0x7ff8278cfeb4,21834472,0,0x0,8
tick,0x7ff8278cfeb4,21848941,0,0x0,8
tick,0x7ff8278cfeb4,21866640,0,0x0,8
tick,0x7ff8278cfeb4,21881971,0,0x0,8
tick,0x7ff8278cfeb4,21896110,0,0x0,8
tick,0x7ff8278cfeb4,21912305,0,0x0,8
tick,0x7ff8278cfeb4,21929639,0,0x0,8
tick,0x7ff8278cfeb4,21942010,0,0x0,8
tick,0x7ff8278cfeb4,21957171,0,0x0,8
tick,0x7ff8278cfeb4,21972467,0,0x0,8
tick,0x7ff8278cfeb4,21987997,0,0x0,8
tick,0x7ff8278cfeb4,22004191,0,0x0,8
tick,0x7ff8278cfeb4,22019817,0,0x0,8
tick,0x7ff8278cfeb4,22035020,0,0x0,8
tick,0x7ff8278cfeb4,22049970,0,0x0,8
tick,0x7ff8278cfeb4,22066372,0,0x0,8
tick,0x7ff8278cfeb4,22080256,0,0x0,8
tick,0x7ff8278cfeb4,22097586,0,0x0,8
tick,0x7ff8278cfeb4,22113067,0,0x0,8
tick,0x7ff8278cfeb4,22129253,0,0x0,8
tick,0x7ff8278cfeb4,22150360,0,0x0,8
tick,0x7ff8278cfeb4,22170154,0,0x0,8
tick,0x7ff8278cfeb4,22175822,0,0x0,8
tick,0x7ff8278cfeb4,22197876,0,0x0,8
tick,0x7ff8278cfeb4,22204704,0,0x0,8
tick,0x7ff8278cfeb4,22222726,0,0x0,8
tick,0x7ff8278cfeb4,22239997,0,0x0,8
tick,0x7ff8278cfeb4,22263891,0,0x0,8
tick,0x7ff8278cfeb4,22286360,0,0x0,8
tick,0x7ff8278cfeb4,22297966,0,0x0,8
tick,0x7ff8278cfeb4,22318046,0,0x0,8
tick,0x7ff8278cfeb4,22334031,0,0x0,8
tick,0x7ff8278cfeb4,22346426,0,0x0,8
tick,0x7ff8278cfeb4,22367119,0,0x0,8
tick,0x7ff8278cfeb4,22374405,0,0x0,8
tick,0x7ff8278cfeb4,22397313,0,0x0,8
tick,0x7ff8278cfeb4,22416184,0,0x0,8
tick,0x7ff8278cfeb4,22419559,0,0x0,8
tick,0x7ff8278cfeb4,22442148,0,0x0,8
tick,0x7ff8278cfeb4,22458614,0,0x0,8
tick,0x7ff8278cfeb4,22466232,0,0x0,8
tick,0x7ff8278cfeb4,22493023,0,0x0,8
tick,0x7ff8278cfeb4,22497292,0,0x0,8
tick,0x7ff8278cfeb4,22515124,0,0x0,8
tick,0x7ff8278cfeb4,22530839,0,0x0,8
tick,0x7ff8278cfeb4,22555564,0,0x0,8
tick,0x7ff8278cfeb4,22579271,0,0x0,8
tick,0x7ff8278cfeb4,22596341,0,0x0,8
tick,0x7ff8278cfeb4,22604816,0,0x0,8
tick,0x7ff8278cfeb4,22618518,0,0x0,8
tick,0x7ff8278cfeb4,22635288,0,0x0,8
tick,0x7ff8278cfeb4,22650787,0,0x0,8
tick,0x7ff8278cfeb4,22664567,0,0x0,8
tick,0x7ff8278cfeb4,22682159,0,0x0,8
tick,0x7ff8278cfeb4,22696844,0,0x0,8
tick,0x7ff8278cfeb4,22713124,0,0x0,8
tick,0x7ff8278cfeb4,22726644,0,0x0,8
tick,0x7ff8278cfeb4,22743356,0,0x0,8
tick,0x7ff8278cfeb4,22759298,0,0x0,8
tick,0x7ff8278cfeb4,22774830,0,0x0,8
tick,0x7ff8278cfeb4,22790062,0,0x0,8
tick,0x7ff8278cfeb4,22804931,0,0x0,8
tick,0x7ff8278cfeb4,22826185,0,0x0,8
tick,0x7ff8278cfeb4,22837711,0,0x0,8
tick,0x7ff8278cfeb4,22852573,0,0x0,8
tick,0x7ff8278cfeb4,22868795,0,0x0,8
tick,0x7ff8278cfeb4,22884764,0,0x0,8
tick,0x7ff8278cfeb4,22901141,0,0x0,8
tick,0x7ff8278cfeb4,22916508,0,0x0,8
tick,0x7ff8278cfeb4,22932886,0,0x0,8
tick,0x7ff8278cfeb4,22949592,0,0x0,8
tick,0x7ff8278cfeb4,22963759,0,0x0,8
tick,0x7ff8278cfeb4,22981278,0,0x0,8
tick,0x7ff8278cfeb4,23005894,0,0x0,8
tick,0x7ff8278cfeb4,23014243,0,0x0,8
tick,0x7ff8278cfeb4,23034010,0,0x0,8
tick,0x7ff8278cfeb4,23063776,0,0x0,8
tick,0x7ff8278cfeb4,23076006,0,0x0,8
tick,0x7ff8278cfeb4,23109995,0,0x0,8
tick,0x7ff8278cfeb4,23115531,0,0x0,8
tick,0x7ff8278cfeb4,23143609,0,0x0,8
tick,0x7ff8278cfeb4,23152366,0,0x0,8
tick,0x7ff8278cfeb4,23164410,0,0x0,8
tick,0x7ff8278cfeb4,23182053,0,0x0,8
tick,0x7ff8278cfeb4,23198238,0,0x0,8
tick,0x7ff8278cfeb4,23207496,0,0x0,8
tick,0x7ff8278cfeb4,23245402,0,0x0,8
tick,0x7ff8278cfeb4,23259477,0,0x0,8
tick,0x7ff8278cfeb4,23269398,0,0x0,8
tick,0x7ff8278cfeb4,23287754,0,0x0,8
tick,0x7ff8278cfeb4,23304666,0,0x0,8
tick,0x7ff8278cfeb4,23326248,0,0x0,8
tick,0x7ff8278cfeb4,23332361,0,0x0,8
tick,0x7ff8278cfeb4,23348582,0,0x0,8
tick,0x7ff8278cfeb4,23365331,0,0x0,8
tick,0x7ff8278cfeb4,23379848,0,0x0,8
tick,0x7ff8278cfeb4,23399992,0,0x0,8
tick,0x7ff8278cfeb4,23416998,0,0x0,8
tick,0x7ff8278cfeb4,23425517,0,0x0,8
tick,0x7ff8278cfeb4,23448006,0,0x0,8
tick,0x7ff8278cfeb4,23459111,0,0x0,8
tick,0x7ff8278cfeb4,23471718,0,0x0,8
tick,0x7ff8278cfeb4,23491368,0,0x0,8
tick,0x7ff8278cfeb4,23504434,0,0x0,8
tick,0x7ff8278cfeb4,23521156,0,0x0,8
tick,0x7ff8278cfeb4,23549300,0,0x0,8
tick,0x7ff8278cfeb4,23606733,0,0x0,8
tick,0x7ff8278cfeb4,23618546,0,0x0,8
tick,0x7ff8278cfeb4,23627574,0,0x0,8
tick,0x7ff8278cfeb4,23651830,0,0x0,8
tick,0x7ff8278cfeb4,23667192,0,0x0,8
tick,0x7ff8278cfeb4,23674159,0,0x0,8
tick,0x7ff8278cfeb4,23691083,0,0x0,8
tick,0x7ff8278cfeb4,23725535,0,0x0,8
tick,0x7ff8278cfeb4,23735807,0,0x0,8
tick,0x7ff8278cfeb4,23760477,0,0x0,8
tick,0x7ff8278cfeb4,23765109,0,0x0,8
tick,0x7ff8278cfeb4,23802182,0,0x0,8
tick,0x7ff8278cfeb4,23820416,0,0x0,8
tick,0x7ff8278cfeb4,23831013,0,0x0,8
tick,0x7ff8278cfeb4,23844464,0,0x0,8
tick,0x7ff8278cfeb4,23867321,0,0x0,8
tick,0x7ff8278cfeb4,23901954,0,0x0,8
tick,0x7ff8278cfeb4,23927933,0,0x0,8
tick,0x7ff8278cfeb4,23952794,0,0x0,8
tick,0x7ff8278cfeb4,23975531,0,0x0,8
tick,0x7ff8278cfeb4,24003969,0,0x0,8
tick,0x7ff8278cfeb4,24009990,0,0x0,8
tick,0x7ff8278cfeb4,24039449,0,0x0,8
tick,0x7ff8278cfeb4,24054147,0,0x0,8
tick,0x7ff8278cfeb4,24077565,0,0x0,8
tick,0x7ff8278cfeb4,24081587,0,0x0,8
tick,0x7ff8278cfeb4,24128080,0,0x0,8
tick,0x7ff8278cfeb4,24154317,0,0x0,8
tick,0x7ff8278cfeb4,24181609,0,0x0,8
tick,0x7ff8278cfeb4,24188647,0,0x0,8
tick,0x7ff8278cfeb4,24205127,0,0x0,8
tick,0x7ff8278cfeb4,24219432,0,0x0,8
tick,0x7ff8278cfeb4,24236240,0,0x0,8
tick,0x7ff8278cfeb4,24249741,0,0x0,8
tick,0x7ff8278cfeb4,24272360,0,0x0,8
tick,0x7ff8278cfeb4,24282052,0,0x0,8
tick,0x7ff8278cfeb4,24297493,0,0x0,8
tick,0x7ff8278cfeb4,24315526,0,0x0,8
tick,0x7ff8278cfeb4,24325472,0,0x0,8
tick,0x7ff8278cfeb4,24340196,0,0x0,8
tick,0x7ff8278cfeb4,24356676,0,0x0,8
tick,0x7ff8278cfeb4,24372292,0,0x0,8
tick,0x7ff8278cfeb4,24385989,0,0x0,8
tick,0x7ff8278cfeb4,24401172,0,0x0,8
tick,0x7ff8278cfeb4,24417377,0,0x0,8
tick,0x7ff8278cfeb4,24433776,0,0x0,8
tick,0x7ff8278cfeb4,24475387,0,0x0,8
tick,0x7ff8278cfeb4,24485390,0,0x0,8
tick,0x7ff8278cfeb4,24497871,0,0x0,8
tick,0x7ff8278cfeb4,24514647,0,0x0,8
tick,0x7ff8278cfeb4,24525352,0,0x0,8
tick,0x7ff8278cfeb4,24548134,0,0x0,8
tick,0x7ff8278cfeb4,24557503,0,0x0,8
tick,0x7ff8278cfeb4,24575292,0,0x0,8
tick,0x7ff8278cfeb4,24593256,0,0x0,8
tick,0x7ff8278cfeb4,24603696,0,0x0,8
tick,0x7ff8278cfeb4,24615472,0,0x0,8
tick,0x7ff8278cfeb4,24634326,0,0x0,8
tick,0x7ff8278cfeb4,24658314,0,0x0,8
tick,0x7ff8278cfeb4,24709204,0,0x0,8
tick,0x7ff8278cfeb4,24723897,0,0x0,8
tick,0x7ff8278cfeb4,24743464,0,0x0,8
tick,0x7ff8278cfeb4,24755430,0,0x0,8
tick,0x7ff8278cfeb4,24777543,0,0x0,8
tick,0x7ff8278cfeb4,24792197,0,0x0,8
tick,0x7ff8278cfeb4,24809999,0,0x0,8
tick,0x7ff8278cfeb4,24815386,0,0x0,8
tick,0x7ff8278cfeb4,24831830,0,0x0,8
tick,0x7ff8278cfeb4,24849751,0,0x0,8
tick,0x7ff8278cfeb4,24859751,0,0x0,8
tick,0x7ff8278cfeb4,24891761,0,0x0,8
tick,0x7ff8278cfeb4,24908311,0,0x0,8
tick,0x7ff8278cfeb4,24924063,0,0x0,8
tick,0x7ff8278cfeb4,24943024,0,0x0,8
tick,0x7ff8278cfeb4,24953359,0,0x0,8
tick,0x7ff8278cfeb4,24976434,0,0x0,8
tick,0x7ff8278cfeb4,24986187,0,0x0,8
tick,0x7ff8278cfeb4,25002888,0,0x0,8
tick,0x7ff8278cfeb4,25016272,0,0x0,8
tick,0x7ff8278cfeb4,25033453,0,0x0,8
tick,0x7ff8278cfeb4,25050625,0,0x0,8
tick,0x7ff8278cfeb4,25068787,0,0x0,8
tick,0x7ff8278cfeb4,25078054,0,0x0,8
tick,0x7ff8278cfeb4,25092556,0,0x0,8
tick,0x7ff8278cfeb4,25118809,0,0x0,8
tick,0x7ff8278cfeb4,25124137,0,0x0,8
tick,0x7ff8278cfeb4,25139718,0,0x0,8
tick,0x7ff8278cfeb4,25154712,0,0x0,8
tick,0x7ff8278cfeb4,25173341,0,0x0,8
tick,0x7ff8278cfeb4,25184427,0,0x0,8
tick,0x7ff8278cfeb4,25209776,0,0x0,8
tick,0x7ff8278cfeb4,25226340,0,0x0,8
tick,0x7ff8278cfeb4,25252987,0,0x0,8
tick,0x7ff8278cfeb4,25267288,0,0x0,8
tick,0x7ff8278cfeb4,25283975,0,0x0,8
tick,0x7ff8278cfeb4,25294796,0,0x0,8
tick,0x7ff8278cfeb4,25328034,0,0x0,8
tick,0x7ff8278cfeb4,25371206,0,0x0,8
tick,0x7ff8278cfeb4,25391967,0,0x0,8
tick,0x7ff8278cfeb4,25403204,0,0x0,8
tick,0x7ff8278cfeb4,25433809,0,0x0,8
tick,0x7ff8278cfeb4,25454568,0,0x0,8
tick,0x7ff8278cfeb4,25473196,0,0x0,8
tick,0x7ff8278cfeb4,25494692,0,0x0,8
tick,0x7ff8278cfeb4,25536797,0,0x0,8
tick,0x7ff8278cfeb4,25538186,0,0x0,8
tick,0x7ff8278cfeb4,25557951,0,0x0,8
tick,0x7ff8278cfeb4,25569579,0,0x0,8
tick,0x7ff8278cfeb4,25598276,0,0x0,8
tick,0x7ff8278cfeb4,25603596,0,0x0,8
tick,0x7ff8278cfeb4,25657698,0,0x0,8
tick,0x7ff8278cfeb4,25676762,0,0x0,8
tick,0x7ff8278cfeb4,25699473,0,0x0,8
tick,0x7ff8278cfeb4,25744064,0,0x0,8
tick,0x7ff8278cfeb4,25770730,0,0x0,8
tick,0x7ff8278cfeb4,25790599,0,0x0,8
tick,0x7ff8278cfeb4,25805923,0,0x0,8
tick,0x7ff8278cfeb4,25818082,0,0x0,8
tick,0x7ff8278cfeb4,25858461,0,0x0,8
tick,0x7ff8278cfeb4,25862648,0,0x0,8
tick,0x7ff8278cfeb4,25907099,0,0x0,8
tick,0x7ff8278cfeb4,25946199,0,0x0,8
tick,0x7ff8278cfeb4,25956446,0,0x0,8
tick,0x7ff8278cfeb4,25977410,0,0x0,8
tick,0x7ff8278cfeb4,25986489,0,0x0,8
tick,0x7ff8278cfeb4,26001318,0,0x0,8
tick,0x7ff8278cfeb4,26023760,0,0x0,8
tick,0x7ff8278cfeb4,26037612,0,0x0,8
tick,0x7ff8278cfeb4,26049901,0,0x0,8
tick,0x7ff8278cfeb4,26073836,0,0x0,8
tick,0x7ff8278cfeb4,26079455,0,0x0,8
tick,0x7ff8278cfeb4,26094811,0,0x0,8
tick,0x7ff8278cfeb4,26111497,0,0x0,8
tick,0x7ff8278cfeb4,26123866,0,0x0,8
tick,0x7ff8278cfeb4,26141936,0,0x0,8
tick,0x7ff8278cfeb4,26154910,0,0x0,8
tick,0x7ff8278cfeb4,26169850,0,0x0,8
tick,0x7ff8278cfeb4,26188775,0,0x0,8
tick,0x7ff8278cfeb4,26200130,0,0x0,8
tick,0x7ff8278cfeb4,26219001,0,0x0,8
tick,0x7ff8278cfeb4,26233747,0,0x0,8
tick,0x7ff8278cfeb4,26252949,0,0x0,8
tick,0x7ff8278cfeb4,26267525,0,0x0,8
tick,0x7ff8278cfeb4,26278990,0,0x0,8
tick,0x7ff8278cfeb4,26293663,0,0x0,8
tick,0x7ff8278cfeb4,26308815,0,0x0,8
tick,0x7ff8278cfeb4,26328577,0,0x0,8
tick,0x7ff8278cfeb4,26344179,0,0x0,8
tick,0x7ff8278cfeb4,26355002,0,0x0,8
tick,0x7ff8278cfeb4,26369908,0,0x0,8
tick,0x7ff8278cfeb4,26395145,0,0x0,8
tick,0x7ff8278cfeb4,26401852,0,0x0,8
tick,0x7ff8278cfeb4,26418489,0,0x0,8
tick,0x7ff8278cfeb4,26452041,0,0x0,8
tick,0x7ff8278cfeb4,26467811,0,0x0,8
tick,0x7ff8278cfeb4,26479689,0,0x0,8
tick,0x7ff8278cfeb4,26495769,0,0x0,8
tick,0x7ff8278cfeb4,26510566,0,0x0,8
tick,0x7ff8278cfeb4,26528417,0,0x0,8
tick,0x7ff8278cfeb4,26543352,0,0x0,8
tick,0x7ff8278cfeb4,26558824,0,0x0,8
tick,0x7ff8278cfeb4,26574664,0,0x0,8
tick,0x7ff8278cfeb4,26590060,0,0x0,8
tick,0x7ff8278cfeb4,26605879,0,0x0,8
tick,0x7ff8278cfeb4,26621780,0,0x0,8
tick,0x7ff8278cfeb4,26637965,0,0x0,8
tick,0x7ff8278cfeb4,26654758,0,0x0,8
tick,0x7ff8278cfeb4,26669542,0,0x0,8
tick,0x7ff8278cfeb4,26687092,0,0x0,8
tick,0x7ff8278cfeb4,26704886,0,0x0,8
tick,0x7ff8278cfeb4,26717815,0,0x0,8
tick,0x7ff8278cfeb4,26738898,0,0x0,8
tick,0x7ff8278cfeb4,26746082,0,0x0,8
tick,0x7ff8278cfeb4,26760563,0,0x0,8
tick,0x7ff8278cfeb4,26776726,0,0x0,8
tick,0x7ff8278cfeb4,26794657,0,0x0,8
tick,0x7ff8278cfeb4,26806764,0,0x0,8
tick,0x7ff8278cfeb4,26822693,0,0x0,8
tick,0x7ff8278cfeb4,26839717,0,0x0,8
tick,0x7ff8278cfeb4,26853550,0,0x0,8
tick,0x7ff8278cfeb4,26868743,0,0x0,8
tick,0x7ff8278cfeb4,26885157,0,0x0,8
tick,0x7ff8278cfeb4,26907302,0,0x0,8
tick,0x7ff8278cfeb4,26913466,0,0x0,8
tick,0x7ff8278cfeb4,26930497,0,0x0,8
tick,0x7ff8278cfeb4,26951007,0,0x0,8
tick,0x7ff8278cfeb4,26963562,0,0x0,8
tick,0x7ff8278cfeb4,26977590,0,0x0,8
tick,0x7ff8278cfeb4,26991325,0,0x0,8
tick,0x7ff8278cfeb4,27005162,0,0x0,8
tick,0x7ff8278cfeb4,27022689,0,0x0,8
tick,0x7ff8278cfeb4,27035248,0,0x0,8
tick,0x7ff8278cfeb4,27053042,0,0x0,8
tick,0x7ff8278cfeb4,27069500,0,0x0,8
tick,0x7ff8278cfeb4,27106120,0,0x0,8
tick,0x7ff8278cfeb4,27131176,0,0x0,8
tick,0x7ff8278cfeb4,27151970,0,0x0,8
tick,0x7ff8278cfeb4,27179661,0,0x0,8
tick,0x7ff8278cfeb4,27205603,0,0x0,8
tick,0x7ff8278cfeb4,27237842,0,0x0,8
tick,0x7ff8278cfeb4,27265267,0,0x0,8
tick,0x7ff8278cfeb4,27267761,0,0x0,8
tick,0x7ff8278cfeb4,27289125,0,0x0,8
tick,0x7ff8278cfeb4,27319837,0,0x0,8
tick,0x7ff8278cfeb4,27337953,0,0x0,8
tick,0x7ff8278cfeb4,27356874,0,0x0,8
tick,0x7ff8278cfeb4,27361291,0,0x0,8
tick,0x7ff8278cfeb4,27424855,0,0x0,8
tick,0x7ff8278cfeb4,27441345,0,0x0,8
tick,0x7ff8278cfeb4,27474163,0,0x0,8
tick,0x7ff8278cfeb4,27480924,0,0x0,8
tick,0x7ff8278cfeb4,27514842,0,0x0,8
tick,0x7ff8278cfeb4,27528639,0,0x0,8
tick,0x7ff8278cfeb4,27544221,0,0x0,8
tick,0x7ff8278cfeb4,27574244,0,0x0,8
tick,0x7ff8278cfeb4,27589177,0,0x0,8
tick,0x7ff8278cfeb4,27610651,0,0x0,8
tick,0x7ff8278cfeb4,27630481,0,0x0,8
tick,0x7ff8278cfeb4,27640353,0,0x0,8
tick,0x7ff8278cfeb4,27714172,0,0x0,8
tick,0x7ff8278cfeb4,27737506,0,0x0,8
tick,0x7ff8278cfeb4,27769046,0,0x0,8
tick,0x7ff8278cfeb4,27774211,0,0x0,8
tick,0x7ff8278cfeb4,27788375,0,0x0,8
tick,0x7ff8278cfeb4,27803973,0,0x0,8
tick,0x7ff8278cfeb4,27819532,0,0x0,8
tick,0x7ff8278cfeb4,27835659,0,0x0,8
tick,0x7ff8278cfeb4,27850507,0,0x0,8
tick,0x7ff8278cfeb4,27866499,0,0x0,8
tick,0x7ff8278cfeb4,27883337,0,0x0,8
tick,0x7ff8278cfeb4,27898777,0,0x0,8
tick,0x7ff8278cfeb4,27913142,0,0x0,8
tick,0x7ff8278cfeb4,27929297,0,0x0,8
tick,0x7ff8278cfeb4,27944190,0,0x0,8
tick,0x7ff8278cfeb4,27960136,0,0x0,8
tick,0x7ff8278cfeb4,27975123,0,0x0,8
tick,0x7ff8278cfeb4,27990600,0,0x0,8
tick,0x7ff8278cfeb4,28006255,0,0x0,8
tick,0x7ff8278cfeb4,28021131,0,0x0,8
tick,0x7ff8278cfeb4,28036253,0,0x0,8
tick,0x7ff8278cfeb4,28051982,0,0x0,8
tick,0x7ff8278cfeb4,28068738,0,0x0,8
tick,0x7ff8278cfeb4,28085471,0,0x0,8
tick,0x7ff8278cfeb4,28097542,0,0x0,8
tick,0x7ff8278cfeb4,28112964,0,0x0,8
tick,0x7ff8278cfeb4,28135312,0,0x0,8
tick,0x7ff8278cfeb4,28144073,0,0x0,8
tick,0x7ff8278cfeb4,28162108,0,0x0,8
tick,0x7ff8278cfeb4,28175675,0,0x0,8
tick,0x7ff8278cfeb4,28191807,0,0x0,8
tick,0x7ff8278cfeb4,28206008,0,0x0,8
tick,0x7ff8278cfeb4,28221362,0,0x0,8
tick,0x7ff8278cfeb4,28236679,0,0x0,8
tick,0x7ff8278cfeb4,28251943,0,0x0,8
tick,0x7ff8278cfeb4,28267497,0,0x0,8
tick,0x7ff8278cfeb4,28285551,0,0x0,8
tick,0x7ff8278cfeb4,28297890,0,0x0,8
tick,0x7ff8278cfeb4,28314037,0,0x0,8
tick,0x7ff8278cfeb4,28329316,0,0x0,8
tick,0x7ff8278cfeb4,28345040,0,0x0,8
tick,0x7ff8278cfeb4,28359932,0,0x0,8
tick,0x7ff8278cfeb4,28376017,0,0x0,8
tick,0x7ff8278cfeb4,28390941,0,0x0,8
tick,0x7ff8278cfeb4,28407218,0,0x0,8
tick,0x7ff8278cfeb4,28422115,0,0x0,8
tick,0x7ff8278cfeb4,28437968,0,0x0,8
tick,0x7ff8278cfeb4,28453123,0,0x0,8
tick,0x7ff8278cfeb4,28468008,0,0x0,8
tick,0x7ff8278cfeb4,28483878,0,0x0,8
tick,0x7ff8278cfeb4,28500325,0,0x0,8
tick,0x7ff8278cfeb4,28514940,0,0x0,8
tick,0x7ff8278cfeb4,28530884,0,0x0,8
tick,0x7ff8278cfeb4,28545804,0,0x0,8
tick,0x7ff8278cfeb4,28562046,0,0x0,8
tick,0x7ff8278cfeb4,28577778,0,0x0,8
tick,0x7ff8278cfeb4,28593588,0,0x0,8
tick,0x7ff8278cfeb4,28608191,0,0x0,8
tick,0x7ff8278cfeb4,28624715,0,0x0,8
tick,0x7ff8278cfeb4,28640362,0,0x0,8
tick,0x7ff8278cfeb4,28656246,0,0x0,8
tick,0x7ff8278cfeb4,28672957,0,0x0,8
tick,0x7ff8278cfeb4,28688118,0,0x0,8
tick,0x7ff8278cfeb4,28706775,0,0x0,8
tick,0x7ff8278cfeb4,28719584,0,0x0,8
tick,0x7ff8278cfeb4,28742721,0,0x0,8
tick,0x7ff8278cfeb4,28749628,0,0x0,8
tick,0x7ff8278cfeb4,28765403,0,0x0,8
tick,0x7ff8278cfeb4,28780517,0,0x0,8
tick,0x7ff8278cfeb4,28795330,0,0x0,8
tick,0x7ff8278cfeb4,28812542,0,0x0,8
tick,0x7ff8278cfeb4,28826473,0,0x0,8
tick,0x7ff8278cfeb4,28842947,0,0x0,8
tick,0x7ff8278cfeb4,28859232,0,0x0,8
tick,0x7ff8278cfeb4,28874365,0,0x0,8
tick,0x7ff8278cfeb4,28889654,0,0x0,8
tick,0x7ff8278cfeb4,28910999,0,0x0,8
tick,0x7ff8278cfeb4,28922036,0,0x0,8
tick,0x7ff8278cfeb4,28937161,0,0x0,8
tick,0x7ff8278cfeb4,28952832,0,0x0,8
tick,0x7ff8278cfeb4,28969972,0,0x0,8
tick,0x7ff8278cfeb4,28986826,0,0x0,8
tick,0x7ff8278cfeb4,29003212,0,0x0,8
tick,0x7ff8278cfeb4,29014952,0,0x0,8
tick,0x7ff8278cfeb4,29031266,0,0x0,8
tick,0x7ff8278cfeb4,29045891,0,0x0,8
tick,0x7ff8278cfeb4,29061918,0,0x0,8
tick,0x7ff8278cfeb4,29077124,0,0x0,8
tick,0x7ff8278cfeb4,29092058,0,0x0,8
tick,0x7ff8278cfeb4,29108270,0,0x0,8
tick,0x7ff8278cfeb4,29129054,0,0x0,8
tick,0x7ff8278cfeb4,29142587,0,0x0,8
tick,0x7ff8278cfeb4,29155038,0,0x0,8
tick,0x7ff8278cfeb4,29174129,0,0x0,8
tick,0x7ff8278cfeb4,29187841,0,0x0,8
tick,0x7ff8278cfeb4,29199269,0,0x0,8
tick,0x7ff8278cfeb4,29218866,0,0x0,8
tick,0x7ff8278cfeb4,29228755,0,0x0,8
tick,0x7ff8278cfeb4,29244091,0,0x0,8
tick,0x7ff8278cfeb4,29262241,0,0x0,8
tick,0x7ff8278cfeb4,29275499,0,0x0,8
tick,0x7ff8278cfeb4,29289659,0,0x0,8
tick,0x7ff8278cfeb4,29305939,0,0x0,8
tick,0x7ff8278cfeb4,29320590,0,0x0,8
tick,0x7ff8278cfeb4,29337752,0,0x0,8
tick,0x7ff8278cfeb4,29354005,0,0x0,8
tick,0x7ff8278cfeb4,29369696,0,0x0,8
tick,0x7ff8278cfeb4,29386775,0,0x0,8
tick,0x7ff8278cfeb4,29404444,0,0x0,8
tick,0x7ff8278cfeb4,29416689,0,0x0,8
tick,0x7ff8278cfeb4,29431889,0,0x0,8
tick,0x7ff8278cfeb4,29448018,0,0x0,8
tick,0x7ff8278cfeb4,29462952,0,0x0,8
tick,0x7ff8278cfeb4,29477551,0,0x0,8
tick,0x7ff8278cfeb4,29493505,0,0x0,8
tick,0x7ff8278cfeb4,29508585,0,0x0,8
tick,0x7ff8278cfeb4,29524704,0,0x0,8
tick,0x7ff8278cfeb4,29540539,0,0x0,8
tick,0x7ff8278cfeb4,29556459,0,0x0,8
tick,0x7ff8278cfeb4,29572920,0,0x0,8
tick,0x7ff8278cfeb4,29588430,0,0x0,8
tick,0x7ff8278cfeb4,29604724,0,0x0,8
tick,0x7ff8278cfeb4,29621348,0,0x0,8
tick,0x7ff8278cfeb4,29637506,0,0x0,8
tick,0x7ff8278cfeb4,29649930,0,0x0,8
tick,0x7ff8278cfeb4,29664543,0,0x0,8
tick,0x7ff8278cfeb4,29679485,0,0x0,8
tick,0x7ff8278cfeb4,29695441,0,0x0,8
tick,0x7ff8278cfeb4,29710770,0,0x0,8
tick,0x7ff8278cfeb4,29726477,0,0x0,8
tick,0x7ff8278cfeb4,29742585,0,0x0,8
tick,0x7ff8278cfeb4,29758632,0,0x0,8
tick,0x7ff8278cfeb4,29774457,0,0x0,8
tick,0x7ff8278cfeb4,29790547,0,0x0,8
tick,0x7ff8278cfeb4,29805677,0,0x0,8
tick,0x7ff8278cfeb4,29820389,0,0x0,8
tick,0x7ff8278cfeb4,29836760,0,0x0,8
tick,0x7ff8278cfeb4,29852683,0,0x0,8
tick,0x7ff8278cfeb4,29870216,0,0x0,8
tick,0x7ff8278cfeb4,29884124,0,0x0,8
tick,0x7ff8278cfeb4,29898663,0,0x0,8
tick,0x7ff8278cfeb4,29913378,0,0x0,8
tick,0x7ff8278cfeb4,29929413,0,0x0,8
tick,0x7ff8278cfeb4,29944359,0,0x0,8
tick,0x7ff8278cfeb4,29960195,0,0x0,8
tick,0x7ff8278cfeb4,29976221,0,0x0,8
tick,0x7ff8278cfeb4,29992326,0,0x0,8
tick,0x7ff8278cfeb4,30008486,0,0x0,8
tick,0x7ff8278cfeb4,30024181,0,0x0,8
tick,0x7ff8278cfeb4,30039173,0,0x0,8
tick,0x7ff8278cfeb4,30054281,0,0x0,8
tick,0x7ff8278cfeb4,30069355,0,0x0,8
tick,0x7ff8278cfeb4,30086025,0,0x0,8
tick,0x7ff8278cfeb4,30100121,0,0x0,8
tick,0x7ff8278cfeb4,30115325,0,0x0,8
tick,0x7ff8278cfeb4,30131574,0,0x0,8
tick,0x7ff8278cfeb4,30146314,0,0x0,8
tick,0x7ff8278cfeb4,30162260,0,0x0,8
tick,0x7ff8278cfeb4,30177484,0,0x0,8
tick,0x7ff8278cfeb4,30192350,0,0x0,8
tick,0x7ff8278cfeb4,30208407,0,0x0,8
tick,0x7ff8278cfeb4,30224140,0,0x0,8
tick,0x7ff8278cfeb4,30240112,0,0x0,8
tick,0x7ff8278cfeb4,30256113,0,0x0,8
tick,0x7ff8278cfeb4,30272439,0,0x0,8
tick,0x7ff8278cfeb4,30288038,0,0x0,8
tick,0x7ff8278cfeb4,30304820,0,0x0,8
tick,0x7ff8278cfeb4,30320504,0,0x0,8
tick,0x7ff8278cfeb4,30335457,0,0x0,8
tick,0x7ff8278cfeb4,30352048,0,0x0,8
tick,0x7ff8278cfeb4,30366863,0,0x0,8
tick,0x7ff8278cfeb4,30382203,0,0x0,8
tick,0x7ff8278cfeb4,30398116,0,0x0,8
tick,0x7ff8278cfeb4,30413203,0,0x0,8
tick,0x7ff8278cfeb4,30428248,0,0x0,8
tick,0x7ff8278cfeb4,30447974,0,0x0,8
tick,0x7ff8278cfeb4,30460453,0,0x0,8
tick,0x7ff8278cfeb4,30475269,0,0x0,8
tick,0x7ff8278cfeb4,30489971,0,0x0,8
tick,0x7ff8278cfeb4,30506059,0,0x0,8
tick,0x7ff8278cfeb4,30522625,0,0x0,8
tick,0x7ff8278cfeb4,30538052,0,0x0,8
tick,0x7ff8278cfeb4,30554910,0,0x0,8
tick,0x7ff8278cfeb4,30571326,0,0x0,8
tick,0x7ff8278cfeb4,30585771,0,0x0,8
tick,0x7ff8278cfeb4,30600153,0,0x0,8
tick,0x7ff8278cfeb4,30615999,0,0x0,8
tick,0x7ff8278cfeb4,30633534,0,0x0,8
tick,0x7ff8278cfeb4,30645958,0,0x0,8
tick,0x7ff8278cfeb4,30662001,0,0x0,8
tick,0x7ff8278cfeb4,30677939,0,0x0,8
tick,0x7ff8278cfeb4,30692846,0,0x0,8
tick,0x7ff8278cfeb4,30708824,0,0x0,8
tick,0x7ff8278cfeb4,30724457,0,0x0,8
tick,0x7ff8278cfeb4,30739853,0,0x0,8
tick,0x7ff8278cfeb4,30755778,0,0x0,8
tick,0x7ff8278cfeb4,30772425,0,0x0,8
tick,0x7ff8278cfeb4,30788942,0,0x0,8
tick,0x7ff8278cfeb4,30802456,0,0x0,8
tick,0x7ff8278cfeb4,30816863,0,0x0,8
tick,0x7ff8278cfeb4,30832749,0,0x0,8
tick,0x7ff8278cfeb4,30847749,0,0x0,8
tick,0x7ff8278cfeb4,30864064,0,0x0,8
tick,0x7ff8278cfeb4,30879730,0,0x0,8
tick,0x7ff8278cfeb4,30894786,0,0x0,8
tick,0x7ff8278cfeb4,30914786,0,0x0,8
tick,0x7ff8278cfeb4,30926007,0,0x0,8
tick,0x7ff8278cfeb4,30941144,0,0x0,8
tick,0x7ff8278cfeb4,30956678,0,0x0,8
tick,0x7ff8278cfeb4,30972957,0,0x0,8
tick,0x7ff8278cfeb4,30988090,0,0x0,8
tick,0x7ff8278cfeb4,31004912,0,0x0,8
tick,0x7ff8278cfeb4,31020546,0,0x0,8
tick,0x7ff8278cfeb4,31035818,0,0x0,8
tick,0x7ff8278cfeb4,31050961,0,0x0,8
tick,0x7ff8278cfeb4,31066885,0,0x0,8
tick,0x7ff8278cfeb4,31081904,0,0x0,8
tick,0x7ff8278cfeb4,31097677,0,0x0,8
tick,0x7ff8278cfeb4,31113085,0,0x0,8
tick,0x7ff8278cfeb4,31127867,0,0x0,8
tick,0x7ff8278cfeb4,31143404,0,0x0,8
tick,0x7ff8278cfeb4,31159338,0,0x0,8
tick,0x7ff8278cfeb4,31174056,0,0x0,8
tick,0x7ff8278cfeb4,31189198,0,0x0,8
tick,0x7ff8278cfeb4,31204481,0,0x0,8
tick,0x7ff8278cfeb4,31220165,0,0x0,8
tick,0x7ff8278cfeb4,31237223,0,0x0,8
tick,0x7ff8278cfeb4,31252155,0,0x0,8
tick,0x7ff8278cfeb4,31268176,0,0x0,8
tick,0x7ff8278cfeb4,31285237,0,0x0,8
tick,0x7ff8278cfeb4,31300236,0,0x0,8
tick,0x7ff8278cfeb4,31314973,0,0x0,8
tick,0x7ff8278cfeb4,31331609,0,0x0,8
tick,0x7ff8278cfeb4,31347173,0,0x0,8
tick,0x7ff8278cfeb4,31362804,0,0x0,8
tick,0x7ff8278cfeb4,31380199,0,0x0,8
tick,0x7ff8278cfeb4,31394802,0,0x0,8
tick,0x7ff8278cfeb4,31414443,0,0x0,8
tick,0x7ff8278cfeb4,31425665,0,0x0,8
tick,0x7ff8278cfeb4,31441234,0,0x0,8
tick,0x7ff8278cfeb4,31456276,0,0x0,8
tick,0x7ff8278cfeb4,31473421,0,0x0,8
tick,0x7ff8278cfeb4,31489367,0,0x0,8
tick,0x7ff8278cfeb4,31501196,0,0x0,8
tick,0x7ff8278cfeb4,31517413,0,0x0,8
tick,0x7ff8278cfeb4,31532198,0,0x0,8
tick,0x7ff8278cfeb4,31547373,0,0x0,8
tick,0x7ff8278cfeb4,31563072,0,0x0,8
tick,0x7ff8278cfeb4,31578133,0,0x0,8
tick,0x7ff8278cfeb4,31595229,0,0x0,8
tick,0x7ff8278cfeb4,31610116,0,0x0,8
tick,0x7ff8278cfeb4,31625104,0,0x0,8
tick,0x7ff8278cfeb4,31646113,0,0x0,8
tick,0x7ff8278cfeb4,31657484,0,0x0,8
tick,0x7ff8278cfeb4,31681664,0,0x0,8
tick,0x7ff8278cfeb4,31689361,0,0x0,8
tick,0x7ff8278cfeb4,31706380,0,0x0,8
tick,0x7ff8278cfeb4,31718154,0,0x0,8
tick,0x7ff8278cfeb4,31734137,0,0x0,8
tick,0x7ff8278cfeb4,31750249,0,0x0,8
tick,0x7ff8278cfeb4,31764990,0,0x0,8
tick,0x7ff8278cfeb4,31781219,0,0x0,8
tick,0x7ff8278cfeb4,31798864,0,0x0,8
tick,0x7ff8278cfeb4,31812324,0,0x0,8
tick,0x7ff8278cfeb4,31824932,0,0x0,8
tick,0x7ff8278cfeb4,31841874,0,0x0,8
tick,0x7ff8278cfeb4,31858014,0,0x0,8
tick,0x7ff8278cfeb4,31872933,0,0x0,8
tick,0x7ff8278cfeb4,31888649,0,0x0,8
tick,0x7ff8278cfeb4,31906244,0,0x0,8
tick,0x7ff8278cfeb4,31918457,0,0x0,8
tick,0x7ff8278cfeb4,31935781,0,0x0,8
tick,0x7ff8278cfeb4,31949032,0,0x0,8
tick,0x7ff8278cfeb4,31965130,0,0x0,8
tick,0x7ff8278cfeb4,31980541,0,0x0,8
tick,0x7ff8278cfeb4,31995378,0,0x0,8
tick,0x7ff8278cfeb4,32010181,0,0x0,8
tick,0x7ff8278cfeb4,32025337,0,0x0,8
tick,0x7ff8278cfeb4,32042376,0,0x0,8
tick,0x7ff8278cfeb4,32056804,0,0x0,8
tick,0x7ff8278cfeb4,32074530,0,0x0,8
tick,0x7ff8278cfeb4,32089309,0,0x0,8
tick,0x7ff8278cfeb4,32105469,0,0x0,8
tick,0x7ff8278cfeb4,32118953,0,0x0,8
tick,0x7ff8278cfeb4,32135525,0,0x0,8
tick,0x7ff8278cfeb4,32148732,0,0x0,8
tick,0x7ff8278cfeb4,32165569,0,0x0,8
tick,0x7ff8278cfeb4,32180037,0,0x0,8
tick,0x7ff8278cfeb4,32195060,0,0x0,8
tick,0x7ff8278cfeb4,32210443,0,0x0,8
tick,0x7ff8278cfeb4,32225784,0,0x0,8
tick,0x7ff8278cfeb4,32241678,0,0x0,8
tick,0x7ff8278cfeb4,32257628,0,0x0,8
tick,0x7ff8278cfeb4,32274426,0,0x0,8
tick,0x7ff8278cfeb4,32288652,0,0x0,8
tick,0x7ff8278cfeb4,32304484,0,0x0,8
tick,0x7ff8278cfeb4,32318803,0,0x0,8
tick,0x7ff8278cfeb4,32333954,0,0x0,8
tick,0x7ff8278cfeb4,32358949,0,0x0,8
tick,0x7ff8278cfeb4,32382609,0,0x0,8
tick,0x7ff8278cfeb4,32397618,0,0x0,8
tick,0x7ff8278cfeb4,32413223,0,0x0,8
tick,0x7ff8278cfeb4,32426783,0,0x0,8
tick,0x7ff8278cfeb4,32442246,0,0x0,8
tick,0x7ff8278cfeb4,32456590,0,0x0,8
tick,0x7ff8278cfeb4,32474360,0,0x0,8
tick,0x7ff8278cfeb4,32492336,0,0x0,8
tick,0x7ff8278cfeb4,32501281,0,0x0,8
tick,0x7ff8278cfeb4,32516335,0,0x0,8
tick,0x7ff8278cfeb4,32532284,0,0x0,8
tick,0x7ff8278cfeb4,32547924,0,0x0,8
tick,0x7ff8278cfeb4,32563185,0,0x0,8
tick,0x7ff8278cfeb4,32577771,0,0x0,8
tick,0x7ff8278cfeb4,32592843,0,0x0,8
tick,0x7ff8278cfeb4,32609402,0,0x0,8
tick,0x7ff8278cfeb4,32624971,0,0x0,8
tick,0x7ff8278cfeb4,32641181,0,0x0,8
tick,0x7ff8278cfeb4,32656558,0,0x0,8
tick,0x7ff8278cfeb4,32674187,0,0x0,8
tick,0x7ff8278cfeb4,32686654,0,0x0,8
tick,0x7ff8278cfeb4,32702146,0,0x0,8
tick,0x7ff8278cfeb4,32717148,0,0x0,8
tick,0x7ff8278cfeb4,32732725,0,0x0,8
tick,0x7ff8278cfeb4,32747969,0,0x0,8
tick,0x7ff8278cfeb4,32762707,0,0x0,8
tick,0x7ff8278cfeb4,32779204,0,0x0,8
tick,0x7ff8278cfeb4,32795088,0,0x0,8
tick,0x7ff8278cfeb4,32809751,0,0x0,8
tick,0x7ff8278cfeb4,32824649,0,0x0,8
tick,0x7ff8278cfeb4,32841265,0,0x0,8
tick,0x7ff8278cfeb4,32856921,0,0x0,8
tick,0x7ff8278cfeb4,32873954,0,0x0,8
tick,0x7ff8278cfeb4,32886884,0,0x0,8
tick,0x7ff8278cfeb4,32902749,0,0x0,8
tick,0x7ff8278cfeb4,32918721,0,0x0,8
tick,0x7ff8278cfeb4,32933979,0,0x0,8
tick,0x7ff8278cfeb4,32950121,0,0x0,8
tick,0x7ff8278cfeb4,32964557,0,0x0,8
tick,0x7ff8278cfeb4,32980592,0,0x0,8
tick,0x7ff8278cfeb4,32996541,0,0x0,8
tick,0x7ff8278cfeb4,33012366,0,0x0,8
tick,0x7ff8278cfeb4,33028249,0,0x0,8
tick,0x7ff8278cfeb4,33044166,0,0x0,8
tick,0x7ff8278cfeb4,33059304,0,0x0,8
tick,0x7ff8278cfeb4,33074146,0,0x0,8
tick,0x7ff8278cfeb4,33091071,0,0x0,8
tick,0x7ff8278cfeb4,33105232,0,0x0,8
tick,0x7ff8278cfeb4,33120197,0,0x0,8
tick,0x7ff8278cfeb4,33136119,0,0x0,8
tick,0x7ff8278cfeb4,33151347,0,0x0,8
tick,0x7ff8278cfeb4,33167607,0,0x0,8
tick,0x7ff8278cfeb4,33182272,0,0x0,8
tick,0x7ff8278cfeb4,33198098,0,0x0,8
tick,0x7ff8278cfeb4,33213332,0,0x0,8
tick,0x7ff8278cfeb4,33228154,0,0x0,8
tick,0x7ff8278cfeb4,33244317,0,0x0,8
tick,0x7ff8278cfeb4,33260353,0,0x0,8
tick,0x7ff8278cfeb4,33276006,0,0x0,8
tick,0x7ff8278cfeb4,33291323,0,0x0,8
tick,0x7ff8278cfeb4,33307531,0,0x0,8
tick,0x7ff8278cfeb4,33322923,0,0x0,8
tick,0x7ff8278cfeb4,33342319,0,0x0,8
tick,0x7ff8278cfeb4,33353281,0,0x0,8
tick,0x7ff8278cfeb4,33368087,0,0x0,8
tick,0x7ff8278cfeb4,33385307,0,0x0,8
tick,0x7ff8278cfeb4,33400528,0,0x0,8
tick,0x7ff8278cfeb4,33418106,0,0x0,8
tick,0x7ff8278cfeb4,33432304,0,0x0,8
tick,0x7ff8278cfeb4,33447732,0,0x0,8
tick,0x7ff8278cfeb4,33464133,0,0x0,8
tick,0x7ff8278cfeb4,33477969,0,0x0,8
tick,0x7ff8278cfeb4,33494145,0,0x0,8
tick,0x7ff8278cfeb4,33509431,0,0x0,8
tick,0x7ff8278cfeb4,33527565,0,0x0,8
tick,0x7ff8278cfeb4,33544277,0,0x0,8
tick,0x7ff8278cfeb4,33560349,0,0x0,8
tick,0x7ff8278cfeb4,33578368,0,0x0,8
tick,0x7ff8278cfeb4,33587373,0,0x0,8
tick,0x7ff8278cfeb4,33602166,0,0x0,8
tick,0x7ff8278cfeb4,33618246,0,0x0,8
tick,0x7ff8278cfeb4,33632488,0,0x0,8
tick,0x7ff8278cfeb4,33648632,0,0x0,8
tick,0x7ff8278cfeb4,33663489,0,0x0,8
tick,0x7ff8278cfeb4,33678318,0,0x0,8
tick,0x7ff8278cfeb4,33697211,0,0x0,8
tick,0x7ff8278cfeb4,33711765,0,0x0,8
tick,0x7ff8278cfeb4,33727234,0,0x0,8
tick,0x7ff8278cfeb4,33748344,0,0x0,8
tick,0x7ff8278cfeb4,33754798,0,0x0,8
tick,0x7ff8278cfeb4,33770040,0,0x0,8
tick,0x7ff8278cfeb4,33785177,0,0x0,8
tick,0x7ff8278cfeb4,33801110,0,0x0,8
tick,0x7ff8278cfeb4,33815867,0,0x0,8
tick,0x7ff8278cfeb4,33830949,0,0x0,8
tick,0x7ff8278cfeb4,33847186,0,0x0,8
tick,0x7ff8278cfeb4,33862518,0,0x0,8
tick,0x7ff8278cfeb4,33876810,0,0x0,8
tick,0x7ff8278cfeb4,33892754,0,0x0,8
tick,0x7ff8278cfeb4,33907850,0,0x0,8
tick,0x7ff8278cfeb4,33926072,0,0x0,8
tick,0x7ff8278cfeb4,33941062,0,0x0,8
tick,0x7ff8278cfeb4,33953865,0,0x0,8
tick,0x7ff8278cfeb4,33970140,0,0x0,8
tick,0x7ff8278cfeb4,33984518,0,0x0,8
tick,0x7ff8278cfeb4,33999559,0,0x0,8
tick,0x7ff8278cfeb4,34014705,0,0x0,8
tick,0x7ff8278cfeb4,34030040,0,0x0,8
tick,0x7ff8278cfeb4,34044708,0,0x0,8
tick,0x7ff8278cfeb4,34060652,0,0x0,8
tick,0x7ff8278cfeb4,34076830,0,0x0,8
tick,0x7ff8278cfeb4,34091794,0,0x0,8
tick,0x7ff8278cfeb4,34107413,0,0x0,8
tick,0x7ff8278cfeb4,34124994,0,0x0,8
tick,0x7ff8278cfeb4,34142459,0,0x0,8
tick,0x7ff8278cfeb4,34155736,0,0x0,8
tick,0x7ff8278cfeb4,34171398,0,0x0,8
tick,0x7ff8278cfeb4,34187152,0,0x0,8
tick,0x7ff8278cfeb4,34203502,0,0x0,8
tick,0x7ff8278cfeb4,34219102,0,0x0,8
tick,0x7ff8278cfeb4,34235668,0,0x0,8
tick,0x7ff8278cfeb4,34251308,0,0x0,8
tick,0x7ff8278cfeb4,34267142,0,0x0,8
tick,0x7ff8278cfeb4,34283107,0,0x0,8
tick,0x7ff8278cfeb4,34299032,0,0x0,8
tick,0x7ff8278cfeb4,34314200,0,0x0,8
tick,0x7ff8278cfeb4,34330242,0,0x0,8
tick,0x7ff8278cfeb4,34345011,0,0x0,8
tick,0x7ff8278cfeb4,34361212,0,0x0,8
tick,0x7ff8278cfeb4,34377266,0,0x0,8
tick,0x7ff8278cfeb4,34392397,0,0x0,8
tick,0x7ff8278cfeb4,34411978,0,0x0,8
tick,0x7ff8278cfeb4,34424500,0,0x0,8
tick,0x7ff8278cfeb4,34438044,0,0x0,8
tick,0x7ff8278cfeb4,34452939,0,0x0,8
tick,0x7ff8278cfeb4,34468934,0,0x0,8
tick,0x7ff8278cfeb4,34484685,0,0x0,8
tick,0x7ff8278cfeb4,34499073,0,0x0,8
tick,0x7ff8278cfeb4,34514059,0,0x0,8
tick,0x7ff8278cfeb4,34529921,0,0x0,8
tick,0x7ff8278cfeb4,34544812,0,0x0,8
tick,0x7ff8278cfeb4,34561702,0,0x0,8
tick,0x7ff8278cfeb4,34575892,0,0x0,8
tick,0x7ff8278cfeb4,34591966,0,0x0,8
tick,0x7ff8278cfeb4,34606913,0,0x0,8
tick,0x7ff8278cfeb4,34622073,0,0x0,8
tick,0x7ff8278cfeb4,34638035,0,0x0,8
tick,0x7ff8278cfeb4,34654667,0,0x0,8
tick,0x7ff8278cfeb4,34671687,0,0x0,8
tick,0x7ff8278cfeb4,34689001,0,0x0,8
tick,0x7ff8278cfeb4,34715528,0,0x0,8
tick,0x7ff8278cfeb4,34743362,0,0x0,8
tick,0x7ff8278cfeb4,34759401,0,0x0,8
tick,0x7ff8278cfeb4,34767583,0,0x0,8
tick,0x7ff8278cfeb4,34778313,0,0x0,8
tick,0x7ff8278cfeb4,34793909,0,0x0,8
tick,0x7ff8278cfeb4,34812924,0,0x0,8
tick,0x7ff8278cfeb4,34826421,0,0x0,8
tick,0x7ff8278cfeb4,34842337,0,0x0,8
tick,0x7ff8278cfeb4,34855888,0,0x0,8
tick,0x7ff8278cfeb4,34876726,0,0x0,8
tick,0x7ff8278cfeb4,34887289,0,0x0,8
tick,0x7ff8278cfeb4,34903759,0,0x0,8
tick,0x7ff8278cfeb4,34917682,0,0x0,8
tick,0x7ff8278cfeb4,34935861,0,0x0,8
tick,0x7ff8278cfeb4,34949256,0,0x0,8
tick,0x7ff8278cfeb4,34963828,0,0x0,8
tick,0x7ff8278cfeb4,34979740,0,0x0,8
tick,0x7ff8278cfeb4,34999268,0,0x0,8
tick,0x7ff8278cfeb4,35009707,0,0x0,8
tick,0x7ff8278cfeb4,35026631,0,0x0,8
tick,0x7ff8278cfeb4,35043284,0,0x0,8
tick,0x7ff8278cfeb4,35055542,0,0x0,8
tick,0x7ff8278cfeb4,35070606,0,0x0,8
tick,0x7ff8278cfeb4,35087486,0,0x0,8
tick,0x7ff8278cfeb4,35101581,0,0x0,8
tick,0x7ff8278cfeb4,35116559,0,0x0,8
tick,0x7ff8278cfeb4,35132981,0,0x0,8
tick,0x7ff8278cfeb4,35148081,0,0x0,8
tick,0x7ff8278cfeb4,35163711,0,0x0,8
tick,0x7ff8278cfeb4,35180004,0,0x0,8
tick,0x7ff8278cfeb4,35193591,0,0x0,8
tick,0x7ff8278cfeb4,35209761,0,0x0,8
tick,0x7ff8278cfeb4,35225863,0,0x0,8
tick,0x7ff8278cfeb4,35240186,0,0x0,8
tick,0x7ff8278cfeb4,35255379,0,0x0,8
tick,0x7ff8278cfeb4,35271774,0,0x0,8
tick,0x7ff8278cfeb4,35287491,0,0x0,8
tick,0x7ff8278cfeb4,35302512,0,0x0,8
tick,0x7ff8278cfeb4,35317485,0,0x0,8
tick,0x7ff8278cfeb4,35333533,0,0x0,8
tick,0x7ff8278cfeb4,35349417,0,0x0,8
tick,0x7ff8278cfeb4,35364779,0,0x0,8
tick,0x7ff8278cfeb4,35379307,0,0x0,8
tick,0x7ff8278cfeb4,35395407,0,0x0,8
tick,0x7ff8278cfeb4,35413257,0,0x0,8
tick,0x7ff8278cfeb4,35427487,0,0x0,8
tick,0x7ff8278cfeb4,35443373,0,0x0,8
tick,0x7ff8278cfeb4,35458648,0,0x0,8
tick,0x7ff8278cfeb4,35473640,0,0x0,8
tick,0x7ff8278cfeb4,35488577,0,0x0,8
tick,0x7ff8278cfeb4,35514543,0,0x0,8
tick,0x7ff8278cfeb4,35519443,0,0x0,8
tick,0x7ff8278cfeb4,35535436,0,0x0,8
tick,0x7ff8278cfeb4,35551616,0,0x0,8
tick,0x7ff8278cfeb4,35567201,0,0x0,8
tick,0x7ff8278cfeb4,35583287,0,0x0,8
tick,0x7ff8278cfeb4,35598292,0,0x0,8
tick,0x7ff8278cfeb4,35613285,0,0x0,8
tick,0x7ff8278cfeb4,35628327,0,0x0,8
tick,0x7ff8278cfeb4,35644696,0,0x0,8
tick,0x7ff8278cfeb4,35660368,0,0x0,8
tick,0x7ff8278cfeb4,35677240,0,0x0,8
tick,0x7ff8278cfeb4,35694321,0,0x0,8
tick,0x7ff8278cfeb4,35709198,0,0x0,8
tick,0x7ff8278cfeb4,35723172,0,0x0,8
tick,0x7ff8278cfeb4,35738798,0,0x0,8
tick,0x7ff8278cfeb4,35754512,0,0x0,8
tick,0x7ff8278cfeb4,35772001,0,0x0,8
tick,0x7ff8278cfeb4,35787053,0,0x0,8
tick,0x7ff8278cfeb4,35802263,0,0x0,8
tick,0x7ff8278cfeb4,35817059,0,0x0,8
tick,0x7ff8278cfeb4,35833360,0,0x0,8
tick,0x7ff8278cfeb4,35848207,0,0x0,8
tick,0x7ff8278cfeb4,35863044,0,0x0,8
tick,0x7ff8278cfeb4,35879095,0,0x0,8
tick,0x7ff8278cfeb4,35894285,0,0x0,8
tick,0x7ff8278cfeb4,35910072,0,0x0,8
tick,0x7ff8278cfeb4,35925114,0,0x0,8
tick,0x7ff8278cfeb4,35943069,0,0x0,8
tick,0x7ff8278cfeb4,35956705,0,0x0,8
tick,0x7ff8278cfeb4,35972746,0,0x0,8
tick,0x7ff8278cfeb4,35988906,0,0x0,8
tick,0x7ff8278cfeb4,36003748,0,0x0,8
tick,0x7ff8278cfeb4,36019131,0,0x0,8
tick,0x7ff8278cfeb4,36034820,0,0x0,8
tick,0x7ff8278cfeb4,36050392,0,0x0,8
tick,0x7ff8278cfeb4,36064939,0,0x0,8
tick,0x7ff8278cfeb4,36080712,0,0x0,8
tick,0x7ff8278cfeb4,36096750,0,0x0,8
tick,0x7ff8278cfeb4,36112714,0,0x0,8
tick,0x7ff8278cfeb4,36127639,0,0x0,8
tick,0x7ff8278cfeb4,36142827,0,0x0,8
tick,0x7ff8278cfeb4,36157853,0,0x0,8
tick,0x7ff8278cfeb4,36174271,0,0x0,8
tick,0x7ff8278cfeb4,36189890,0,0x0,8
tick,0x7ff8278cfeb4,36204784,0,0x0,8
tick,0x7ff8278cfeb4,36223157,0,0x0,8
tick,0x7ff8278cfeb4,36237656,0,0x0,8
tick,0x7ff8278cfeb4,36255074,0,0x0,8
tick,0x7ff8278cfeb4,36269607,0,0x0,8
tick,0x7ff8278cfeb4,36284593,0,0x0,8
tick,0x7ff8278cfeb4,36301806,0,0x0,8
tick,0x7ff8278cfeb4,36315631,0,0x0,8
tick,0x7ff8278cfeb4,36332216,0,0x0,8
tick,0x7ff8278cfeb4,36346886,0,0x0,8
tick,0x7ff8278cfeb4,36362895,0,0x0,8
tick,0x7ff8278cfeb4,36377505,0,0x0,8
tick,0x7ff8278cfeb4,36394144,0,0x0,8
tick,0x7ff8278cfeb4,36412258,0,0x0,8
tick,0x7ff8278cfeb4,36427913,0,0x0,8
tick,0x7ff8278cfeb4,36439668,0,0x0,8
tick,0x7ff8278cfeb4,36454463,0,0x0,8
tick,0x7ff8278cfeb4,36471103,0,0x0,8
tick,0x7ff8278cfeb4,36487391,0,0x0,8
tick,0x7ff8278cfeb4,36502490,0,0x0,8
tick,0x7ff8278cfeb4,36518235,0,0x0,8
tick,0x7ff8278cfeb4,36533553,0,0x0,8
tick,0x7ff8278cfeb4,36548324,0,0x0,8
tick,0x7ff8278cfeb4,36564509,0,0x0,8
tick,0x7ff8278cfeb4,36580398,0,0x0,8
tick,0x7ff8278cfeb4,36595470,0,0x0,8
tick,0x7ff8278cfeb4,36610704,0,0x0,8
tick,0x7ff8278cfeb4,36627331,0,0x0,8
tick,0x7ff8278cfeb4,36644470,0,0x0,8
tick,0x7ff8278cfeb4,36659040,0,0x0,8
tick,0x7ff8278cfeb4,36673659,0,0x0,8
tick,0x7ff8278cfeb4,36688655,0,0x0,8
tick,0x7ff8278cfeb4,36704216,0,0x0,8
tick,0x7ff8278cfeb4,36721866,0,0x0,8
tick,0x7ff8278cfeb4,36736291,0,0x0,8
tick,0x7ff8278cfeb4,36751656,0,0x0,8
tick,0x7ff8278cfeb4,36766890,0,0x0,8
tick,0x7ff8278cfeb4,36782255,0,0x0,8
tick,0x7ff8278cfeb4,36798096,0,0x0,8
tick,0x7ff8278cfeb4,36814093,0,0x0,8
tick,0x7ff8278cfeb4,36830114,0,0x0,8
tick,0x7ff8278cfeb4,36845912,0,0x0,8
tick,0x7ff8278cfeb4,36862453,0,0x0,8
tick,0x7ff8278cfeb4,36878014,0,0x0,8
tick,0x7ff8278cfeb4,36892997,0,0x0,8
tick,0x7ff8278cfeb4,36908013,0,0x0,8
tick,0x7ff8278cfeb4,36924211,0,0x0,8
tick,0x7ff8278cfeb4,36939997,0,0x0,8
tick,0x7ff8278cfeb4,36956099,0,0x0,8
tick,0x7ff8278cfeb4,36972741,0,0x0,8
tick,0x7ff8278cfeb4,36987990,0,0x0,8
tick,0x7ff8278cfeb4,37004289,0,0x0,8
tick,0x7ff8278cfeb4,37018878,0,0x0,8
tick,0x7ff8278cfeb4,37035349,0,0x0,8
tick,0x7ff8278cfeb4,37050219,0,0x0,8
tick,0x7ff8278cfeb4,37066228,0,0x0,8
tick,0x7ff8278cfeb4,37081829,0,0x0,8
tick,0x7ff8278cfeb4,37097233,0,0x0,8
tick,0x7ff8278cfeb4,37113124,0,0x0,8
tick,0x7ff8278cfeb4,37127920,0,0x0,8
tick,0x7ff8278cfeb4,37143474,0,0x0,8
tick,0x7ff8278cfeb4,37157922,0,0x0,8
tick,0x7ff8278cfeb4,37173945,0,0x0,8
tick,0x7ff8278cfeb4,37188775,0,0x0,8
tick,0x7ff8278cfeb4,37204060,0,0x0,8
tick,0x7ff8278cfeb4,37219861,0,0x0,8
tick,0x7ff8278cfeb4,37236232,0,0x0,8
tick,0x7ff8278cfeb4,37251455,0,0x0,8
tick,0x7ff8278cfeb4,37265814,0,0x0,8
tick,0x7ff8278cfeb4,37282186,0,0x0,8
tick,0x7ff8278cfeb4,37296876,0,0x0,8
tick,0x7ff8278cfeb4,37312231,0,0x0,8
tick,0x7ff8278cfeb4,37326799,0,0x0,8
tick,0x7ff8278cfeb4,37343145,0,0x0,8
tick,0x7ff8278cfeb4,37357768,0,0x0,8
tick,0x7ff8278cfeb4,37373070,0,0x0,8
tick,0x7ff8278cfeb4,37388599,0,0x0,8
tick,0x7ff8278cfeb4,37403726,0,0x0,8
tick,0x7ff8278cfeb4,37419779,0,0x0,8
tick,0x7ff8278cfeb4,37435860,0,0x0,8
tick,0x7ff8278cfeb4,37449573,0,0x0,8
tick,0x7ff8278cfeb4,37465652,0,0x0,8
tick,0x7ff8278cfeb4,37482016,0,0x0,8
tick,0x7ff8278cfeb4,37497079,0,0x0,8
tick,0x7ff8278cfeb4,37512383,0,0x0,8
tick,0x7ff8278cfeb4,37527349,0,0x0,8
tick,0x7ff8278cfeb4,37543461,0,0x0,8
tick,0x7ff8278cfeb4,37567178,0,0x0,8
tick,0x7ff8278cfeb4,37572668,0,0x0,8
tick,0x7ff8278cfeb4,37587745,0,0x0,8
tick,0x7ff8278cfeb4,37602278,0,0x0,8
tick,0x7ff8278cfeb4,37618300,0,0x0,8
tick,0x7ff8278cfeb4,37637919,0,0x0,8
tick,0x7ff8278cfeb4,37650342,0,0x0,8
tick,0x7ff8278cfeb4,37666354,0,0x0,8
tick,0x7ff8278cfeb4,37683621,0,0x0,8
tick,0x7ff8278cfeb4,37698360,0,0x0,8
tick,0x7ff8278cfeb4,37714174,0,0x0,8
tick,0x7ff8278cfeb4,37730074,0,0x0,8
tick,0x7ff8278cfeb4,37745273,0,0x0,8
tick,0x7ff8278cfeb4,37760311,0,0x0,8
tick,0x7ff8278cfeb4,37775611,0,0x0,8
tick,0x7ff8278cfeb4,37794213,0,0x0,8
tick,0x7ff8278cfeb4,37806737,0,0x0,8
tick,0x7ff8278cfeb4,37821254,0,0x0,8
tick,0x7ff8278cfeb4,37836720,0,0x0,8
tick,0x7ff8278cfeb4,37852190,0,0x0,8
tick,0x7ff8278cfeb4,37868407,0,0x0,8
tick,0x7ff8278cfeb4,37883567,0,0x0,8
tick,0x7ff8278cfeb4,37898385,0,0x0,8
tick,0x7ff8278cfeb4,37913203,0,0x0,8
tick,0x7ff8278cfeb4,37934440,0,0x0,8
tick,0x7ff8278cfeb4,37945401,0,0x0,8
tick,0x7ff8278cfeb4,37962685,0,0x0,8
tick,0x7ff8278cfeb4,37975048,0,0x0,8
tick,0x7ff8278cfeb4,37990052,0,0x0,8
tick,0x7ff8278cfeb4,38006160,0,0x0,8
tick,0x7ff8278cfeb4,38022870,0,0x0,8
tick,0x7ff8278cfeb4,38038333,0,0x0,8
tick,0x7ff8278cfeb4,38054706,0,0x0,8
tick,0x7ff8278cfeb4,38069138,0,0x0,8
tick,0x7ff8278cfeb4,38085551,0,0x0,8
tick,0x7ff8278cfeb4,38100045,0,0x0,8
tick,0x7ff8278cfeb4,38116096,0,0x0,8
tick,0x7ff8278cfeb4,38131509,0,0x0,8
tick,0x7ff8278cfeb4,38145858,0,0x0,8
tick,0x7ff8278cfeb4,38162873,0,0x0,8
tick,0x7ff8278cfeb4,38177234,0,0x0,8
tick,0x7ff8278cfeb4,38191883,0,0x0,8
tick,0x7ff8278cfeb4,38208014,0,0x0,8
tick,0x7ff8278cfeb4,38224090,0,0x0,8
tick,0x7ff8278cfeb4,38240086,0,0x0,8
tick,0x7ff8278cfeb4,38255840,0,0x0,8
tick,0x7ff8278cfeb4,38272399,0,0x0,8
tick,0x7ff8278cfeb4,38286913,0,0x0,8
tick,0x7ff8278cfeb4,38302308,0,0x0,8
tick,0x7ff8278cfeb4,38320097,0,0x0,8
tick,0x7ff8278cfeb4,38332771,0,0x0,8
tick,0x7ff8278cfeb4,38348419,0,0x0,8
tick,0x7ff8278cfeb4,38363194,0,0x0,8
tick,0x7ff8278cfeb4,38379294,0,0x0,8
tick,0x7ff8278cfeb4,38394743,0,0x0,8
tick,0x7ff8278cfeb4,38413757,0,0x0,8
tick,0x7ff8278cfeb4,38427381,0,0x0,8
tick,0x7ff8278cfeb4,38441995,0,0x0,8
tick,0x7ff8278cfeb4,38457353,0,0x0,8
tick,0x7ff8278cfeb4,38472167,0,0x0,8
tick,0x7ff8278cfeb4,38488489,0,0x0,8
tick,0x7ff8278cfeb4,38503898,0,0x0,8
tick,0x7ff8278cfeb4,38519809,0,0x0,8
tick,0x7ff8278cfeb4,38536288,0,0x0,8
tick,0x7ff8278cfeb4,38549685,0,0x0,8
tick,0x7ff8278cfeb4,38566076,0,0x0,8
tick,0x7ff8278cfeb4,38580629,0,0x0,8
tick,0x7ff8278cfeb4,38595754,0,0x0,8
tick,0x7ff8278cfeb4,38613766,0,0x0,8
tick,0x7ff8278cfeb4,38625647,0,0x0,8
tick,0x7ff8278cfeb4,38640665,0,0x0,8
tick,0x7ff8278cfeb4,38656794,0,0x0,8
tick,0x7ff8278cfeb4,38672835,0,0x0,8
tick,0x7ff8278cfeb4,38687224,0,0x0,8
tick,0x7ff8278cfeb4,38703007,0,0x0,8
tick,0x7ff8278cfeb4,38718731,0,0x0,8
tick,0x7ff8278cfeb4,38735329,0,0x0,8
tick,0x7ff8278cfeb4,38750569,0,0x0,8
tick,0x7ff8278cfeb4,38765570,0,0x0,8
tick,0x7ff8278cfeb4,38781953,0,0x0,8
tick,0x7ff8278cfeb4,38796819,0,0x0,8
tick,0x7ff8278cfeb4,38813252,0,0x0,8
tick,0x7ff8278cfeb4,38827565,0,0x0,8
tick,0x7ff8278cfeb4,38842519,0,0x0,8
tick,0x7ff8278cfeb4,38857557,0,0x0,8
tick,0x7ff8278cfeb4,38872841,0,0x0,8
tick,0x7ff8278cfeb4,38888566,0,0x0,8
tick,0x7ff8278cfeb4,38903903,0,0x0,8
tick,0x7ff8278cfeb4,38919528,0,0x0,8
tick,0x7ff8278cfeb4,38934595,0,0x0,8
tick,0x7ff8278cfeb4,38952062,0,0x0,8
tick,0x7ff8278cfeb4,38965645,0,0x0,8
tick,0x7ff8278cfeb4,38980436,0,0x0,8
tick,0x7ff8278cfeb4,38996865,0,0x0,8
tick,0x7ff8278cfeb4,39012468,0,0x0,8
tick,0x7ff8278cfeb4,39028598,0,0x0,8
tick,0x7ff8278cfeb4,39044823,0,0x0,8
tick,0x7ff8278cfeb4,39062496,0,0x0,8
tick,0x7ff8278cfeb4,39081826,0,0x0,8
tick,0x7ff8278cfeb4,39090479,0,0x0,8
tick,0x7ff8278cfeb4,39107122,0,0x0,8
tick,0x7ff8278cfeb4,39123346,0,0x0,8
tick,0x7ff8278cfeb4,39137432,0,0x0,8
tick,0x7ff8278cfeb4,39153365,0,0x0,8
tick,0x7ff8278cfeb4,39168828,0,0x0,8
tick,0x7ff8278cfeb4,39183672,0,0x0,8
tick,0x7ff8278cfeb4,39198383,0,0x0,8
tick,0x7ff8278cfeb4,39214630,0,0x0,8
tick,0x7ff8278cfeb4,39228719,0,0x0,8
tick,0x7ff8278cfeb4,39247047,0,0x0,8
tick,0x7ff8278cfeb4,39259340,0,0x0,8
tick,0x7ff8278cfeb4,39275463,0,0x0,8
tick,0x7ff8278cfeb4,39292043,0,0x0,8
tick,0x7ff8278cfeb4,39306529,0,0x0,8
tick,0x7ff8278cfeb4,39324145,0,0x0,8
tick,0x7ff8278cfeb4,39337475,0,0x0,8
tick,0x7ff8278cfeb4,39352502,0,0x0,8
tick,0x7ff8278cfeb4,39372889,0,0x0,8
tick,0x7ff8278cfeb4,39383419,0,0x0,8
tick,0x7ff8278cfeb4,39399931,0,0x0,8
tick,0x7ff8278cfeb4,39414309,0,0x0,8
tick,0x7ff8278cfeb4,39429739,0,0x0,8
tick,0x7ff8278cfeb4,39444569,0,0x0,8
tick,0x7ff8278cfeb4,39462375,0,0x0,8
tick,0x7ff8278cfeb4,39475421,0,0x0,8
tick,0x7ff8278cfeb4,39491339,0,0x0,8
tick,0x7ff8278cfeb4,39507018,0,0x0,8
tick,0x7ff8278cfeb4,39523091,0,0x0,8
tick,0x7ff8278cfeb4,39539452,0,0x0,8
tick,0x7ff8278cfeb4,39555109,0,0x0,8
tick,0x7ff8278cfeb4,39572316,0,0x0,8
tick,0x7ff8278cfeb4,39587271,0,0x0,8
tick,0x7ff8278cfeb4,39602788,0,0x0,8
tick,0x7ff8278cfeb4,39617868,0,0x0,8
tick,0x7ff8278cfeb4,39632741,0,0x0,8
tick,0x7ff8278cfeb4,39648824,0,0x0,8
tick,0x7ff8278cfeb4,39664833,0,0x0,8
tick,0x7ff8278cfeb4,39681210,0,0x0,8
tick,0x7ff8278cfeb4,39697664,0,0x0,8
tick,0x7ff8278cfeb4,39714143,0,0x0,8
tick,0x7ff8278cfeb4,39726532,0,0x0,8
tick,0x7ff8278cfeb4,39742089,0,0x0,8
tick,0x7ff8278cfeb4,39757833,0,0x0,8
tick,0x7ff8278cfeb4,39773873,0,0x0,8
tick,0x7ff8278cfeb4,39789737,0,0x0,8
tick,0x7ff8278cfeb4,39805553,0,0x0,8
tick,0x7ff8278cfeb4,39819714,0,0x0,8
tick,0x7ff8278cfeb4,39836075,0,0x0,8
tick,0x7ff8278cfeb4,39851716,0,0x0,8
tick,0x7ff8278cfeb4,39867727,0,0x0,8
tick,0x7ff8278cfeb4,39883687,0,0x0,8
tick,0x7ff8278cfeb4,39898786,0,0x0,8
tick,0x7ff8278cfeb4,39914244,0,0x0,8
tick,0x7ff8278cfeb4,39930181,0,0x0,8
tick,0x7ff8278cfeb4,39944543,0,0x0,8
tick,0x7ff8278cfeb4,39959654,0,0x0,8
tick,0x7ff8278cfeb4,39975810,0,0x0,8
tick,0x7ff8278cfeb4,39990573,0,0x0,8
tick,0x7ff8278cfeb4,40006427,0,0x0,8
tick,0x7ff8278cfeb4,40022544,0,0x0,8
tick,0x7ff8278cfeb4,40037964,0,0x0,8
tick,0x7ff8278cfeb4,40054079,0,0x0,8
tick,0x7ff8278cfeb4,40074702,0,0x0,8
tick,0x7ff8278cfeb4,40086755,0,0x0,8
tick,0x7ff8278cfeb4,40101530,0,0x0,8
tick,0x7ff8278cfeb4,40116053,0,0x0,8
tick,0x7ff8278cfeb4,40132455,0,0x0,8
tick,0x7ff8278cfeb4,40148051,0,0x0,8
tick,0x7ff8278cfeb4,40164047,0,0x0,8
tick,0x7ff8278cfeb4,40179757,0,0x0,8
tick,0x7ff8278cfeb4,40194293,0,0x0,8
tick,0x7ff8278cfeb4,40210348,0,0x0,8
tick,0x7ff8278cfeb4,40226137,0,0x0,8
tick,0x7ff8278cfeb4,40241994,0,0x0,8
tick,0x7ff8278cfeb4,40257916,0,0x0,8
tick,0x7ff8278cfeb4,40272920,0,0x0,8
tick,0x7ff8278cfeb4,40289029,0,0x0,8
tick,0x7ff8278cfeb4,40304009,0,0x0,8
tick,0x7ff8278cfeb4,40319871,0,0x0,8
tick,0x7ff8278cfeb4,40335190,0,0x0,8
tick,0x7ff8278cfeb4,40350092,0,0x0,8
tick,0x7ff8278cfeb4,40365446,0,0x0,8
tick,0x7ff8278cfeb4,40381991,0,0x0,8
tick,0x7ff8278cfeb4,40396102,0,0x0,8
tick,0x7ff8278cfeb4,40414712,0,0x0,8
tick,0x7ff8278cfeb4,40427176,0,0x0,8
tick,0x7ff8278cfeb4,40442410,0,0x0,8
tick,0x7ff8278cfeb4,40458115,0,0x0,8
tick,0x7ff8278cfeb4,40475407,0,0x0,8
tick,0x7ff8278cfeb4,40488957,0,0x0,8
tick,0x7ff8278cfeb4,40504042,0,0x0,8
tick,0x7ff8278cfeb4,40520284,0,0x0,8
tick,0x7ff8278cfeb4,40536492,0,0x0,8
tick,0x7ff8278cfeb4,40551985,0,0x0,8
tick,0x7ff8278cfeb4,40569016,0,0x0,8
tick,0x7ff8278cfeb4,40583134,0,0x0,8
tick,0x7ff8278cfeb4,40598871,0,0x0,8
tick,0x7ff8278cfeb4,40614973,0,0x0,8
tick,0x7ff8278cfeb4,40632065,0,0x0,8
tick,0x7ff8278cfeb4,40644177,0,0x0,8
tick,0x7ff8278cfeb4,40659697,0,0x0,8
tick,0x7ff8278cfeb4,40681066,0,0x0,8
tick,0x7ff8278cfeb4,40698472,0,0x0,8
tick,0x7ff8278cfeb4,40715140,0,0x0,8
tick,0x7ff8278cfeb4,40723043,0,0x0,8
tick,0x7ff8278cfeb4,40742628,0,0x0,8
tick,0x7ff8278cfeb4,40756673,0,0x0,8
tick,0x7ff8278cfeb4,40773847,0,0x0,8
tick,0x7ff8278cfeb4,40785110,0,0x0,8
tick,0x7ff8278cfeb4,40799727,0,0x0,8
tick,0x7ff8278cfeb4,40814950,0,0x0,8
tick,0x7ff8278cfeb4,40833050,0,0x0,8
tick,0x7ff8278cfeb4,40847278,0,0x0,8
tick,0x7ff8278cfeb4,40862755,0,0x0,8
tick,0x7ff8278cfeb4,40877579,0,0x0,8
tick,0x7ff8278cfeb4,40892867,0,0x0,8
tick,0x7ff8278cfeb4,40908660,0,0x0,8
tick,0x7ff8278cfeb4,40923983,0,0x0,8
tick,0x7ff8278cfeb4,40939701,0,0x0,8
tick,0x7ff8278cfeb4,40955793,0,0x0,8
tick,0x7ff8278cfeb4,40971782,0,0x0,8
tick,0x7ff8278cfeb4,40987077,0,0x0,8
tick,0x7ff8278cfeb4,41001718,0,0x0,8
tick,0x7ff8278cfeb4,41016753,0,0x0,8
tick,0x7ff8278cfeb4,41032920,0,0x0,8
tick,0x7ff8278cfeb4,41048377,0,0x0,8
tick,0x7ff8278cfeb4,41064163,0,0x0,8
tick,0x7ff8278cfeb4,41082295,0,0x0,8
tick,0x7ff8278cfeb4,41095861,0,0x0,8
tick,0x7ff8278cfeb4,41111907,0,0x0,8
tick,0x7ff8278cfeb4,41127511,0,0x0,8
tick,0x7ff8278cfeb4,41142250,0,0x0,8
tick,0x7ff8278cfeb4,41157121,0,0x0,8
tick,0x7ff8278cfeb4,41173270,0,0x0,8
tick,0x7ff8278cfeb4,41189699,0,0x0,8
tick,0x7ff8278cfeb4,41204377,0,0x0,8
tick,0x7ff8278cfeb4,41220122,0,0x0,8
tick,0x7ff8278cfeb4,41235459,0,0x0,8
tick,0x7ff8278cfeb4,41251779,0,0x0,8
tick,0x7ff8278cfeb4,41267122,0,0x0,8
tick,0x7ff8278cfeb4,41283158,0,0x0,8
tick,0x7ff8278cfeb4,41299221,0,0x0,8
tick,0x7ff8278cfeb4,41315909,0,0x0,8
tick,0x7ff8278cfeb4,41333303,0,0x0,8
tick,0x7ff8278cfeb4,41348161,0,0x0,8
tick,0x7ff8278cfeb4,41363632,0,0x0,8
tick,0x7ff8278cfeb4,41379152,0,0x0,8
tick,0x7ff8278cfeb4,41395196,0,0x0,8
tick,0x7ff8278cfeb4,41410409,0,0x0,8
tick,0x7ff8278cfeb4,41426117,0,0x0,8
tick,0x7ff8278cfeb4,41441198,0,0x0,8
tick,0x7ff8278cfeb4,41457309,0,0x0,8
tick,0x7ff8278cfeb4,41472657,0,0x0,8
tick,0x7ff8278cfeb4,41487247,0,0x0,8
tick,0x7ff8278cfeb4,41502199,0,0x0,8
tick,0x7ff8278cfeb4,41517000,0,0x0,8
tick,0x7ff8278cfeb4,41533339,0,0x0,8
tick,0x7ff8278cfeb4,41548983,0,0x0,8
tick,0x7ff8278cfeb4,41566077,0,0x0,8
tick,0x7ff8278cfeb4,41583205,0,0x0,8
tick,0x7ff8278cfeb4,41595075,0,0x0,8
tick,0x7ff8278cfeb4,41610184,0,0x0,8
tick,0x7ff8278cfeb4,41625194,0,0x0,8
tick,0x7ff8278cfeb4,41640174,0,0x0,8
tick,0x7ff8278cfeb4,41655855,0,0x0,8
tick,0x7ff8278cfeb4,41671038,0,0x0,8
tick,0x7ff8278cfeb4,41685971,0,0x0,8
tick,0x7ff8278cfeb4,41702233,0,0x0,8
tick,0x7ff8278cfeb4,41717192,0,0x0,8
tick,0x7ff8278cfeb4,41733575,0,0x0,8
tick,0x7ff8278cfeb4,41749595,0,0x0,8
tick,0x7ff8278cfeb4,41766171,0,0x0,8
tick,0x7ff8278cfeb4,41782997,0,0x0,8
tick,0x7ff8278cfeb4,41797475,0,0x0,8
tick,0x7ff8278cfeb4,41812879,0,0x0,8
tick,0x7ff8278cfeb4,41827820,0,0x0,8
tick,0x7ff8278cfeb4,41843990,0,0x0,8
tick,0x7ff8278cfeb4,41858819,0,0x0,8
tick,0x7ff8278cfeb4,41875127,0,0x0,8
tick,0x7ff8278cfeb4,41889746,0,0x0,8
tick,0x7ff8278cfeb4,41905120,0,0x0,8
tick,0x7ff8278cfeb4,41922234,0,0x0,8
tick,0x7ff8278cfeb4,41937463,0,0x0,8
tick,0x7ff8278cfeb4,41953102,0,0x0,8
tick,0x7ff8278cfeb4,41968634,0,0x0,8
tick,0x7ff8278cfeb4,41984732,0,0x0,8
tick,0x7ff8278cfeb4,42001506,0,0x0,8
tick,0x7ff8278cfeb4,42017794,0,0x0,8
tick,0x7ff8278cfeb4,42034196,0,0x0,8
tick,0x7ff8278cfeb4,42049833,0,0x0,8
tick,0x7ff8278cfeb4,42070172,0,0x0,8
tick,0x7ff8278cfeb4,42083758,0,0x0,8
tick,0x7ff8278cfeb4,42096031,0,0x0,8
tick,0x7ff8278cfeb4,42112063,0,0x0,8
tick,0x7ff8278cfeb4,42126488,0,0x0,8
tick,0x7ff8278cfeb4,42142415,0,0x0,8
tick,0x7ff8278cfeb4,42157451,0,0x0,8
tick,0x7ff8278cfeb4,42173943,0,0x0,8
tick,0x7ff8278cfeb4,42188923,0,0x0,8
tick,0x7ff8278cfeb4,42203885,0,0x0,8
tick,0x7ff8278cfeb4,42220313,0,0x0,8
tick,0x7ff8278cfeb4,42234983,0,0x0,8
tick,0x7ff8278cfeb4,42251828,0,0x0,8
tick,0x7ff8278cfeb4,42267380,0,0x0,8
tick,0x7ff8278cfeb4,42281998,0,0x0,8
tick,0x7ff8278cfeb4,42296464,0,0x0,8
tick,0x7ff8278cfeb4,42312904,0,0x0,8
tick,0x7ff8278cfeb4,42327467,0,0x0,8
tick,0x7ff8278cfeb4,42343483,0,0x0,8
tick,0x7ff8278cfeb4,42358445,0,0x0,8
tick,0x7ff8278cfeb4,42373746,0,0x0,8
tick,0x7ff8278cfeb4,42388934,0,0x0,8
tick,0x7ff8278cfeb4,42403486,0,0x0,8
tick,0x7ff8278cfeb4,42419195,0,0x0,8
tick,0x7ff8278cfeb4,42441371,0,0x0,8
tick,0x7ff8278cfeb4,42449676,0,0x0,8
tick,0x7ff8278cfeb4,42468164,0,0x0,8
tick,0x7ff8278cfeb4,42480276,0,0x0,8
tick,0x7ff8278cfeb4,42495367,0,0x0,8
tick,0x7ff8278cfeb4,42511932,0,0x0,8
tick,0x7ff8278cfeb4,42525419,0,0x0,8
tick,0x7ff8278cfeb4,42541461,0,0x0,8
tick,0x7ff8278cfeb4,42556407,0,0x0,8
tick,0x7ff8278cfeb4,42573609,0,0x0,8
tick,0x7ff8278cfeb4,42587411,0,0x0,8
tick,0x7ff8278cfeb4,42602328,0,0x0,8
tick,0x7ff8278cfeb4,42618384,0,0x0,8
tick,0x7ff8278cfeb4,42637198,0,0x0,8
tick,0x7ff8278cfeb4,42650096,0,0x0,8
tick,0x7ff8278cfeb4,42665599,0,0x0,8
tick,0x7ff8278cfeb4,42679378,0,0x0,8
tick,0x7ff8278cfeb4,42695339,0,0x0,8
tick,0x7ff8278cfeb4,42711885,0,0x0,8
tick,0x7ff8278cfeb4,42727236,0,0x0,8
tick,0x7ff8278cfeb4,42743364,0,0x0,8
tick,0x7ff8278cfeb4,42759521,0,0x0,8
tick,0x7ff8278cfeb4,42776200,0,0x0,8
tick,0x7ff8278cfeb4,42791907,0,0x0,8
tick,0x7ff8278cfeb4,42806342,0,0x0,8
tick,0x7ff8278cfeb4,42822224,0,0x0,8
tick,0x7ff8278cfeb4,42836225,0,0x0,8
tick,0x7ff8278cfeb4,42852173,0,0x0,8
tick,0x7ff8278cfeb4,42867342,0,0x0,8
tick,0x7ff8278cfeb4,42882595,0,0x0,8
tick,0x7ff8278cfeb4,42899602,0,0x0,8
tick,0x7ff8278cfeb4,42913330,0,0x0,8
tick,0x7ff8278cfeb4,42929202,0,0x0,8
tick,0x7ff8278cfeb4,42944148,0,0x0,8
tick,0x7ff8278cfeb4,42959447,0,0x0,8
tick,0x7ff8278cfeb4,42974120,0,0x0,8
tick,0x7ff8278cfeb4,42990087,0,0x0,8
tick,0x7ff8278cfeb4,43005599,0,0x0,8
tick,0x7ff8278cfeb4,43021177,0,0x0,8
tick,0x7ff8278cfeb4,43036888,0,0x0,8
tick,0x7ff8278cfeb4,43051993,0,0x0,8
tick,0x7ff8278cfeb4,43066238,0,0x0,8
tick,0x7ff8278cfeb4,43086920,0,0x0,8
tick,0x7ff8278cfeb4,43097663,0,0x0,8
tick,0x7ff8278cfeb4,43112264,0,0x0,8
tick,0x7ff8278cfeb4,43128498,0,0x0,8
tick,0x7ff8278cfeb4,43143328,0,0x0,8
tick,0x7ff8278cfeb4,43158239,0,0x0,8
tick,0x7ff8278cfeb4,43174181,0,0x0,8
tick,0x7ff8278cfeb4,43189112,0,0x0,8
tick,0x7ff8278cfeb4,43203960,0,0x0,8
tick,0x7ff8278cfeb4,43219952,0,0x0,8
tick,0x7ff8278cfeb4,43236209,0,0x0,8
tick,0x7ff8278cfeb4,43252036,0,0x0,8
tick,0x7ff8278cfeb4,43271846,0,0x0,8
tick,0x7ff8278cfeb4,43284482,0,0x0,8
tick,0x7ff8278cfeb4,43297922,0,0x0,8
tick,0x7ff8278cfeb4,43312995,0,0x0,8
tick,0x7ff8278cfeb4,43328076,0,0x0,8
tick,0x7ff8278cfeb4,43342929,0,0x0,8
tick,0x7ff8278cfeb4,43357844,0,0x0,8
tick,0x7ff8278cfeb4,43374211,0,0x0,8
tick,0x7ff8278cfeb4,43388822,0,0x0,8
tick,0x7ff8278cfeb4,43404907,0,0x0,8
tick,0x7ff8278cfeb4,43419179,0,0x0,8
tick,0x7ff8278cfeb4,43434247,0,0x0,8
tick,0x7ff8278cfeb4,43452478,0,0x0,8
tick,0x7ff8278cfeb4,43468223,0,0x0,8
tick,0x7ff8278cfeb4,43483043,0,0x0,8
tick,0x7ff8278cfeb4,43497461,0,0x0,8
tick,0x7ff8278cfeb4,43513419,0,0x0,8
tick,0x7ff8278cfeb4,43529671,0,0x0,8
tick,0x7ff8278cfeb4,43546793,0,0x0,8
tick,0x7ff8278cfeb4,43559383,0,0x0,8
tick,0x7ff8278cfeb4,43575931,0,0x0,8
tick,0x7ff8278cfeb4,43592885,0,0x0,8
tick,0x7ff8278cfeb4,43612043,0,0x0,8
tick,0x7ff8278cfeb4,43624977,0,0x0,8
tick,0x7ff8278cfeb4,43642267,0,0x0,8
tick,0x7ff8278cfeb4,43653071,0,0x0,8
tick,0x7ff8278cfeb4,43668750,0,0x0,8
tick,0x7ff8278cfeb4,43683722,0,0x0,8
tick,0x7ff8278cfeb4,43697719,0,0x0,8
tick,0x7ff8278cfeb4,43713059,0,0x0,8
tick,0x7ff8278cfeb4,43734844,0,0x0,8
tick,0x7ff8278cfeb4,43744773,0,0x0,8
tick,0x7ff8278cfeb4,43760402,0,0x0,8
tick,0x7ff8278cfeb4,43776574,0,0x0,8
tick,0x7ff8278cfeb4,43792736,0,0x0,8
tick,0x7ff8278cfeb4,43808682,0,0x0,8
tick,0x7ff8278cfeb4,43824252,0,0x0,8
tick,0x7ff8278cfeb4,43837960,0,0x0,8
tick,0x7ff8278cfeb4,43854060,0,0x0,8
tick,0x7ff8278cfeb4,43869981,0,0x0,8
tick,0x7ff8278cfeb4,43886323,0,0x0,8
tick,0x7ff8278cfeb4,43902437,0,0x0,8
tick,0x7ff8278cfeb4,43916794,0,0x0,8
tick,0x7ff8278cfeb4,43931777,0,0x0,8
tick,0x7ff8278cfeb4,43947497,0,0x0,8
tick,0x7ff8278cfeb4,43962303,0,0x0,8
tick,0x7ff8278cfeb4,43978220,0,0x0,8
tick,0x7ff8278cfeb4,43992950,0,0x0,8
tick,0x7ff8278cfeb4,44007816,0,0x0,8
tick,0x7ff8278cfeb4,44023967,0,0x0,8
tick,0x7ff8278cfeb4,44039990,0,0x0,8
tick,0x7ff8278cfeb4,44055879,0,0x0,8
tick,0x7ff8278cfeb4,44070976,0,0x0,8
tick,0x7ff8278cfeb4,44085851,0,0x0,8
tick,0x7ff8278cfeb4,44102429,0,0x0,8
tick,0x7ff8278cfeb4,44118810,0,0x0,8
tick,0x7ff8278cfeb4,44131919,0,0x0,8
tick,0x7ff8278cfeb4,44148163,0,0x0,8
tick,0x7ff8278cfeb4,44164557,0,0x0,8
tick,0x7ff8278cfeb4,44180665,0,0x0,8
tick,0x7ff8278cfeb4,44195725,0,0x0,8
tick,0x7ff8278cfeb4,44212624,0,0x0,8
tick,0x7ff8278cfeb4,44226935,0,0x0,8
tick,0x7ff8278cfeb4,44241882,0,0x0,8
tick,0x7ff8278cfeb4,44257848,0,0x0,8
tick,0x7ff8278cfeb4,44273984,0,0x0,8
tick,0x7ff8278cfeb4,44289670,0,0x0,8
tick,0x7ff8278cfeb4,44304752,0,0x0,8
tick,0x7ff8278cfeb4,44319856,0,0x0,8
tick,0x7ff8278cfeb4,44335967,0,0x0,8
tick,0x7ff8278cfeb4,44351920,0,0x0,8
tick,0x7ff8278cfeb4,44368826,0,0x0,8
tick,0x7ff8278cfeb4,44383148,0,0x0,8
tick,0x7ff8278cfeb4,44397665,0,0x0,8
tick,0x7ff8278cfeb4,44413896,0,0x0,8
tick,0x7ff8278cfeb4,44429120,0,0x0,8
tick,0x7ff8278cfeb4,44443877,0,0x0,8
tick,0x7ff8278cfeb4,44459811,0,0x0,8
tick,0x7ff8278cfeb4,44476176,0,0x0,8
tick,0x7ff8278cfeb4,44491463,0,0x0,8
tick,0x7ff8278cfeb4,44507295,0,0x0,8
tick,0x7ff8278cfeb4,44523232,0,0x0,8
tick,0x7ff8278cfeb4,44539474,0,0x0,8
tick,0x7ff8278cfeb4,44554583,0,0x0,8
tick,0x7ff8278cfeb4,44572791,0,0x0,8
tick,0x7ff8278cfeb4,44590266,0,0x0,8
tick,0x7ff8278cfeb4,44603011,0,0x0,8
tick,0x7ff8278cfeb4,44623300,0,0x0,8
tick,0x7ff8278cfeb4,44637943,0,0x0,8
tick,0x7ff8278cfeb4,44649193,0,0x0,8
tick,0x7ff8278cfeb4,44664446,0,0x0,8
tick,0x7ff8278cfeb4,44679034,0,0x0,8
tick,0x7ff8278cfeb4,44694488,0,0x0,8
tick,0x7ff8278cfeb4,44709895,0,0x0,8
tick,0x7ff8278cfeb4,44725994,0,0x0,8
tick,0x7ff8278cfeb4,44743009,0,0x0,8
tick,0x7ff8278cfeb4,44758339,0,0x0,8
tick,0x7ff8278cfeb4,44774505,0,0x0,8
tick,0x7ff8278cfeb4,44790459,0,0x0,8
tick,0x7ff8278cfeb4,44805952,0,0x0,8
tick,0x7ff8278cfeb4,44825688,0,0x0,8
tick,0x7ff8278cfeb4,44837180,0,0x0,8
tick,0x7ff8278cfeb4,44854595,0,0x0,8
tick,0x7ff8278cfeb4,44870515,0,0x0,8
tick,0x7ff8278cfeb4,44882996,0,0x0,8
tick,0x7ff8278cfeb4,44899504,0,0x0,8
tick,0x7ff8278cfeb4,44913996,0,0x0,8
tick,0x7ff8278cfeb4,44931879,0,0x0,8
tick,0x7ff8278cfeb4,44945952,0,0x0,8
tick,0x7ff8278cfeb4,44962387,0,0x0,8
tick,0x7ff8278cfeb4,44978027,0,0x0,8
tick,0x7ff8278cfeb4,44993956,0,0x0,8
tick,0x7ff8278cfeb4,45010176,0,0x0,8
tick,0x7ff8278cfeb4,45026117,0,0x0,8
tick,0x7ff8278cfeb4,45041802,0,0x0,8
tick,0x7ff8278cfeb4,45056787,0,0x0,8
tick,0x7ff8278cfeb4,45072897,0,0x0,8
tick,0x7ff8278cfeb4,45097110,0,0x0,8
tick,0x7ff8278cfeb4,45105951,0,0x0,8
tick,0x7ff8278cfeb4,45126662,0,0x0,8
tick,0x7ff8278cfeb4,45137892,0,0x0,8
tick,0x7ff8278cfeb4,45156371,0,0x0,8
tick,0x7ff8278cfeb4,45172473,0,0x0,8
tick,0x7ff8278cfeb4,45181380,0,0x0,8
tick,0x7ff8278cfeb4,45197888,0,0x0,8
tick,0x7ff8278cfeb4,45212196,0,0x0,8
tick,0x7ff8278cfeb4,45227167,0,0x0,8
tick,0x7ff8278cfeb4,45241944,0,0x0,8
tick,0x7ff8278cfeb4,45257735,0,0x0,8
tick,0x7ff8278cfeb4,45272620,0,0x0,8
tick,0x7ff8278cfeb4,45287836,0,0x0,8
tick,0x7ff8278cfeb4,45303031,0,0x0,8
tick,0x7ff8278cfeb4,45318844,0,0x0,8
tick,0x7ff8278cfeb4,45335287,0,0x0,8
tick,0x7ff8278cfeb4,45351900,0,0x0,8
tick,0x7ff8278cfeb4,45366618,0,0x0,8
tick,0x7ff8278cfeb4,45382713,0,0x0,8
tick,0x7ff8278cfeb4,45398698,0,0x0,8
tick,0x7ff8278cfeb4,45415567,0,0x0,8
tick,0x7ff8278cfeb4,45431144,0,0x0,8
tick,0x7ff8278cfeb4,45445586,0,0x0,8
tick,0x7ff8278cfeb4,45461682,0,0x0,8
tick,0x7ff8278cfeb4,45477666,0,0x0,8
tick,0x7ff8278cfeb4,45492542,0,0x0,8
tick,0x7ff8278cfeb4,45508469,0,0x0,8
tick,0x7ff8278cfeb4,45523619,0,0x0,8
tick,0x7ff8278cfeb4,45539960,0,0x0,8
tick,0x7ff8278cfeb4,45555953,0,0x0,8
tick,0x7ff8278cfeb4,45572060,0,0x0,8
tick,0x7ff8278cfeb4,45585962,0,0x0,8
tick,0x7ff8278cfeb4,45601476,0,0x0,8
tick,0x7ff8278cfeb4,45616549,0,0x0,8
tick,0x7ff8278cfeb4,45632658,0,0x0,8
tick,0x7ff8278cfeb4,45648542,0,0x0,8
tick,0x7ff8278cfeb4,45664218,0,0x0,8
tick,0x7ff8278cfeb4,45679339,0,0x0,8
tick,0x7ff8278cfeb4,45695094,0,0x0,8
tick,0x7ff8278cfeb4,45711718,0,0x0,8
tick,0x7ff8278cfeb4,45727312,0,0x0,8
tick,0x7ff8278cfeb4,45743172,0,0x0,8
tick,0x7ff8278cfeb4,45759112,0,0x0,8
tick,0x7ff8278cfeb4,45774086,0,0x0,8
tick,0x7ff8278cfeb4,45790252,0,0x0,8
tick,0x7ff8278cfeb4,45805183,0,0x0,8
tick,0x7ff8278cfeb4,45821121,0,0x0,8
tick,0x7ff8278cfeb4,45837833,0,0x0,8
tick,0x7ff8278cfeb4,45852893,0,0x0,8
tick,0x7ff8278cfeb4,45867149,0,0x0,8
tick,0x7ff8278cfeb4,45883004,0,0x0,8
tick,0x7ff8278cfeb4,45899152,0,0x0,8
tick,0x7ff8278cfeb4,45914362,0,0x0,8
tick,0x7ff8278cfeb4,45930150,0,0x0,8
tick,0x7ff8278cfeb4,45946155,0,0x0,8
tick,0x7ff8278cfeb4,45960020,0,0x0,8
tick,0x7ff8278cfeb4,45975985,0,0x0,8
tick,0x7ff8278cfeb4,45991899,0,0x0,8
tick,0x7ff8278cfeb4,46007288,0,0x0,8
tick,0x7ff8278cfeb4,46022921,0,0x0,8
tick,0x7ff8278cfeb4,46038896,0,0x0,8
tick,0x7ff8278cfeb4,46055039,0,0x0,8
tick,0x7ff8278cfeb4,46070967,0,0x0,8
tick,0x7ff8278cfeb4,46087242,0,0x0,8
tick,0x7ff8278cfeb4,46102135,0,0x0,8
tick,0x7ff8278cfeb4,46116909,0,0x0,8
tick,0x7ff8278cfeb4,46132068,0,0x0,8
tick,0x7ff8278cfeb4,46147909,0,0x0,8
tick,0x7ff8278cfeb4,46163977,0,0x0,8
tick,0x7ff8278cfeb4,46179417,0,0x0,8
tick,0x7ff8278cfeb4,46195086,0,0x0,8
tick,0x7ff8278cfeb4,46210401,0,0x0,8
tick,0x7ff8278cfeb4,46225243,0,0x0,8
tick,0x7ff8278cfeb4,46241211,0,0x0,8
tick,0x7ff8278cfeb4,46257309,0,0x0,8
tick,0x7ff8278cfeb4,46274247,0,0x0,8
tick,0x7ff8278cfeb4,46292210,0,0x0,8
tick,0x7ff8278cfeb4,46307228,0,0x0,8
tick,0x7ff8278cfeb4,46317191,0,0x0,8
tick,0x7ff8278cfeb4,46333196,0,0x0,8
tick,0x7ff8278cfeb4,46348161,0,0x0,8
tick,0x7ff8278cfeb4,46367470,0,0x0,8
tick,0x7ff8278cfeb4,46382409,0,0x0,8
tick,0x7ff8278cfeb4,46393985,0,0x0,8
tick,0x7ff8278cfeb4,46413153,0,0x0,8
tick,0x7ff8278cfeb4,46427113,0,0x0,8
tick,0x7ff8278cfeb4,46443152,0,0x0,8
tick,0x7ff8278cfeb4,46460381,0,0x0,8
tick,0x7ff8278cfeb4,46475372,0,0x0,8
tick,0x7ff8278cfeb4,46489172,0,0x0,8
tick,0x7ff8278cfeb4,46506448,0,0x0,8
tick,0x7ff8278cfeb4,46525930,0,0x0,8
tick,0x7ff8278cfeb4,46533200,0,0x0,8
tick,0x7ff8278cfeb4,46549105,0,0x0,8
tick,0x7ff8278cfeb4,46563760,0,0x0,8
tick,0x7ff8278cfeb4,46579913,0,0x0,8
tick,0x7ff8278cfeb4,46596257,0,0x0,8
tick,0x7ff8278cfeb4,46612464,0,0x0,8
tick,0x7ff8278cfeb4,46626789,0,0x0,8
tick,0x7ff8278cfeb4,46650055,0,0x0,8
tick,0x7ff8278cfeb4,46657747,0,0x0,8
tick,0x7ff8278cfeb4,46675820,0,0x0,8
tick,0x7ff8278cfeb4,46691808,0,0x0,8
tick,0x7ff8278cfeb4,46708088,0,0x0,8
tick,0x7ff8278cfeb4,46722073,0,0x0,8
tick,0x7ff8278cfeb4,46742753,0,0x0,8
tick,0x7ff8278cfeb4,46749728,0,0x0,8
tick,0x7ff8278cfeb4,46766264,0,0x0,8
tick,0x7ff8278cfeb4,46784283,0,0x0,8
tick,0x7ff8278cfeb4,46799154,0,0x0,8
tick,0x7ff8278cfeb4,46817695,0,0x0,8
tick,0x7ff8278cfeb4,46829075,0,0x0,8
tick,0x7ff8278cfeb4,46845269,0,0x0,8
tick,0x7ff8278cfeb4,46860347,0,0x0,8
tick,0x7ff8278cfeb4,46876705,0,0x0,8
tick,0x7ff8278cfeb4,46891744,0,0x0,8
tick,0x7ff8278cfeb4,46907109,0,0x0,8
tick,0x7ff8278cfeb4,46923110,0,0x0,8
tick,0x7ff8278cfeb4,46939277,0,0x0,8
tick,0x7ff8278cfeb4,46954926,0,0x0,8
tick,0x7ff8278cfeb4,46971434,0,0x0,8
tick,0x7ff8278cfeb4,46988045,0,0x0,8
tick,0x7ff8278cfeb4,47003513,0,0x0,8
tick,0x7ff8278cfeb4,47023052,0,0x0,8
tick,0x7ff8278cfeb4,47034916,0,0x0,8
tick,0x7ff8278cfeb4,47050335,0,0x0,8
tick,0x7ff8278cfeb4,47066432,0,0x0,8
tick,0x7ff8278cfeb4,47082242,0,0x0,8
tick,0x7ff8278cfeb4,47098413,0,0x0,8
tick,0x7ff8278cfeb4,47113430,0,0x0,8
tick,0x7ff8278cfeb4,47128346,0,0x0,8
tick,0x7ff8278cfeb4,47144788,0,0x0,8
tick,0x7ff8278cfeb4,47160286,0,0x0,8
tick,0x7ff8278cfeb4,47175551,0,0x0,8
tick,0x7ff8278cfeb4,47190475,0,0x0,8
tick,0x7ff8278cfeb4,47206342,0,0x0,8
tick,0x7ff8278cfeb4,47223515,0,0x0,8
tick,0x7ff8278cfeb4,47238390,0,0x0,8
tick,0x7ff8278cfeb4,47254651,0,0x0,8
tick,0x7ff8278cfeb4,47271903,0,0x0,8
tick,0x7ff8278cfeb4,47287859,0,0x0,8
tick,0x7ff8278cfeb4,47302342,0,0x0,8
tick,0x7ff8278cfeb4,47317875,0,0x0,8
tick,0x7ff8278cfeb4,47332185,0,0x0,8
tick,0x7ff8278cfeb4,47348201,0,0x0,8
tick,0x7ff8278cfeb4,47364170,0,0x0,8
tick,0x7ff8278cfeb4,47379678,0,0x0,8
tick,0x7ff8278cfeb4,47395820,0,0x0,8
tick,0x7ff8278cfeb4,47412038,0,0x0,8
tick,0x7ff8278cfeb4,47427911,0,0x0,8
tick,0x7ff8278cfeb4,47443936,0,0x0,8
tick,0x7ff8278cfeb4,47458702,0,0x0,8
tick,0x7ff8278cfeb4,47474051,0,0x0,8
tick,0x7ff8278cfeb4,47488618,0,0x0,8
tick,0x7ff8278cfeb4,47504677,0,0x0,8
tick,0x7ff8278cfeb4,47519744,0,0x0,8
tick,0x7ff8278cfeb4,47534737,0,0x0,8
tick,0x7ff8278cfeb4,47550522,0,0x0,8
tick,0x7ff8278cfeb4,47565578,0,0x0,8
tick,0x7ff8278cfeb4,47581093,0,0x0,8
tick,0x7ff8278cfeb4,47596687,0,0x0,8
tick,0x7ff8278cfeb4,47612164,0,0x0,8
tick,0x7ff8278cfeb4,47626744,0,0x0,8
tick,0x7ff8278cfeb4,47644861,0,0x0,8
tick,0x7ff8278cfeb4,47657928,0,0x0,8
tick,0x7ff8278cfeb4,47674235,0,0x0,8
tick,0x7ff8278cfeb4,47688804,0,0x0,8
tick,0x7ff8278cfeb4,47704736,0,0x0,8
tick,0x7ff8278cfeb4,47720183,0,0x0,8
tick,0x7ff8278cfeb4,47734645,0,0x0,8
tick,0x7ff8278cfeb4,47749626,0,0x0,8
tick,0x7ff8278cfeb4,47765683,0,0x0,8
tick,0x7ff8278cfeb4,47781583,0,0x0,8
tick,0x7ff8278cfeb4,47797884,0,0x0,8
tick,0x7ff8278cfeb4,47813555,0,0x0,8
tick,0x7ff8278cfeb4,47828539,0,0x0,8
tick,0x7ff8278cfeb4,47843711,0,0x0,8
tick,0x7ff8278cfeb4,47859572,0,0x0,8
tick,0x7ff8278cfeb4,47875364,0,0x0,8
tick,0x7ff8278cfeb4,47890558,0,0x0,8
tick,0x7ff8278cfeb4,47905931,0,0x0,8
tick,0x7ff8278cfeb4,47922570,0,0x0,8
tick,0x7ff8278cfeb4,47937620,0,0x0,8
tick,0x7ff8278cfeb4,47953705,0,0x0,8
tick,0x7ff8278cfeb4,47969543,0,0x0,8
tick,0x7ff8278cfeb4,47986115,0,0x0,8
tick,0x7ff8278cfeb4,48002573,0,0x0,8
tick,0x7ff8278cfeb4,48017479,0,0x0,8
tick,0x7ff8278cfeb4,48032943,0,0x0,8
tick,0x7ff8278cfeb4,48048113,0,0x0,8
tick,0x7ff8278cfeb4,48063391,0,0x0,8
tick,0x7ff8278cfeb4,48077391,0,0x0,8
tick,0x7ff8278cfeb4,48093351,0,0x0,8
tick,0x7ff8278cfeb4,48108187,0,0x0,8
tick,0x7ff8278cfeb4,48127239,0,0x0,8
tick,0x7ff8278cfeb4,48140323,0,0x0,8
tick,0x7ff8278cfeb4,48156127,0,0x0,8
tick,0x7ff8278cfeb4,48175142,0,0x0,8
tick,0x7ff8278cfeb4,48185259,0,0x0,8
tick,0x7ff8278cfeb4,48201540,0,0x0,8
tick,0x7ff8278cfeb4,48217035,0,0x0,8
tick,0x7ff8278cfeb4,48232648,0,0x0,8
tick,0x7ff8278cfeb4,48247883,0,0x0,8
tick,0x7ff8278cfeb4,48263610,0,0x0,8
tick,0x7ff8278cfeb4,48279620,0,0x0,8
tick,0x7ff8278cfeb4,48295196,0,0x0,8
tick,0x7ff8278cfeb4,48311703,0,0x0,8
tick,0x7ff8278cfeb4,48329473,0,0x0,8
tick,0x7ff8278cfeb4,48343086,0,0x0,8
tick,0x7ff8278cfeb4,48358210,0,0x0,8
tick,0x7ff8278cfeb4,48373785,0,0x0,8
tick,0x7ff8278cfeb4,48389950,0,0x0,8
tick,0x7ff8278cfeb4,48405124,0,0x0,8
tick,0x7ff8278cfeb4,48419823,0,0x0,8
tick,0x7ff8278cfeb4,48435673,0,0x0,8
tick,0x7ff8278cfeb4,48451748,0,0x0,8
tick,0x7ff8278cfeb4,48468309,0,0x0,8
tick,0x7ff8278cfeb4,48483614,0,0x0,8
tick,0x7ff8278cfeb4,48500257,0,0x0,8
tick,0x7ff8278cfeb4,48515649,0,0x0,8
tick,0x7ff8278cfeb4,48530987,0,0x0,8
tick,0x7ff8278cfeb4,48546855,0,0x0,8
tick,0x7ff8278cfeb4,48562341,0,0x0,8
tick,0x7ff8278cfeb4,48577481,0,0x0,8
tick,0x7ff8278cfeb4,48593532,0,0x0,8
tick,0x7ff8278cfeb4,48609074,0,0x0,8
tick,0x7ff8278cfeb4,48625117,0,0x0,8
tick,0x7ff8278cfeb4,48640327,0,0x0,8
tick,0x7ff8278cfeb4,48656554,0,0x0,8
tick,0x7ff8278cfeb4,48673704,0,0x0,8
tick,0x7ff8278cfeb4,48687179,0,0x0,8
tick,0x7ff8278cfeb4,48702214,0,0x0,8
tick,0x7ff8278cfeb4,48717151,0,0x0,8
tick,0x7ff8278cfeb4,48733744,0,0x0,8
tick,0x7ff8278cfeb4,48749285,0,0x0,8
tick,0x7ff8278cfeb4,48765128,0,0x0,8
tick,0x7ff8278cfeb4,48781493,0,0x0,8
tick,0x7ff8278cfeb4,48797925,0,0x0,8
tick,0x7ff8278cfeb4,48812268,0,0x0,8
tick,0x7ff8278cfeb4,48827214,0,0x0,8
tick,0x7ff8278cfeb4,48842967,0,0x0,8
tick,0x7ff8278cfeb4,48857967,0,0x0,8
tick,0x7ff8278cfeb4,48874154,0,0x0,8
tick,0x7ff8278cfeb4,48887980,0,0x0,8
tick,0x7ff8278cfeb4,48903939,0,0x0,8
tick,0x7ff8278cfeb4,48919123,0,0x0,8
tick,0x7ff8278cfeb4,48935107,0,0x0,8
tick,0x7ff8278cfeb4,48949934,0,0x0,8
tick,0x7ff8278cfeb4,48965072,0,0x0,8
tick,0x7ff8278cfeb4,48980894,0,0x0,8
tick,0x7ff8278cfeb4,48996976,0,0x0,8
tick,0x7ff8278cfeb4,49012374,0,0x0,8
tick,0x7ff8278cfeb4,49026954,0,0x0,8
tick,0x7ff8278cfeb4,49041885,0,0x0,8
tick,0x7ff8278cfeb4,49057879,0,0x0,8
tick,0x7ff8278cfeb4,49074212,0,0x0,8
tick,0x7ff8278cfeb4,49088813,0,0x0,8
tick,0x7ff8278cfeb4,49103944,0,0x0,8
tick,0x7ff8278cfeb4,49119793,0,0x0,8
tick,0x7ff8278cfeb4,49136774,0,0x0,8
tick,0x7ff8278cfeb4,49152743,0,0x0,8
tick,0x7ff8278cfeb4,49165971,0,0x0,8
tick,0x7ff8278cfeb4,49182682,0,0x0,8
tick,0x7ff8278cfeb4,49197829,0,0x0,8
tick,0x7ff8278cfeb4,49213846,0,0x0,8
tick,0x7ff8278cfeb4,49230224,0,0x0,8
tick,0x7ff8278cfeb4,49244876,0,0x0,8
tick,0x7ff8278cfeb4,49261128,0,0x0,8
tick,0x7ff8278cfeb4,49275697,0,0x0,8
tick,0x7ff8278cfeb4,49292066,0,0x0,8
tick,0x7ff8278cfeb4,49307838,0,0x0,8
tick,0x7ff8278cfeb4,49339381,0,0x0,8
tick,0x7ff8278cfeb4,49368649,0,0x0,8
tick,0x7ff8278cfeb4,49390439,0,0x0,8
tick,0x7ff8278cfeb4,49404578,0,0x0,8
tick,0x7ff8278cfeb4,49415009,0,0x0,8
tick,0x7ff8278cfeb4,49431242,0,0x0,8
tick,0x7ff8278cfeb4,49447286,0,0x0,8
tick,0x7ff8278cfeb4,49462901,0,0x0,8
tick,0x7ff8278cfeb4,49479241,0,0x0,8
tick,0x7ff8278cfeb4,49494526,0,0x0,8
tick,0x7ff8278cfeb4,49509661,0,0x0,8
tick,0x7ff8278cfeb4,49525590,0,0x0,8
tick,0x7ff8278cfeb4,49541600,0,0x0,8
tick,0x7ff8278cfeb4,49557511,0,0x0,8
tick,0x7ff8278cfeb4,49574222,0,0x0,8
tick,0x7ff8278cfeb4,49587352,0,0x0,8
tick,0x7ff8278cfeb4,49602368,0,0x0,8
tick,0x7ff8278cfeb4,49618529,0,0x0,8
tick,0x7ff8278cfeb4,49633216,0,0x0,8
tick,0x7ff8278cfeb4,49649911,0,0x0,8
tick,0x7ff8278cfeb4,49665256,0,0x0,8
tick,0x7ff8278cfeb4,49683159,0,0x0,8
tick,0x7ff8278cfeb4,49696772,0,0x0,8
tick,0x7ff8278cfeb4,49712042,0,0x0,8
tick,0x7ff8278cfeb4,49727729,0,0x0,8
tick,0x7ff8278cfeb4,49744103,0,0x0,8
tick,0x7ff8278cfeb4,49759377,0,0x0,8
tick,0x7ff8278cfeb4,49775928,0,0x0,8
tick,0x7ff8278cfeb4,49792178,0,0x0,8
tick,0x7ff8278cfeb4,49810251,0,0x0,8
tick,0x7ff8278cfeb4,49825221,0,0x0,8
tick,0x7ff8278cfeb4,49843294,0,0x0,8
tick,0x7ff8278cfeb4,49858760,0,0x0,8
tick,0x7ff8278cfeb4,49869555,0,0x0,8
tick,0x7ff8278cfeb4,49884588,0,0x0,8
tick,0x7ff8278cfeb4,49899158,0,0x0,8
tick,0x7ff8278cfeb4,49914053,0,0x0,8
tick,0x7ff8278cfeb4,49930076,0,0x0,8
tick,0x7ff8278cfeb4,49945976,0,0x0,8
tick,0x7ff8278cfeb4,49961249,0,0x0,8
tick,0x7ff8278cfeb4,49975965,0,0x0,8
tick,0x7ff8278cfeb4,49992057,0,0x0,8
tick,0x7ff8278cfeb4,50008043,0,0x0,8
tick,0x7ff8278cfeb4,50024065,0,0x0,8
tick,0x7ff8278cfeb4,50040998,0,0x0,8
tick,0x7ff8278cfeb4,50053905,0,0x0,8
tick,0x7ff8278cfeb4,50070072,0,0x0,8
tick,0x7ff8278cfeb4,50085135,0,0x0,8
tick,0x7ff8278cfeb4,50099928,0,0x0,8
tick,0x7ff8278cfeb4,50115907,0,0x0,8
tick,0x7ff8278cfeb4,50132092,0,0x0,8
tick,0x7ff8278cfeb4,50148065,0,0x0,8
tick,0x7ff8278cfeb4,50164019,0,0x0,8
tick,0x7ff8278cfeb4,50179557,0,0x0,8
tick,0x7ff8278cfeb4,50194832,0,0x0,8
tick,0x7ff8278cfeb4,50209908,0,0x0,8
tick,0x7ff8278cfeb4,50225111,0,0x0,8
tick,0x7ff8278cfeb4,50239972,0,0x0,8
tick,0x7ff8278cfeb4,50257012,0,0x0,8
tick,0x7ff8278cfeb4,50272881,0,0x0,8
tick,0x7ff8278cfeb4,50287795,0,0x0,8
tick,0x7ff8278cfeb4,50303925,0,0x0,8
tick,0x7ff8278cfeb4,50319325,0,0x0,8
tick,0x7ff8278cfeb4,50333770,0,0x0,8
tick,0x7ff8278cfeb4,50349994,0,0x0,8
tick,0x7ff8278cfeb4,50364925,0,0x0,8
tick,0x7ff8278cfeb4,50379675,0,0x0,8
tick,0x7ff8278cfeb4,50395788,0,0x0,8
tick,0x7ff8278cfeb4,50412375,0,0x0,8
tick,0x7ff8278cfeb4,50425696,0,0x0,8
tick,0x7ff8278cfeb4,50440770,0,0x0,8
tick,0x7ff8278cfeb4,50457410,0,0x0,8
tick,0x7ff8278cfeb4,50472462,0,0x0,8
tick,0x7ff8278cfeb4,50487950,0,0x0,8
tick,0x7ff8278cfeb4,50502832,0,0x0,8
tick,0x7ff8278cfeb4,50517687,0,0x0,8
tick,0x7ff8278cfeb4,50532757,0,0x0,8
tick,0x7ff8278cfeb4,50548985,0,0x0,8
tick,0x7ff8278cfeb4,50563786,0,0x0,8
tick,0x7ff8278cfeb4,50579590,0,0x0,8
tick,0x7ff8278cfeb4,50595618,0,0x0,8
tick,0x7ff8278cfeb4,50611043,0,0x0,8
tick,0x7ff8278cfeb4,50625908,0,0x0,8
tick,0x7ff8278cfeb4,50658178,0,0x0,8
tick,0x7ff8278cfeb4,50673425,0,0x0,8
tick,0x7ff8278cfeb4,50688566,0,0x0,8
tick,0x7ff8278cfeb4,50703981,0,0x0,8
tick,0x7ff8278cfeb4,50722316,0,0x0,8
tick,0x7ff8278cfeb4,50736501,0,0x0,8
tick,0x7ff8278cfeb4,50751948,0,0x0,8
tick,0x7ff8278cfeb4,50768387,0,0x0,8
tick,0x7ff8278cfeb4,50783506,0,0x0,8
tick,0x7ff8278cfeb4,50798887,0,0x0,8
tick,0x7ff8278cfeb4,50816751,0,0x0,8
tick,0x7ff8278cfeb4,50829165,0,0x0,8
tick,0x7ff8278cfeb4,50844972,0,0x0,8
tick,0x7ff8278cfeb4,50861868,0,0x0,8
tick,0x7ff8278cfeb4,50876230,0,0x0,8
tick,0x7ff8278cfeb4,50892480,0,0x0,8
tick,0x7ff8278cfeb4,50909281,0,0x0,8
tick,0x7ff8278cfeb4,50925054,0,0x0,8
tick,0x7ff8278cfeb4,50942964,0,0x0,8
tick,0x7ff8278cfeb4,50955777,0,0x0,8
tick,0x7ff8278cfeb4,50975855,0,0x0,8
tick,0x7ff8278cfeb4,50986855,0,0x0,8
tick,0x7ff8278cfeb4,51001780,0,0x0,8
tick,0x7ff8278cfeb4,51016734,0,0x0,8
tick,0x7ff8278cfeb4,51034714,0,0x0,8
tick,0x7ff8278cfeb4,51047919,0,0x0,8
tick,0x7ff8278cfeb4,51065208,0,0x0,8
tick,0x7ff8278cfeb4,51079812,0,0x0,8
tick,0x7ff8278cfeb4,51096902,0,0x0,8
tick,0x7ff8278cfeb4,51112662,0,0x0,8
tick,0x7ff8278cfeb4,51126751,0,0x0,8
tick,0x7ff8278cfeb4,51143273,0,0x0,8
tick,0x7ff8278cfeb4,51158879,0,0x0,8
tick,0x7ff8278cfeb4,51175907,0,0x0,8
tick,0x7ff8278cfeb4,51193379,0,0x0,8
tick,0x7ff8278cfeb4,51204811,0,0x0,8
tick,0x7ff8278cfeb4,51221674,0,0x0,8
tick,0x7ff8278cfeb4,51238467,0,0x0,8
tick,0x7ff8278cfeb4,51259773,0,0x0,8
tick,0x7ff8278cfeb4,51268379,0,0x0,8
tick,0x7ff8278cfeb4,51284279,0,0x0,8
tick,0x7ff8278cfeb4,51300164,0,0x0,8
tick,0x7ff8278cfeb4,51316237,0,0x0,8
tick,0x7ff8278cfeb4,51332217,0,0x0,8
tick,0x7ff8278cfeb4,51348048,0,0x0,8
tick,0x7ff8278cfeb4,51365669,0,0x0,8
tick,0x7ff8278cfeb4,51380200,0,0x0,8
tick,0x7ff8278cfeb4,51395190,0,0x0,8
tick,0x7ff8278cfeb4,51410259,0,0x0,8
tick,0x7ff8278cfeb4,51426281,0,0x0,8
tick,0x7ff8278cfeb4,51443602,0,0x0,8
tick,0x7ff8278cfeb4,51458359,0,0x0,8
tick,0x7ff8278cfeb4,51475368,0,0x0,8
tick,0x7ff8278cfeb4,51492993,0,0x0,8
tick,0x7ff8278cfeb4,51506454,0,0x0,8
tick,0x7ff8278cfeb4,51522595,0,0x0,8
tick,0x7ff8278cfeb4,51538134,0,0x0,8
tick,0x7ff8278cfeb4,51553983,0,0x0,8
tick,0x7ff8278cfeb4,51570343,0,0x0,8
tick,0x7ff8278cfeb4,51584815,0,0x0,8
tick,0x7ff8278cfeb4,51600010,0,0x0,8
tick,0x7ff8278cfeb4,51614952,0,0x0,8
tick,0x7ff8278cfeb4,51630995,0,0x0,8
tick,0x7ff8278cfeb4,51646851,0,0x0,8
tick,0x7ff8278cfeb4,51663732,0,0x0,8
tick,0x7ff8278cfeb4,51679126,0,0x0,8
tick,0x7ff8278cfeb4,51694667,0,0x0,8
tick,0x7ff8278cfeb4,51710549,0,0x0,8
tick,0x7ff8278cfeb4,51724916,0,0x0,8
tick,0x7ff8278cfeb4,51744770,0,0x0,8
tick,0x7ff8278cfeb4,51756851,0,0x0,8
tick,0x7ff8278cfeb4,51773225,0,0x0,8
tick,0x7ff8278cfeb4,51789067,0,0x0,8
tick,0x7ff8278cfeb4,51803984,0,0x0,8
tick,0x7ff8278cfeb4,51819777,0,0x0,8
tick,0x7ff8278cfeb4,51835268,0,0x0,8
tick,0x7ff8278cfeb4,51851809,0,0x0,8
tick,0x7ff8278cfeb4,51868443,0,0x0,8
tick,0x7ff8278cfeb4,51882747,0,0x0,8
tick,0x7ff8278cfeb4,51898807,0,0x0,8
tick,0x7ff8278cfeb4,51914909,0,0x0,8
tick,0x7ff8278cfeb4,51931059,0,0x0,8
tick,0x7ff8278cfeb4,51947101,0,0x0,8
tick,0x7ff8278cfeb4,51961903,0,0x0,8
tick,0x7ff8278cfeb4,51977278,0,0x0,8
tick,0x7ff8278cfeb4,51992671,0,0x0,8
tick,0x7ff8278cfeb4,52007846,0,0x0,8
tick,0x7ff8278cfeb4,52022693,0,0x0,8
tick,0x7ff8278cfeb4,52037825,0,0x0,8
tick,0x7ff8278cfeb4,52052624,0,0x0,8
tick,0x7ff8278cfeb4,52068544,0,0x0,8
tick,0x7ff8278cfeb4,52083893,0,0x0,8
tick,0x7ff8278cfeb4,52099838,0,0x0,8
tick,0x7ff8278cfeb4,52114810,0,0x0,8
tick,0x7ff8278cfeb4,52130869,0,0x0,8
tick,0x7ff8278cfeb4,52145558,0,0x0,8
tick,0x7ff8278cfeb4,52160495,0,0x0,8
tick,0x7ff8278cfeb4,52176221,0,0x0,8
tick,0x7ff8278cfeb4,52197994,0,0x0,8
tick,0x7ff8278cfeb4,52207342,0,0x0,8
tick,0x7ff8278cfeb4,52222548,0,0x0,8
tick,0x7ff8278cfeb4,52238196,0,0x0,8
tick,0x7ff8278cfeb4,52253067,0,0x0,8
tick,0x7ff8278cfeb4,52268451,0,0x0,8
tick,0x7ff8278cfeb4,52284559,0,0x0,8
tick,0x7ff8278cfeb4,52299377,0,0x0,8
tick,0x7ff8278cfeb4,52315543,0,0x0,8
tick,0x7ff8278cfeb4,52331835,0,0x0,8
tick,0x7ff8278cfeb4,52347979,0,0x0,8
tick,0x7ff8278cfeb4,52363341,0,0x0,8
tick,0x7ff8278cfeb4,52380466,0,0x0,8
tick,0x7ff8278cfeb4,52393991,0,0x0,8
tick,0x7ff8278cfeb4,52411189,0,0x0,8
tick,0x7ff8278cfeb4,52424099,0,0x0,8
tick,0x7ff8278cfeb4,52438958,0,0x0,8
tick,0x7ff8278cfeb4,52455425,0,0x0,8
tick,0x7ff8278cfeb4,52472308,0,0x0,8
tick,0x7ff8278cfeb4,52487026,0,0x0,8
tick,0x7ff8278cfeb4,52503194,0,0x0,8
tick,0x7ff8278cfeb4,52519617,0,0x0,8
tick,0x7ff8278cfeb4,52535125,0,0x0,8
tick,0x7ff8278cfeb4,52552530,0,0x0,8
tick,0x7ff8278cfeb4,52565823,0,0x0,8
tick,0x7ff8278cfeb4,52581815,0,0x0,8
tick,0x7ff8278cfeb4,52598174,0,0x0,8
tick,0x7ff8278cfeb4,52612148,0,0x0,8
tick,0x7ff8278cfeb4,52627429,0,0x0,8
tick,0x7ff8278cfeb4,52648563,0,0x0,8
tick,0x7ff8278cfeb4,52663300,0,0x0,8
tick,0x7ff8278cfeb4,52681233,0,0x0,8
tick,0x7ff8278cfeb4,52687909,0,0x0,8
tick,0x7ff8278cfeb4,52704682,0,0x0,8
tick,0x7ff8278cfeb4,52720682,0,0x0,8
tick,0x7ff8278cfeb4,52734551,0,0x0,8
tick,0x7ff8278cfeb4,52754897,0,0x0,8
tick,0x7ff8278cfeb4,52764149,0,0x0,8
tick,0x7ff8278cfeb4,52782971,0,0x0,8
tick,0x7ff8278cfeb4,52799496,0,0x0,8
tick,0x7ff8278cfeb4,52820663,0,0x0,8
tick,0x7ff8278cfeb4,52826751,0,0x0,8
tick,0x7ff8278cfeb4,52844881,0,0x0,8
tick,0x7ff8278cfeb4,52855069,0,0x0,8
tick,0x7ff8278cfeb4,52880963,0,0x0,8
tick,0x7ff8278cfeb4,52887317,0,0x0,8
tick,0x7ff8278cfeb4,52904539,0,0x0,8
tick,0x7ff8278cfeb4,52915813,0,0x0,8
tick,0x7ff8278cfeb4,52931390,0,0x0,8
tick,0x7ff8278cfeb4,52947600,0,0x0,8
tick,0x7ff8278cfeb4,52967182,0,0x0,8
tick,0x7ff8278cfeb4,52980447,0,0x0,8
tick,0x7ff8278cfeb4,52994766,0,0x0,8
tick,0x7ff8278cfeb4,53007667,0,0x0,8
tick,0x7ff8278cfeb4,53022702,0,0x0,8
tick,0x7ff8278cfeb4,53037798,0,0x0,8
tick,0x7ff8278cfeb4,53053917,0,0x0,8
tick,0x7ff8278cfeb4,53069947,0,0x0,8
tick,0x7ff8278cfeb4,53085426,0,0x0,8
tick,0x7ff8278cfeb4,53101408,0,0x0,8
tick,0x7ff8278cfeb4,53116118,0,0x0,8
tick,0x7ff8278cfeb4,53132673,0,0x0,8
tick,0x7ff8278cfeb4,53148122,0,0x0,8
tick,0x7ff8278cfeb4,53163874,0,0x0,8
tick,0x7ff8278cfeb4,53179608,0,0x0,8
tick,0x7ff8278cfeb4,53196425,0,0x0,8
tick,0x7ff8278cfeb4,53215618,0,0x0,8
tick,0x7ff8278cfeb4,53228117,0,0x0,8
tick,0x7ff8278cfeb4,53242830,0,0x0,8
tick,0x7ff8278cfeb4,53256317,0,0x0,8
tick,0x7ff8278cfeb4,53272917,0,0x0,8
tick,0x7ff8278cfeb4,53287659,0,0x0,8
tick,0x7ff8278cfeb4,53302883,0,0x0,8
tick,0x7ff8278cfeb4,53318370,0,0x0,8
tick,0x7ff8278cfeb4,53334776,0,0x0,8
tick,0x7ff8278cfeb4,53350186,0,0x0,8
tick,0x7ff8278cfeb4,53366566,0,0x0,8
tick,0x7ff8278cfeb4,53383485,0,0x0,8
tick,0x7ff8278cfeb4,53398503,0,0x0,8
tick,0x7ff8278cfeb4,53413544,0,0x0,8
tick,0x7ff8278cfeb4,53432409,0,0x0,8
tick,0x7ff8278cfeb4,53448277,0,0x0,8
tick,0x7ff8278cfeb4,53462923,0,0x0,8
tick,0x7ff8278cfeb4,53478443,0,0x0,8
tick,0x7ff8278cfeb4,53492364,0,0x0,8
tick,0x7ff8278cfeb4,53505815,0,0x0,8
tick,0x7ff8278cfeb4,53522851,0,0x0,8
tick,0x7ff8278cfeb4,53536831,0,0x0,8
tick,0x7ff8278cfeb4,53552521,0,0x0,8
tick,0x7ff8278cfeb4,53569250,0,0x0,8
tick,0x7ff8278cfeb4,53583796,0,0x0,8
tick,0x7ff8278cfeb4,53599175,0,0x0,8
tick,0x7ff8278cfeb4,53615305,0,0x0,8
tick,0x7ff8278cfeb4,53630500,0,0x0,8
tick,0x7ff8278cfeb4,53646065,0,0x0,8
tick,0x7ff8278cfeb4,53662584,0,0x0,8
tick,0x7ff8278cfeb4,53678784,0,0x0,8
tick,0x7ff8278cfeb4,53695462,0,0x0,8
tick,0x7ff8278cfeb4,53708689,0,0x0,8
tick,0x7ff8278cfeb4,53724060,0,0x0,8
tick,0x7ff8278cfeb4,53741358,0,0x0,8
tick,0x7ff8278cfeb4,53762395,0,0x0,8
tick,0x7ff8278cfeb4,53773301,0,0x0,8
tick,0x7ff8278cfeb4,53788410,0,0x0,8
tick,0x7ff8278cfeb4,53804218,0,0x0,8
tick,0x7ff8278cfeb4,53821452,0,0x0,8
tick,0x7ff8278cfeb4,53838601,0,0x0,8
tick,0x7ff8278cfeb4,53852221,0,0x0,8
tick,0x7ff8278cfeb4,53866034,0,0x0,8
tick,0x7ff8278cfeb4,53882319,0,0x0,8
tick,0x7ff8278cfeb4,53897775,0,0x0,8
tick,0x7ff8278cfeb4,53912403,0,0x0,8
tick,0x7ff8278cfeb4,53928692,0,0x0,8
tick,0x7ff8278cfeb4,53947796,0,0x0,8
tick,0x7ff8278cfeb4,53959557,0,0x0,8
tick,0x7ff8278cfeb4,53974856,0,0x0,8
tick,0x7ff8278cfeb4,53991726,0,0x0,8
tick,0x7ff8278cfeb4,54006334,0,0x0,8
tick,0x7ff8278cfeb4,54022486,0,0x0,8
tick,0x7ff8278cfeb4,54036663,0,0x0,8
tick,0x7ff8278cfeb4,54052190,0,0x0,8
tick,0x7ff8278cfeb4,54068638,0,0x0,8
tick,0x7ff8278cfeb4,54084844,0,0x0,8
tick,0x7ff8278cfeb4,54100012,0,0x0,8
tick,0x7ff8278cfeb4,54118565,0,0x0,8
tick,0x7ff8278cfeb4,54135119,0,0x0,8
tick,0x7ff8278cfeb4,54149369,0,0x0,8
tick,0x7ff8278cfeb4,54164163,0,0x0,8
tick,0x7ff8278cfeb4,54181837,0,0x0,8
tick,0x7ff8278cfeb4,54201754,0,0x0,8
tick,0x7ff8278cfeb4,54220299,0,0x0,8
tick,0x7ff8278cfeb4,54224020,0,0x0,8
tick,0x7ff8278cfeb4,54243864,0,0x0,8
tick,0x7ff8278cfeb4,54258943,0,0x0,8
tick,0x7ff8278cfeb4,54269016,0,0x0,8
tick,0x7ff8278cfeb4,54286410,0,0x0,8
tick,0x7ff8278cfeb4,54304953,0,0x0,8
tick,0x7ff8278cfeb4,54317336,0,0x0,8
tick,0x7ff8278cfeb4,54333709,0,0x0,8
tick,0x7ff8278cfeb4,54351373,0,0x0,8
tick,0x7ff8278cfeb4,54368591,0,0x0,8
tick,0x7ff8278cfeb4,54399813,0,0x0,8
tick,0x7ff8278cfeb4,54414838,0,0x0,8
tick,0x7ff8278cfeb4,54424329,0,0x0,8
tick,0x7ff8278cfeb4,54440154,0,0x0,8
tick,0x7ff8278cfeb4,54455151,0,0x0,8
tick,0x7ff8278cfeb4,54479811,0,0x0,8
tick,0x7ff8278cfeb4,54485808,0,0x0,8
tick,0x7ff8278cfeb4,54501973,0,0x0,8
tick,0x7ff8278cfeb4,54517111,0,0x0,8
tick,0x7ff8278cfeb4,54541097,0,0x0,8
tick,0x7ff8278cfeb4,54549813,0,0x0,8
tick,0x7ff8278cfeb4,54565240,0,0x0,8
tick,0x7ff8278cfeb4,54581373,0,0x0,8
tick,0x7ff8278cfeb4,54597961,0,0x0,8
tick,0x7ff8278cfeb4,54614001,0,0x0,8
tick,0x7ff8278cfeb4,54629409,0,0x0,8
tick,0x7ff8278cfeb4,54648520,0,0x0,8
tick,0x7ff8278cfeb4,54663625,0,0x0,8
tick,0x7ff8278cfeb4,54675353,0,0x0,8
tick,0x7ff8278cfeb4,54692014,0,0x0,8
tick,0x7ff8278cfeb4,54706249,0,0x0,8
tick,0x7ff8278cfeb4,54725804,0,0x0,8
tick,0x7ff8278cfeb4,54736619,0,0x0,8
tick,0x7ff8278cfeb4,54756179,0,0x0,8
tick,0x7ff8278cfeb4,54768722,0,0x0,8
tick,0x7ff8278cfeb4,54784039,0,0x0,8
tick,0x7ff8278cfeb4,54799169,0,0x0,8
tick,0x7ff8278cfeb4,54816353,0,0x0,8
tick,0x7ff8278cfeb4,54831924,0,0x0,8
tick,0x7ff8278cfeb4,54847774,0,0x0,8
tick,0x7ff8278cfeb4,54863232,0,0x0,8
tick,0x7ff8278cfeb4,54880341,0,0x0,8
tick,0x7ff8278cfeb4,54892951,0,0x0,8
tick,0x7ff8278cfeb4,54910501,0,0x0,8
tick,0x7ff8278cfeb4,54925021,0,0x0,8
tick,0x7ff8278cfeb4,54941993,0,0x0,8
tick,0x7ff8278cfeb4,54959585,0,0x0,8
tick,0x7ff8278cfeb4,54973265,0,0x0,8
tick,0x7ff8278cfeb4,54987728,0,0x0,8
tick,0x7ff8278cfeb4,55003863,0,0x0,8
tick,0x7ff8278cfeb4,55018988,0,0x0,8
tick,0x7ff8278cfeb4,55033938,0,0x0,8
tick,0x7ff8278cfeb4,55049742,0,0x0,8
tick,0x7ff8278cfeb4,55064904,0,0x0,8
tick,0x7ff8278cfeb4,55080782,0,0x0,8
tick,0x7ff8278cfeb4,55096779,0,0x0,8
tick,0x7ff8278cfeb4,55113285,0,0x0,8
tick,0x7ff8278cfeb4,55131551,0,0x0,8
tick,0x7ff8278cfeb4,55142698,0,0x0,8
tick,0x7ff8278cfeb4,55159324,0,0x0,8
tick,0x7ff8278cfeb4,55174812,0,0x0,8
tick,0x7ff8278cfeb4,55191386,0,0x0,8
tick,0x7ff8278cfeb4,55206934,0,0x0,8
tick,0x7ff8278cfeb4,55222940,0,0x0,8
tick,0x7ff8278cfeb4,55237802,0,0x0,8
tick,0x7ff8278cfeb4,55254351,0,0x0,8
tick,0x7ff8278cfeb4,55268640,0,0x0,8
tick,0x7ff8278cfeb4,55283853,0,0x0,8
tick,0x7ff8278cfeb4,55298839,0,0x0,8
tick,0x7ff8278cfeb4,55314926,0,0x0,8
tick,0x7ff8278cfeb4,55331201,0,0x0,8
tick,0x7ff8278cfeb4,55347374,0,0x0,8
tick,0x7ff8278cfeb4,55362520,0,0x0,8
tick,0x7ff8278cfeb4,55376813,0,0x0,8
tick,0x7ff8278cfeb4,55392782,0,0x0,8
tick,0x7ff8278cfeb4,55410018,0,0x0,8
tick,0x7ff8278cfeb4,55424809,0,0x0,8
tick,0x7ff8278cfeb4,55440380,0,0x0,8
tick,0x7ff8278cfeb4,55454538,0,0x0,8
tick,0x7ff8278cfeb4,55470531,0,0x0,8
tick,0x7ff8278cfeb4,55487040,0,0x0,8
tick,0x7ff8278cfeb4,55505099,0,0x0,8
tick,0x7ff8278cfeb4,55518022,0,0x0,8
tick,0x7ff8278cfeb4,55532809,0,0x0,8
tick,0x7ff8278cfeb4,55548943,0,0x0,8
tick,0x7ff8278cfeb4,55565380,0,0x0,8
tick,0x7ff8278cfeb4,55582580,0,0x0,8
tick,0x7ff8278cfeb4,55596859,0,0x0,8
tick,0x7ff8278cfeb4,55610637,0,0x0,8
tick,0x7ff8278cfeb4,55627496,0,0x0,8
tick,0x7ff8278cfeb4,55642407,0,0x0,8
tick,0x7ff8278cfeb4,55656417,0,0x0,8
tick,0x7ff8278cfeb4,55673207,0,0x0,8
tick,0x7ff8278cfeb4,55689067,0,0x0,8
tick,0x7ff8278cfeb4,55705283,0,0x0,8
tick,0x7ff8278cfeb4,55719732,0,0x0,8
tick,0x7ff8278cfeb4,55734425,0,0x0,8
tick,0x7ff8278cfeb4,55756328,0,0x0,8
tick,0x7ff8278cfeb4,55766704,0,0x0,8
tick,0x7ff8278cfeb4,55782559,0,0x0,8
tick,0x7ff8278cfeb4,55797574,0,0x0,8
tick,0x7ff8278cfeb4,55815186,0,0x0,8
tick,0x7ff8278cfeb4,55830646,0,0x0,8
tick,0x7ff8278cfeb4,55847992,0,0x0,8
tick,0x7ff8278cfeb4,55864322,0,0x0,8
tick,0x7ff8278cfeb4,55882000,0,0x0,8
tick,0x7ff8278cfeb4,55899631,0,0x0,8
tick,0x7ff8278cfeb4,55905451,0,0x0,8
tick,0x7ff8278cfeb4,55922891,0,0x0,8
tick,0x7ff8278cfeb4,55936107,0,0x0,8
tick,0x7ff8278cfeb4,55951166,0,0x0,8
tick,0x7ff8278cfeb4,55967071,0,0x0,8
tick,0x7ff8278cfeb4,55983066,0,0x0,8
tick,0x7ff8278cfeb4,55998896,0,0x0,8
tick,0x7ff8278cfeb4,56015270,0,0x0,8
tick,0x7ff8278cfeb4,56028325,0,0x0,8
tick,0x7ff8278cfeb4,56043991,0,0x0,8
tick,0x7ff8278cfeb4,56068552,0,0x0,8
tick,0x7ff8278cfeb4,56074236,0,0x0,8
tick,0x7ff8278cfeb4,56089500,0,0x0,8
tick,0x7ff8278cfeb4,56106294,0,0x0,8
tick,0x7ff8278cfeb4,56122557,0,0x0,8
tick,0x7ff8278cfeb4,56141226,0,0x0,8
tick,0x7ff8278cfeb4,56158603,0,0x0,8
tick,0x7ff8278cfeb4,56167844,0,0x0,8
tick,0x7ff8278cfeb4,56183480,0,0x0,8
tick,0x7ff8278cfeb4,56197750,0,0x0,8
tick,0x7ff8278cfeb4,56214608,0,0x0,8
tick,0x7ff8278cfeb4,56231785,0,0x0,8
tick,0x7ff8278cfeb4,56248276,0,0x0,8
tick,0x7ff8278cfeb4,56265145,0,0x0,8
tick,0x7ff8278cfeb4,56285792,0,0x0,8
tick,0x7ff8278cfeb4,56289812,0,0x0,8
tick,0x7ff8278cfeb4,56304741,0,0x0,8
tick,0x7ff8278cfeb4,56320054,0,0x0,8
tick,0x7ff8278cfeb4,56335068,0,0x0,8
tick,0x7ff8278cfeb4,56351819,0,0x0,8
tick,0x7ff8278cfeb4,56366717,0,0x0,8
tick,0x7ff8278cfeb4,56382895,0,0x0,8
tick,0x7ff8278cfeb4,56398221,0,0x0,8
tick,0x7ff8278cfeb4,56414844,0,0x0,8
tick,0x7ff8278cfeb4,56429083,0,0x0,8
tick,0x7ff8278cfeb4,56447599,0,0x0,8
tick,0x7ff8278cfeb4,56460645,0,0x0,8
tick,0x7ff8278cfeb4,56476649,0,0x0,8
tick,0x7ff8278cfeb4,56492535,0,0x0,8
tick,0x7ff8278cfeb4,56508852,0,0x0,8
tick,0x7ff8278cfeb4,56525200,0,0x0,8
tick,0x7ff8278cfeb4,56539597,0,0x0,8
tick,0x7ff8278cfeb4,56555597,0,0x0,8
tick,0x7ff8278cfeb4,56571837,0,0x0,8
tick,0x7ff8278cfeb4,56587168,0,0x0,8
tick,0x7ff8278cfeb4,56601490,0,0x0,8
tick,0x7ff8278cfeb4,56616553,0,0x0,8
tick,0x7ff8278cfeb4,56631742,0,0x0,8
tick,0x7ff8278cfeb4,56648658,0,0x0,8
tick,0x7ff8278cfeb4,56663640,0,0x0,8
tick,0x7ff8278cfeb4,56679052,0,0x0,8
tick,0x7ff8278cfeb4,56694704,0,0x0,8
tick,0x7ff8278cfeb4,56708598,0,0x0,8
tick,0x7ff8278cfeb4,56723600,0,0x0,8
tick,0x7ff8278cfeb4,56739639,0,0x0,8
tick,0x7ff8278cfeb4,56755987,0,0x0,8
tick,0x7ff8278cfeb4,56770553,0,0x0,8
tick,0x7ff8278cfeb4,56787427,0,0x0,8
tick,0x7ff8278cfeb4,56803009,0,0x0,8
tick,0x7ff8278cfeb4,56817573,0,0x0,8
tick,0x7ff8278cfeb4,56832480,0,0x0,8
tick,0x7ff8278cfeb4,56848914,0,0x0,8
tick,0x7ff8278cfeb4,56865102,0,0x0,8
tick,0x7ff8278cfeb4,56881517,0,0x0,8
tick,0x7ff8278cfeb4,56895022,0,0x0,8
tick,0x7ff8278cfeb4,56912111,0,0x0,8
tick,0x7ff8278cfeb4,56927776,0,0x0,8
tick,0x7ff8278cfeb4,56943307,0,0x0,8
tick,0x7ff8278cfeb4,56959108,0,0x0,8
tick,0x7ff8278cfeb4,56974035,0,0x0,8
tick,0x7ff8278cfeb4,56988953,0,0x0,8
tick,0x7ff8278cfeb4,57005136,0,0x0,8
tick,0x7ff8278cfeb4,57022015,0,0x0,8
tick,0x7ff8278cfeb4,57036040,0,0x0,8
tick,0x7ff8278cfeb4,57051830,0,0x0,8
tick,0x7ff8278cfeb4,57067666,0,0x0,8
tick,0x7ff8278cfeb4,57083073,0,0x0,8
tick,0x7ff8278cfeb4,57098950,0,0x0,8
tick,0x7ff8278cfeb4,57114233,0,0x0,8
tick,0x7ff8278cfeb4,57132807,0,0x0,8
tick,0x7ff8278cfeb4,57144861,0,0x0,8
tick,0x7ff8278cfeb4,57160012,0,0x0,8
tick,0x7ff8278cfeb4,57176277,0,0x0,8
tick,0x7ff8278cfeb4,57192318,0,0x0,8
tick,0x7ff8278cfeb4,57208084,0,0x0,8
tick,0x7ff8278cfeb4,57226884,0,0x0,8
tick,0x7ff8278cfeb4,57237678,0,0x0,8
tick,0x7ff8278cfeb4,57256625,0,0x0,8
tick,0x7ff8278cfeb4,57268074,0,0x0,8
tick,0x7ff8278cfeb4,57287091,0,0x0,8
tick,0x7ff8278cfeb4,57301212,0,0x0,8
tick,0x7ff8278cfeb4,57315662,0,0x0,8
tick,0x7ff8278cfeb4,57332878,0,0x0,8
tick,0x7ff8278cfeb4,57345069,0,0x0,8
tick,0x7ff8278cfeb4,57361883,0,0x0,8
tick,0x7ff8278cfeb4,57377830,0,0x0,8
tick,0x7ff8278cfeb4,57394168,0,0x0,8
tick,0x7ff8278cfeb4,57412746,0,0x0,8
tick,0x7ff8278cfeb4,57426936,0,0x0,8
tick,0x7ff8278cfeb4,57441278,0,0x0,8
tick,0x7ff8278cfeb4,57456840,0,0x0,8
tick,0x7ff8278cfeb4,57473112,0,0x0,8
tick,0x7ff8278cfeb4,57490355,0,0x0,8
tick,0x7ff8278cfeb4,57503712,0,0x0,8
tick,0x7ff8278cfeb4,57518995,0,0x0,8
tick,0x7ff8278cfeb4,57534824,0,0x0,8
tick,0x7ff8278cfeb4,57551653,0,0x0,8
tick,0x7ff8278cfeb4,57566654,0,0x0,8
tick,0x7ff8278cfeb4,57581830,0,0x0,8
tick,0x7ff8278cfeb4,57599031,0,0x0,8
tick,0x7ff8278cfeb4,57622894,0,0x0,8
tick,0x7ff8278cfeb4,57628615,0,0x0,8
tick,0x7ff8278cfeb4,57643744,0,0x0,8
tick,0x7ff8278cfeb4,57660025,0,0x0,8
tick,0x7ff8278cfeb4,57674757,0,0x0,8
tick,0x7ff8278cfeb4,57689632,0,0x0,8
tick,0x7ff8278cfeb4,57704831,0,0x0,8
tick,0x7ff8278cfeb4,57721141,0,0x0,8
tick,0x7ff8278cfeb4,57737184,0,0x0,8
tick,0x7ff8278cfeb4,57752507,0,0x0,8
tick,0x7ff8278cfeb4,57769944,0,0x0,8
tick,0x7ff8278cfeb4,57783759,0,0x0,8
tick,0x7ff8278cfeb4,57796417,0,0x0,8
tick,0x7ff8278cfeb4,57816468,0,0x0,8
tick,0x7ff8278cfeb4,57827560,0,0x0,8
tick,0x7ff8278cfeb4,57843378,0,0x0,8
tick,0x7ff8278cfeb4,57859454,0,0x0,8
tick,0x7ff8278cfeb4,57873581,0,0x0,8
tick,0x7ff8278cfeb4,57888815,0,0x0,8
tick,0x7ff8278cfeb4,57905008,0,0x0,8
tick,0x7ff8278cfeb4,57919984,0,0x0,8
tick,0x7ff8278cfeb4,57935932,0,0x0,8
tick,0x7ff8278cfeb4,57949675,0,0x0,8
tick,0x7ff8278cfeb4,57966062,0,0x0,8
tick,0x7ff8278cfeb4,57983137,0,0x0,8
tick,0x7ff8278cfeb4,57997772,0,0x0,8
tick,0x7ff8278cfeb4,58013186,0,0x0,8
tick,0x7ff8278cfeb4,58028092,0,0x0,8
tick,0x7ff8278cfeb4,58043683,0,0x0,8
tick,0x7ff8278cfeb4,58059377,0,0x0,8
tick,0x7ff8278cfeb4,58074219,0,0x0,8
tick,0x7ff8278cfeb4,58089066,0,0x0,8
tick,0x7ff8278cfeb4,58104947,0,0x0,8
tick,0x7ff8278cfeb4,58121815,0,0x0,8
tick,0x7ff8278cfeb4,58136947,0,0x0,8
tick,0x7ff8278cfeb4,58151951,0,0x0,8
tick,0x7ff8278cfeb4,58167026,0,0x0,8
tick,0x7ff8278cfeb4,58183408,0,0x0,8
tick,0x7ff8278cfeb4,58199907,0,0x0,8
tick,0x7ff8278cfeb4,58213031,0,0x0,8
tick,0x7ff8278cfeb4,58229619,0,0x0,8
tick,0x7ff8278cfeb4,58244162,0,0x0,8
tick,0x7ff8278cfeb4,58259058,0,0x0,8
tick,0x7ff8278cfeb4,58274678,0,0x0,8
tick,0x7ff8278cfeb4,58289499,0,0x0,8
tick,0x7ff8278cfeb4,58304946,0,0x0,8
tick,0x7ff8278cfeb4,58321273,0,0x0,8
tick,0x7ff8278cfeb4,58336505,0,0x0,8
tick,0x7ff8278cfeb4,58351306,0,0x0,8
tick,0x7ff8278cfeb4,58366897,0,0x0,8
tick,0x7ff8278cfeb4,58383625,0,0x0,8
tick,0x7ff8278cfeb4,58396899,0,0x0,8
tick,0x7ff8278cfeb4,58412463,0,0x0,8
tick,0x7ff8278cfeb4,58428652,0,0x0,8
tick,0x7ff8278cfeb4,58442889,0,0x0,8
tick,0x7ff8278cfeb4,58458917,0,0x0,8
tick,0x7ff8278cfeb4,58474968,0,0x0,8
tick,0x7ff8278cfeb4,58489940,0,0x0,8
tick,0x7ff8278cfeb4,58505219,0,0x0,8
tick,0x7ff8278cfeb4,58522291,0,0x0,8
tick,0x7ff8278cfeb4,58536951,0,0x0,8
tick,0x7ff8278cfeb4,58552862,0,0x0,8
tick,0x7ff8278cfeb4,58568148,0,0x0,8
tick,0x7ff8278cfeb4,58587052,0,0x0,8
tick,0x7ff8278cfeb4,58602125,0,0x0,8
tick,0x7ff8278cfeb4,58615472,0,0x0,8
tick,0x7ff8278cfeb4,58628758,0,0x0,8
tick,0x7ff8278cfeb4,58644756,0,0x0,8
tick,0x7ff8278cfeb4,58667703,0,0x0,8
tick,0x7ff8278cfeb4,58675818,0,0x0,8
tick,0x7ff8278cfeb4,58691355,0,0x0,8
tick,0x7ff8278cfeb4,58706289,0,0x0,8
tick,0x7ff8278cfeb4,58719956,0,0x0,8
tick,0x7ff8278cfeb4,58737591,0,0x0,8
tick,0x7ff8278cfeb4,58751622,0,0x0,8
tick,0x7ff8278cfeb4,58767672,0,0x0,8
tick,0x7ff8278cfeb4,58784425,0,0x0,8
tick,0x7ff8278cfeb4,58806335,0,0x0,8
tick,0x7ff8278cfeb4,58812962,0,0x0,8
tick,0x7ff8278cfeb4,58845940,0,0x0,8
tick,0x7ff8278cfeb4,58872741,0,0x0,8
tick,0x7ff8278cfeb4,58902957,0,0x0,8
tick,0x7ff8278cfeb4,58920954,0,0x0,8
tick,0x7ff8278cfeb4,58934495,0,0x0,8
tick,0x7ff8278cfeb4,58957889,0,0x0,8
tick,0x7ff8278cfeb4,58967226,0,0x0,8
tick,0x7ff8278cfeb4,58989321,0,0x0,8
tick,0x7ff8278cfeb4,58998933,0,0x0,8
tick,0x7ff8278cfeb4,59029763,0,0x0,8
tick,0x7ff8278cfeb4,59046100,0,0x0,8
tick,0x7ff8278cfeb4,59087258,0,0x0,8
tick,0x7ff8278cfeb4,59090549,0,0x0,8
tick,0x7ff8278cfeb4,59107607,0,0x0,8
tick,0x7ff8278cfeb4,59129375,0,0x0,8
tick,0x7ff8278cfeb4,59160611,0,0x0,8
tick,0x7ff8278cfeb4,59169687,0,0x0,8
tick,0x7ff8278cfeb4,59209039,0,0x0,8
tick,0x7ff8278cfeb4,59233561,0,0x0,8
tick,0x7ff8278cfeb4,59252643,0,0x0,8
tick,0x7ff8278cfeb4,59264498,0,0x0,8
tick,0x7ff8278cfeb4,59278958,0,0x0,8
tick,0x7ff8278cfeb4,59317625,0,0x0,8
tick,0x7ff8278cfeb4,59340854,0,0x0,8
tick,0x7ff8278cfeb4,59355993,0,0x0,8
tick,0x7ff8278cfeb4,59372151,0,0x0,8
tick,0x7ff8278cfeb4,59390727,0,0x0,8
tick,0x7ff8278cfeb4,59400697,0,0x0,8
tick,0x7ff8278cfeb4,59430914,0,0x0,8
tick,0x7ff8278cfeb4,59445039,0,0x0,8
tick,0x7ff8278cfeb4,59462725,0,0x0,8
tick,0x7ff8278cfeb4,59487877,0,0x0,8
tick,0x7ff8278cfeb4,59507037,0,0x0,8
tick,0x7ff8278cfeb4,59526042,0,0x0,8
tick,0x7ff8278cfeb4,59535333,0,0x0,8
tick,0x7ff8278cfeb4,59551834,0,0x0,8
tick,0x7ff8278cfeb4,59564627,0,0x0,8
tick,0x7ff8278cfeb4,59583196,0,0x0,8
tick,0x7ff8278cfeb4,59596445,0,0x0,8
tick,0x7ff8278cfeb4,59613013,0,0x0,8
tick,0x7ff8278cfeb4,59626816,0,0x0,8
tick,0x7ff8278cfeb4,59643658,0,0x0,8
tick,0x7ff8278cfeb4,59661002,0,0x0,8
tick,0x7ff8278cfeb4,59672741,0,0x0,8
tick,0x7ff8278cfeb4,59691629,0,0x0,8
tick,0x7ff8278cfeb4,59705328,0,0x0,8
tick,0x7ff8278cfeb4,59725808,0,0x0,8
tick,0x7ff8278cfeb4,59737440,0,0x0,8
tick,0x7ff8278cfeb4,59756959,0,0x0,8
tick,0x7ff8278cfeb4,59764229,0,0x0,8
tick,0x7ff8278cfeb4,59790607,0,0x0,8
tick,0x7ff8278cfeb4,59792518,0,0x0,8
tick,0x7ff8278cfeb4,59818239,0,0x0,8
tick,0x7ff8278cfeb4,59827782,0,0x0,8
tick,0x7ff8278cfeb4,59847521,0,0x0,8
tick,0x7ff8278cfeb4,59854426,0,0x0,8
tick,0x7ff8278cfeb4,59869828,0,0x0,8
tick,0x7ff8278cfeb4,59889241,0,0x0,8
tick,0x7ff8278cfeb4,59907524,0,0x0,8
tick,0x7ff8278cfeb4,59923201,0,0x0,8
tick,0x7ff8278cfeb4,59931011,0,0x0,8
tick,0x7ff8278cfeb4,59945548,0,0x0,8
tick,0x7ff8278cfeb4,59970449,0,0x0,8
tick,0x7ff8278cfeb4,59976758,0,0x0,8
tick,0x7ff8278cfeb4,59993325,0,0x0,8
tick,0x7ff8278cfeb4,60007522,0,0x0,8
tick,0x7ff8278cfeb4,60024499,0,0x0,8
tick,0x7ff8278cfeb4,60039987,0,0x0,8
tick,0x7ff8278cfeb4,60056049,0,0x0,8
tick,0x7ff8278cfeb4,60070912,0,0x0,8
tick,0x7ff8278cfeb4,60086013,0,0x0,8
tick,0x7ff8278cfeb4,60102255,0,0x0,8
tick,0x7ff8278cfeb4,60118326,0,0x0,8
tick,0x7ff8278cfeb4,60139315,0,0x0,8
tick,0x7ff8278cfeb4,60147659,0,0x0,8
tick,0x7ff8278cfeb4,60163349,0,0x0,8
tick,0x7ff8278cfeb4,60180620,0,0x0,8
tick,0x7ff8278cfeb4,60193129,0,0x0,8
tick,0x7ff8278cfeb4,60209615,0,0x0,8
tick,0x7ff8278cfeb4,60226678,0,0x0,8
tick,0x7ff8278cfeb4,60241264,0,0x0,8
tick,0x7ff8278cfeb4,60257417,0,0x0,8
tick,0x7ff8278cfeb4,60272669,0,0x0,8
tick,0x7ff8278cfeb4,60289044,0,0x0,8
tick,0x7ff8278cfeb4,60304469,0,0x0,8
tick,0x7ff8278cfeb4,60318614,0,0x0,8
tick,0x7ff8278cfeb4,60341950,0,0x0,8
tick,0x7ff8278cfeb4,60348995,0,0x0,8
tick,0x7ff8278cfeb4,60369130,0,0x0,8
tick,0x7ff8278cfeb4,60381861,0,0x0,8
tick,0x7ff8278cfeb4,60396228,0,0x0,8
tick,0x7ff8278cfeb4,60412480,0,0x0,8
tick,0x7ff8278cfeb4,60426787,0,0x0,8
tick,0x7ff8278cfeb4,60443237,0,0x0,8
tick,0x7ff8278cfeb4,60460904,0,0x0,8
tick,0x7ff8278cfeb4,60473900,0,0x0,8
tick,0x7ff8278cfeb4,60492575,0,0x0,8
tick,0x7ff8278cfeb4,60504635,0,0x0,8
tick,0x7ff8278cfeb4,60519562,0,0x0,8
tick,0x7ff8278cfeb4,60537021,0,0x0,8
tick,0x7ff8278cfeb4,60552634,0,0x0,8
tick,0x7ff8278cfeb4,60564712,0,0x0,8
tick,0x7ff8278cfeb4,60579662,0,0x0,8
tick,0x7ff8278cfeb4,60598435,0,0x0,8
tick,0x7ff8278cfeb4,60614213,0,0x0,8
tick,0x7ff8278cfeb4,60625814,0,0x0,8
tick,0x7ff8278cfeb4,60644970,0,0x0,8
tick,0x7ff8278cfeb4,60671440,0,0x0,8
tick,0x7ff8278cfeb4,60687858,0,0x0,8
tick,0x7ff8278cfeb4,60705325,0,0x0,8
tick,0x7ff8278cfeb4,60719236,0,0x0,8
tick,0x7ff8278cfeb4,60736020,0,0x0,8
tick,0x7ff8278cfeb4,60748039,0,0x0,8
tick,0x7ff8278cfeb4,60762815,0,0x0,8
tick,0x7ff8278cfeb4,60777637,0,0x0,8
tick,0x7ff8278cfeb4,60793494,0,0x0,8
tick,0x7ff8278cfeb4,60811883,0,0x0,8
tick,0x7ff8278cfeb4,60824421,0,0x0,8
tick,0x7ff8278cfeb4,60840456,0,0x0,8
tick,0x7ff8278cfeb4,60855843,0,0x0,8
tick,0x7ff8278cfeb4,60871714,0,0x0,8
tick,0x7ff8278cfeb4,60888150,0,0x0,8
tick,0x7ff8278cfeb4,60908565,0,0x0,8
tick,0x7ff8278cfeb4,60927311,0,0x0,8
tick,0x7ff8278cfeb4,60942912,0,0x0,8
tick,0x7ff8278cfeb4,60971474,0,0x0,8
tick,0x7ff8278cfeb4,60980489,0,0x0,8
tick,0x7ff8278cfeb4,61005728,0,0x0,8
tick,0x7ff8278cfeb4,61015500,0,0x0,8
tick,0x7ff8278cfeb4,61035298,0,0x0,8
tick,0x7ff8278cfeb4,61042368,0,0x0,8
tick,0x7ff8278cfeb4,61060078,0,0x0,8
tick,0x7ff8278cfeb4,61073586,0,0x0,8
tick,0x7ff8278cfeb4,61088106,0,0x0,8
tick,0x7ff8278cfeb4,61103238,0,0x0,8
tick,0x7ff8278cfeb4,61118676,0,0x0,8
tick,0x7ff8278cfeb4,61135148,0,0x0,8
tick,0x7ff8278cfeb4,61152317,0,0x0,8
tick,0x7ff8278cfeb4,61167876,0,0x0,8
tick,0x7ff8278cfeb4,61182660,0,0x0,8
tick,0x7ff8278cfeb4,61197984,0,0x0,8
tick,0x7ff8278cfeb4,61212916,0,0x0,8
tick,0x7ff8278cfeb4,61229120,0,0x0,8
tick,0x7ff8278cfeb4,61243824,0,0x0,8
tick,0x7ff8278cfeb4,61258763,0,0x0,8
tick,0x7ff8278cfeb4,61273696,0,0x0,8
tick,0x7ff8278cfeb4,61289771,0,0x0,8
tick,0x7ff8278cfeb4,61303930,0,0x0,8
tick,0x7ff8278cfeb4,61321162,0,0x0,8
tick,0x7ff8278cfeb4,61336187,0,0x0,8
tick,0x7ff8278cfeb4,61353814,0,0x0,8
tick,0x7ff8278cfeb4,61367937,0,0x0,8
tick,0x7ff8278cfeb4,61382870,0,0x0,8
tick,0x7ff8278cfeb4,61397563,0,0x0,8
tick,0x7ff8278cfeb4,61414083,0,0x0,8
tick,0x7ff8278cfeb4,61429878,0,0x0,8
tick,0x7ff8278cfeb4,61446487,0,0x0,8
tick,0x7ff8278cfeb4,61462037,0,0x0,8
tick,0x7ff8278cfeb4,61478223,0,0x0,8
tick,0x7ff8278cfeb4,61493561,0,0x0,8
tick,0x7ff8278cfeb4,61509520,0,0x0,8
tick,0x7ff8278cfeb4,61527068,0,0x0,8
tick,0x7ff8278cfeb4,61541876,0,0x0,8
tick,0x7ff8278cfeb4,61555467,0,0x0,8
tick,0x7ff8278cfeb4,61571855,0,0x0,8
tick,0x7ff8278cfeb4,61587385,0,0x0,8
tick,0x7ff8278cfeb4,61603693,0,0x0,8
tick,0x7ff8278cfeb4,61619126,0,0x0,8
tick,0x7ff8278cfeb4,61635682,0,0x0,8
tick,0x7ff8278cfeb4,61649251,0,0x0,8
tick,0x7ff8278cfeb4,61665945,0,0x0,8
tick,0x7ff8278cfeb4,61681490,0,0x0,8
tick,0x7ff8278cfeb4,61696735,0,0x0,8
tick,0x7ff8278cfeb4,61711527,0,0x0,8
tick,0x7ff8278cfeb4,61726349,0,0x0,8
tick,0x7ff8278cfeb4,61742385,0,0x0,8
tick,0x7ff8278cfeb4,61757340,0,0x0,8
tick,0x7ff8278cfeb4,61773304,0,0x0,8
tick,0x7ff8278cfeb4,61788732,0,0x0,8
tick,0x7ff8278cfeb4,61803426,0,0x0,8
tick,0x7ff8278cfeb4,61825587,0,0x0,8
tick,0x7ff8278cfeb4,61833680,0,0x0,8
tick,0x7ff8278cfeb4,61848804,0,0x0,8
tick,0x7ff8278cfeb4,61864755,0,0x0,8
tick,0x7ff8278cfeb4,61879560,0,0x0,8
tick,0x7ff8278cfeb4,61894887,0,0x0,8
tick,0x7ff8278cfeb4,61912574,0,0x0,8
tick,0x7ff8278cfeb4,61925906,0,0x0,8
tick,0x7ff8278cfeb4,61940667,0,0x0,8
tick,0x7ff8278cfeb4,61956355,0,0x0,8
tick,0x7ff8278cfeb4,61973415,0,0x0,8
tick,0x7ff8278cfeb4,61988789,0,0x0,8
tick,0x7ff8278cfeb4,62004727,0,0x0,8
tick,0x7ff8278cfeb4,62019346,0,0x0,8
tick,0x7ff8278cfeb4,62038681,0,0x0,8
tick,0x7ff8278cfeb4,62054272,0,0x0,8
tick,0x7ff8278cfeb4,62067004,0,0x0,8
tick,0x7ff8278cfeb4,62082443,0,0x0,8
tick,0x7ff8278cfeb4,62099196,0,0x0,8
tick,0x7ff8278cfeb4,62113602,0,0x0,8
tick,0x7ff8278cfeb4,62128646,0,0x0,8
tick,0x7ff8278cfeb4,62144683,0,0x0,8
tick,0x7ff8278cfeb4,62161992,0,0x0,8
tick,0x7ff8278cfeb4,62176632,0,0x0,8
tick,0x7ff8278cfeb4,62190532,0,0x0,8
tick,0x7ff8278cfeb4,62206568,0,0x0,8
tick,0x7ff8278cfeb4,62223592,0,0x0,8
tick,0x7ff8278cfeb4,62238591,0,0x0,8
tick,0x7ff8278cfeb4,62254750,0,0x0,8
tick,0x7ff8278cfeb4,62271405,0,0x0,8
tick,0x7ff8278cfeb4,62287640,0,0x0,8
tick,0x7ff8278cfeb4,62306565,0,0x0,8
tick,0x7ff8278cfeb4,62322111,0,0x0,8
tick,0x7ff8278cfeb4,62335414,0,0x0,8
tick,0x7ff8278cfeb4,62352978,0,0x0,8
tick,0x7ff8278cfeb4,62366619,0,0x0,8
tick,0x7ff8278cfeb4,62382739,0,0x0,8
tick,0x7ff8278cfeb4,62404027,0,0x0,8
tick,0x7ff8278cfeb4,62413474,0,0x0,8
tick,0x7ff8278cfeb4,62429385,0,0x0,8
tick,0x7ff8278cfeb4,62444460,0,0x0,8
tick,0x7ff8278cfeb4,62460640,0,0x0,8
tick,0x7ff8278cfeb4,62476645,0,0x0,8
tick,0x7ff8278cfeb4,62492427,0,0x0,8
tick,0x7ff8278cfeb4,62506455,0,0x0,8
tick,0x7ff8278cfeb4,62521876,0,0x0,8
tick,0x7ff8278cfeb4,62536769,0,0x0,8
tick,0x7ff8278cfeb4,62552487,0,0x0,8
tick,0x7ff8278cfeb4,62567168,0,0x0,8
tick,0x7ff8278cfeb4,62582216,0,0x0,8
tick,0x7ff8278cfeb4,62598225,0,0x0,8
tick,0x7ff8278cfeb4,62613080,0,0x0,8
tick,0x7ff8278cfeb4,62628201,0,0x0,8
tick,0x7ff8278cfeb4,62644327,0,0x0,8
tick,0x7ff8278cfeb4,62659524,0,0x0,8
tick,0x7ff8278cfeb4,62674360,0,0x0,8
tick,0x7ff8278cfeb4,62689122,0,0x0,8
tick,0x7ff8278cfeb4,62704466,0,0x0,8
tick,0x7ff8278cfeb4,62722124,0,0x0,8
tick,0x7ff8278cfeb4,62736674,0,0x0,8
tick,0x7ff8278cfeb4,62754816,0,0x0,8
tick,0x7ff8278cfeb4,62766039,0,0x0,8
tick,0x7ff8278cfeb4,62782462,0,0x0,8
tick,0x7ff8278cfeb4,62797488,0,0x0,8
tick,0x7ff8278cfeb4,62812358,0,0x0,8
tick,0x7ff8278cfeb4,62827804,0,0x0,8
tick,0x7ff8278cfeb4,62842105,0,0x0,8
tick,0x7ff8278cfeb4,62857955,0,0x0,8
tick,0x7ff8278cfeb4,62872977,0,0x0,8
tick,0x7ff8278cfeb4,62889209,0,0x0,8
tick,0x7ff8278cfeb4,62904538,0,0x0,8
tick,0x7ff8278cfeb4,62922667,0,0x0,8
tick,0x7ff8278cfeb4,62938439,0,0x0,8
tick,0x7ff8278cfeb4,62950037,0,0x0,8
tick,0x7ff8278cfeb4,62964955,0,0x0,8
tick,0x7ff8278cfeb4,62981994,0,0x0,8
tick,0x7ff8278cfeb4,62997715,0,0x0,8
tick,0x7ff8278cfeb4,63012923,0,0x0,8
tick,0x7ff8278cfeb4,63028106,0,0x0,8
tick,0x7ff8278cfeb4,63042867,0,0x0,8
tick,0x7ff8278cfeb4,63058914,0,0x0,8
tick,0x7ff8278cfeb4,63075167,0,0x0,8
tick,0x7ff8278cfeb4,63090334,0,0x0,8
tick,0x7ff8278cfeb4,63105095,0,0x0,8
tick,0x7ff8278cfeb4,63119815,0,0x0,8
tick,0x7ff8278cfeb4,63138009,0,0x0,8
tick,0x7ff8278cfeb4,63153231,0,0x0,8
tick,0x7ff8278cfeb4,63167928,0,0x0,8
tick,0x7ff8278cfeb4,63183174,0,0x0,8
tick,0x7ff8278cfeb4,63198023,0,0x0,8
tick,0x7ff8278cfeb4,63213838,0,0x0,8
tick,0x7ff8278cfeb4,63228682,0,0x0,8
tick,0x7ff8278cfeb4,63243788,0,0x0,8
tick,0x7ff8278cfeb4,63260070,0,0x0,8
tick,0x7ff8278cfeb4,63275753,0,0x0,8
tick,0x7ff8278cfeb4,63291913,0,0x0,8
tick,0x7ff8278cfeb4,63307777,0,0x0,8
tick,0x7ff8278cfeb4,63324376,0,0x0,8
tick,0x7ff8278cfeb4,63339370,0,0x0,8
tick,0x7ff8278cfeb4,63353777,0,0x0,8
tick,0x7ff8278cfeb4,63369775,0,0x0,8
tick,0x7ff8278cfeb4,63386141,0,0x0,8
tick,0x7ff8278cfeb4,63401994,0,0x0,8
tick,0x7ff8278cfeb4,63416793,0,0x0,8
tick,0x7ff8278cfeb4,63431982,0,0x0,8
tick,0x7ff8278cfeb4,63447898,0,0x0,8
tick,0x7ff8278cfeb4,63464020,0,0x0,8
tick,0x7ff8278cfeb4,63481771,0,0x0,8
tick,0x7ff8278cfeb4,63496291,0,0x0,8
tick,0x7ff8278cfeb4,63513421,0,0x0,8
tick,0x7ff8278cfeb4,63527674,0,0x0,8
tick,0x7ff8278cfeb4,63542714,0,0x0,8
tick,0x7ff8278cfeb4,63558594,0,0x0,8
tick,0x7ff8278cfeb4,63573920,0,0x0,8
tick,0x7ff8278cfeb4,63589206,0,0x0,8
tick,0x7ff8278cfeb4,63604473,0,0x0,8
tick,0x7ff8278cfeb4,63621785,0,0x0,8
tick,0x7ff8278cfeb4,63635654,0,0x0,8
tick,0x7ff8278cfeb4,63650850,0,0x0,8
tick,0x7ff8278cfeb4,63666155,0,0x0,8
tick,0x7ff8278cfeb4,63684872,0,0x0,8
tick,0x7ff8278cfeb4,63706602,0,0x0,8
tick,0x7ff8278cfeb4,63728487,0,0x0,8
tick,0x7ff8278cfeb4,63743533,0,0x0,8
tick,0x7ff8278cfeb4,63758429,0,0x0,8
tick,0x7ff8278cfeb4,63773915,0,0x0,8
tick,0x7ff8278cfeb4,63790062,0,0x0,8
tick,0x7ff8278cfeb4,63805788,0,0x0,8
tick,0x7ff8278cfeb4,63823834,0,0x0,8
tick,0x7ff8278cfeb4,63834895,0,0x0,8
tick,0x7ff8278cfeb4,63849476,0,0x0,8
tick,0x7ff8278cfeb4,63865599,0,0x0,8
tick,0x7ff8278cfeb4,63880300,0,0x0,8
tick,0x7ff8278cfeb4,63896487,0,0x0,8
tick,0x7ff8278cfeb4,63912663,0,0x0,8
tick,0x7ff8278cfeb4,63927471,0,0x0,8
tick,0x7ff8278cfeb4,63942767,0,0x0,8
tick,0x7ff8278cfeb4,63958413,0,0x0,8
tick,0x7ff8278cfeb4,63974352,0,0x0,8
tick,0x7ff8278cfeb4,63991626,0,0x0,8
tick,0x7ff8278cfeb4,64006783,0,0x0,8
tick,0x7ff8278cfeb4,64023200,0,0x0,8
tick,0x7ff8278cfeb4,64037105,0,0x0,8
tick,0x7ff8278cfeb4,64052776,0,0x0,8
tick,0x7ff8278cfeb4,64068565,0,0x0,8
tick,0x7ff8278cfeb4,64084702,0,0x0,8
tick,0x7ff8278cfeb4,64101131,0,0x0,8
tick,0x7ff8278cfeb4,64115505,0,0x0,8
tick,0x7ff8278cfeb4,64130555,0,0x0,8
tick,0x7ff8278cfeb4,64146661,0,0x0,8
tick,0x7ff8278cfeb4,64162505,0,0x0,8
tick,0x7ff8278cfeb4,64178718,0,0x0,8
tick,0x7ff8278cfeb4,64195277,0,0x0,8
tick,0x7ff8278cfeb4,64210281,0,0x0,8
tick,0x7ff8278cfeb4,64225115,0,0x0,8
tick,0x7ff8278cfeb4,64241295,0,0x0,8
tick,0x7ff8278cfeb4,64256938,0,0x0,8
tick,0x7ff8278cfeb4,64272942,0,0x0,8
tick,0x7ff8278cfeb4,64287376,0,0x0,8
tick,0x7ff8278cfeb4,64302344,0,0x0,8
tick,0x7ff8278cfeb4,64318474,0,0x0,8
tick,0x7ff8278cfeb4,64334301,0,0x0,8
tick,0x7ff8278cfeb4,64349300,0,0x0,8
tick,0x7ff8278cfeb4,64364142,0,0x0,8
tick,0x7ff8278cfeb4,64380168,0,0x0,8
tick,0x7ff8278cfeb4,64396087,0,0x0,8
tick,0x7ff8278cfeb4,64412284,0,0x0,8
tick,0x7ff8278cfeb4,64426418,0,0x0,8
tick,0x7ff8278cfeb4,64442479,0,0x0,8
tick,0x7ff8278cfeb4,64458120,0,0x0,8
tick,0x7ff8278cfeb4,64474189,0,0x0,8
tick,0x7ff8278cfeb4,64490137,0,0x0,8
tick,0x7ff8278cfeb4,64506311,0,0x0,8
tick,0x7ff8278cfeb4,64520029,0,0x0,8
tick,0x7ff8278cfeb4,64535344,0,0x0,8
tick,0x7ff8278cfeb4,64549963,0,0x0,8
tick,0x7ff8278cfeb4,64566265,0,0x0,8
tick,0x7ff8278cfeb4,64582217,0,0x0,8
tick,0x7ff8278cfeb4,64597348,0,0x0,8
tick,0x7ff8278cfeb4,64613062,0,0x0,8
tick,0x7ff8278cfeb4,64627896,0,0x0,8
tick,0x7ff8278cfeb4,64644002,0,0x0,8
tick,0x7ff8278cfeb4,64659882,0,0x0,8
tick,0x7ff8278cfeb4,64675902,0,0x0,8
tick,0x7ff8278cfeb4,64692140,0,0x0,8
tick,0x7ff8278cfeb4,64707118,0,0x0,8
tick,0x7ff8278cfeb4,64724134,0,0x0,8
tick,0x7ff8278cfeb4,64738188,0,0x0,8
tick,0x7ff8278cfeb4,64752853,0,0x0,8
tick,0x7ff8278cfeb4,64767894,0,0x0,8
tick,0x7ff8278cfeb4,64782850,0,0x0,8
tick,0x7ff8278cfeb4,64797924,0,0x0,8
tick,0x7ff8278cfeb4,64813964,0,0x0,8
tick,0x7ff8278cfeb4,64828847,0,0x0,8
tick,0x7ff8278cfeb4,64844446,0,0x0,8
tick,0x7ff8278cfeb4,64860163,0,0x0,8
tick,0x7ff8278cfeb4,64874885,0,0x0,8
tick,0x7ff8278cfeb4,64890489,0,0x0,8
tick,0x7ff8278cfeb4,64907263,0,0x0,8
tick,0x7ff8278cfeb4,64925914,0,0x0,8
tick,0x7ff8278cfeb4,64941473,0,0x0,8
tick,0x7ff8278cfeb4,64960287,0,0x0,8
tick,0x7ff8278cfeb4,64977393,0,0x0,8
tick,0x7ff8278cfeb4,64982916,0,0x0,8
tick,0x7ff8278cfeb4,64998585,0,0x0,8
tick,0x7ff8278cfeb4,65013956,0,0x0,8
tick,0x7ff8278cfeb4,65028782,0,0x0,8
tick,0x7ff8278cfeb4,65044699,0,0x0,8
tick,0x7ff8278cfeb4,65059564,0,0x0,8
tick,0x7ff8278cfeb4,65075748,0,0x0,8
tick,0x7ff8278cfeb4,65092512,0,0x0,8
tick,0x7ff8278cfeb4,65107004,0,0x0,8
tick,0x7ff8278cfeb4,65124106,0,0x0,8
tick,0x7ff8278cfeb4,65140527,0,0x0,8
tick,0x7ff8278cfeb4,65153667,0,0x0,8
tick,0x7ff8278cfeb4,65170045,0,0x0,8
tick,0x7ff8278cfeb4,65184901,0,0x0,8
tick,0x7ff8278cfeb4,65200477,0,0x0,8
tick,0x7ff8278cfeb4,65215600,0,0x0,8
tick,0x7ff8278cfeb4,65232276,0,0x0,8
tick,0x7ff8278cfeb4,65247895,0,0x0,8
tick,0x7ff8278cfeb4,65263657,0,0x0,8
tick,0x7ff8278cfeb4,65280132,0,0x0,8
tick,0x7ff8278cfeb4,65295522,0,0x0,8
tick,0x7ff8278cfeb4,65312271,0,0x0,8
tick,0x7ff8278cfeb4,65327587,0,0x0,8
tick,0x7ff8278cfeb4,65343671,0,0x0,8
tick,0x7ff8278cfeb4,65358618,0,0x0,8
tick,0x7ff8278cfeb4,65374317,0,0x0,8
tick,0x7ff8278cfeb4,65388614,0,0x0,8
tick,0x7ff8278cfeb4,65404948,0,0x0,8
tick,0x7ff8278cfeb4,65420017,0,0x0,8
tick,0x7ff8278cfeb4,65436062,0,0x0,8
tick,0x7ff8278cfeb4,65451968,0,0x0,8
tick,0x7ff8278cfeb4,65467858,0,0x0,8
tick,0x7ff8278cfeb4,65482858,0,0x0,8
tick,0x7ff8278cfeb4,65497846,0,0x0,8
tick,0x7ff8278cfeb4,65513129,0,0x0,8
tick,0x7ff8278cfeb4,65527853,0,0x0,8
tick,0x7ff8278cfeb4,65543845,0,0x0,8
tick,0x7ff8278cfeb4,65560383,0,0x0,8
tick,0x7ff8278cfeb4,65575048,0,0x0,8
tick,0x7ff8278cfeb4,65590095,0,0x0,8
tick,0x7ff8278cfeb4,65606380,0,0x0,8
tick,0x7ff8278cfeb4,65623290,0,0x0,8
tick,0x7ff8278cfeb4,65637083,0,0x0,8
tick,0x7ff8278cfeb4,65652871,0,0x0,8
tick,0x7ff8278cfeb4,65667830,0,0x0,8
tick,0x7ff8278cfeb4,65683774,0,0x0,8
tick,0x7ff8278cfeb4,65699985,0,0x0,8
tick,0x7ff8278cfeb4,65715718,0,0x0,8
tick,0x7ff8278cfeb4,65731801,0,0x0,8
tick,0x7ff8278cfeb4,65747651,0,0x0,8
tick,0x7ff8278cfeb4,65764122,0,0x0,8
tick,0x7ff8278cfeb4,65778498,0,0x0,8
tick,0x7ff8278cfeb4,65792684,0,0x0,8
tick,0x7ff8278cfeb4,65808684,0,0x0,8
tick,0x7ff8278cfeb4,65824335,0,0x0,8
tick,0x7ff8278cfeb4,65840198,0,0x0,8
tick,0x7ff8278cfeb4,65854655,0,0x0,8
tick,0x7ff8278cfeb4,65869973,0,0x0,8
tick,0x7ff8278cfeb4,65885692,0,0x0,8
tick,0x7ff8278cfeb4,65900614,0,0x0,8
tick,0x7ff8278cfeb4,65915756,0,0x0,8
tick,0x7ff8278cfeb4,65932447,0,0x0,8
tick,0x7ff8278cfeb4,65947589,0,0x0,8
tick,0x7ff8278cfeb4,65963067,0,0x0,8
tick,0x7ff8278cfeb4,65978779,0,0x0,8
tick,0x7ff8278cfeb4,65993731,0,0x0,8
tick,0x7ff8278cfeb4,66009033,0,0x0,8
tick,0x7ff8278cfeb4,66023736,0,0x0,8
tick,0x7ff8278cfeb4,66039171,0,0x0,8
tick,0x7ff8278cfeb4,66054498,0,0x0,8
tick,0x7ff8278cfeb4,66071133,0,0x0,8
tick,0x7ff8278cfeb4,66087264,0,0x0,8
tick,0x7ff8278cfeb4,66102577,0,0x0,8
tick,0x7ff8278cfeb4,66117548,0,0x0,8
tick,0x7ff8278cfeb4,66134093,0,0x0,8
tick,0x7ff8278cfeb4,66148645,0,0x0,8
tick,0x7ff8278cfeb4,66164464,0,0x0,8
tick,0x7ff8278cfeb4,66181501,0,0x0,8
tick,0x7ff8278cfeb4,66196427,0,0x0,8
tick,0x7ff8278cfeb4,66212534,0,0x0,8
tick,0x7ff8278cfeb4,66227379,0,0x0,8
tick,0x7ff8278cfeb4,66243758,0,0x0,8
tick,0x7ff8278cfeb4,66259016,0,0x0,8
tick,0x7ff8278cfeb4,66273807,0,0x0,8
tick,0x7ff8278cfeb4,66288498,0,0x0,8
tick,0x7ff8278cfeb4,66303439,0,0x0,8
tick,0x7ff8278cfeb4,66318370,0,0x0,8
tick,0x7ff8278cfeb4,66335886,0,0x0,8
tick,0x7ff8278cfeb4,66349865,0,0x0,8
tick,0x7ff8278cfeb4,66370087,0,0x0,8
tick,0x7ff8278cfeb4,66381833,0,0x0,8
tick,0x7ff8278cfeb4,66398185,0,0x0,8
tick,0x7ff8278cfeb4,66413449,0,0x0,8
tick,0x7ff8278cfeb4,66429941,0,0x0,8
tick,0x7ff8278cfeb4,66445078,0,0x0,8
tick,0x7ff8278cfeb4,66463993,0,0x0,8
tick,0x7ff8278cfeb4,66475308,0,0x0,8
tick,0x7ff8278cfeb4,66492549,0,0x0,8
tick,0x7ff8278cfeb4,66506812,0,0x0,8
tick,0x7ff8278cfeb4,66521263,0,0x0,8
tick,0x7ff8278cfeb4,66537263,0,0x0,8
tick,0x7ff8278cfeb4,66552099,0,0x0,8
tick,0x7ff8278cfeb4,66567671,0,0x0,8
tick,0x7ff8278cfeb4,66584489,0,0x0,8
tick,0x7ff8278cfeb4,66599250,0,0x0,8
tick,0x7ff8278cfeb4,66614835,0,0x0,8
tick,0x7ff8278cfeb4,66631824,0,0x0,8
tick,0x7ff8278cfeb4,66645815,0,0x0,8
tick,0x7ff8278cfeb4,66661374,0,0x0,8
tick,0x7ff8278cfeb4,66676721,0,0x0,8
tick,0x7ff8278cfeb4,66692203,0,0x0,8
tick,0x7ff8278cfeb4,66706927,0,0x0,8
tick,0x7ff8278cfeb4,66721906,0,0x0,8
tick,0x7ff8278cfeb4,66738111,0,0x0,8
tick,0x7ff8278cfeb4,66752641,0,0x0,8
tick,0x7ff8278cfeb4,66767628,0,0x0,8
tick,0x7ff8278cfeb4,66783897,0,0x0,8
tick,0x7ff8278cfeb4,66798676,0,0x0,8
tick,0x7ff8278cfeb4,66814657,0,0x0,8
tick,0x7ff8278cfeb4,66832143,0,0x0,8
tick,0x7ff8278cfeb4,66845427,0,0x0,8
tick,0x7ff8278cfeb4,66862198,0,0x0,8
tick,0x7ff8278cfeb4,66876365,0,0x0,8
tick,0x7ff8278cfeb4,66893599,0,0x0,8
tick,0x7ff8278cfeb4,66908263,0,0x0,8
tick,0x7ff8278cfeb4,66923146,0,0x0,8
tick,0x7ff8278cfeb4,66938604,0,0x0,8
tick,0x7ff8278cfeb4,66953721,0,0x0,8
tick,0x7ff8278cfeb4,66968319,0,0x0,8
tick,0x7ff8278cfeb4,66984310,0,0x0,8
tick,0x7ff8278cfeb4,67000323,0,0x0,8
tick,0x7ff8278cfeb4,67017418,0,0x0,8
tick,0x7ff8278cfeb4,67032459,0,0x0,8
tick,0x7ff8278cfeb4,67048279,0,0x0,8
tick,0x7ff8278cfeb4,67063381,0,0x0,8
tick,0x7ff8278cfeb4,67078182,0,0x0,8
tick,0x7ff8278cfeb4,67095572,0,0x0,8
tick,0x7ff8278cfeb4,67109244,0,0x0,8
tick,0x7ff8278cfeb4,67126130,0,0x0,8
tick,0x7ff8278cfeb4,67140222,0,0x0,8
tick,0x7ff8278cfeb4,67159218,0,0x0,8
tick,0x7ff8278cfeb4,67172876,0,0x0,8
tick,0x7ff8278cfeb4,67188238,0,0x0,8
tick,0x7ff8278cfeb4,67203230,0,0x0,8
tick,0x7ff8278cfeb4,67219243,0,0x0,8
tick,0x7ff8278cfeb4,67234160,0,0x0,8
tick,0x7ff8278cfeb4,67250140,0,0x0,8
tick,0x7ff8278cfeb4,67265203,0,0x0,8
tick,0x7ff8278cfeb4,67280049,0,0x0,8
tick,0x7ff8278cfeb4,67296221,0,0x0,8
tick,0x7ff8278cfeb4,67311343,0,0x0,8
tick,0x7ff8278cfeb4,67326598,0,0x0,8
tick,0x7ff8278cfeb4,67341859,0,0x0,8
tick,0x7ff8278cfeb4,67357628,0,0x0,8
tick,0x7ff8278cfeb4,67372201,0,0x0,8
tick,0x7ff8278cfeb4,67387545,0,0x0,8
tick,0x7ff8278cfeb4,67403079,0,0x0,8
tick,0x7ff8278cfeb4,67418245,0,0x0,8
tick,0x7ff8278cfeb4,67434101,0,0x0,8
tick,0x7ff8278cfeb4,67450007,0,0x0,8
tick,0x7ff8278cfeb4,67464995,0,0x0,8
tick,0x7ff8278cfeb4,67480057,0,0x0,8
tick,0x7ff8278cfeb4,67495179,0,0x0,8
tick,0x7ff8278cfeb4,67511973,0,0x0,8
tick,0x7ff8278cfeb4,67526545,0,0x0,8
tick,0x7ff8278cfeb4,67541189,0,0x0,8
tick,0x7ff8278cfeb4,67557789,0,0x0,8
tick,0x7ff8278cfeb4,67573067,0,0x0,8
tick,0x7ff8278cfeb4,67588986,0,0x0,8
tick,0x7ff8278cfeb4,67606390,0,0x0,8
tick,0x7ff8278cfeb4,67620087,0,0x0,8
tick,0x7ff8278cfeb4,67636184,0,0x0,8
tick,0x7ff8278cfeb4,67652146,0,0x0,8
tick,0x7ff8278cfeb4,67666119,0,0x0,8
tick,0x7ff8278cfeb4,67682275,0,0x0,8
tick,0x7ff8278cfeb4,67697654,0,0x0,8
tick,0x7ff8278cfeb4,67712982,0,0x0,8
tick,0x7ff8278cfeb4,67729302,0,0x0,8
tick,0x7ff8278cfeb4,67744271,0,0x0,8
tick,0x7ff8278cfeb4,67759793,0,0x0,8
tick,0x7ff8278cfeb4,67776308,0,0x0,8
tick,0x7ff8278cfeb4,67789987,0,0x0,8
tick,0x7ff8278cfeb4,67805300,0,0x0,8
tick,0x7ff8278cfeb4,67820033,0,0x0,8
tick,0x7ff8278cfeb4,67836093,0,0x0,8
tick,0x7ff8278cfeb4,67851814,0,0x0,8
tick,0x7ff8278cfeb4,67865774,0,0x0,8
tick,0x7ff8278cfeb4,67881849,0,0x0,8
tick,0x7ff8278cfeb4,67898071,0,0x0,8
tick,0x7ff8278cfeb4,67911916,0,0x0,8
tick,0x7ff8278cfeb4,67927526,0,0x0,8
tick,0x7ff8278cfeb4,67948258,0,0x0,8
tick,0x7ff8278cfeb4,67962791,0,0x0,8
tick,0x7ff8278cfeb4,67973003,0,0x0,8
tick,0x7ff8278cfeb4,67989857,0,0x0,8
tick,0x7ff8278cfeb4,68003766,0,0x0,8
tick,0x7ff8278cfeb4,68022640,0,0x0,8
tick,0x7ff8278cfeb4,68034901,0,0x0,8
tick,0x7ff8278cfeb4,68050270,0,0x0,8
tick,0x7ff8278cfeb4,68065693,0,0x0,8
tick,0x7ff8278cfeb4,68080672,0,0x0,8
tick,0x7ff8278cfeb4,68095872,0,0x0,8
tick,0x7ff8278cfeb4,68112884,0,0x0,8
tick,0x7ff8278cfeb4,68127409,0,0x0,8
tick,0x7ff8278cfeb4,68142036,0,0x0,8
tick,0x7ff8278cfeb4,68162313,0,0x0,8
tick,0x7ff8278cfeb4,68180110,0,0x0,8
tick,0x7ff8278cfeb4,68188081,0,0x0,8
tick,0x7ff8278cfeb4,68203988,0,0x0,8
tick,0x7ff8278cfeb4,68218583,0,0x0,8
tick,0x7ff8278cfeb4,68233749,0,0x0,8
tick,0x7ff8278cfeb4,68249481,0,0x0,8
tick,0x7ff8278cfeb4,68265561,0,0x0,8
tick,0x7ff8278cfeb4,68280629,0,0x0,8
tick,0x7ff8278cfeb4,68296559,0,0x0,8
tick,0x7ff8278cfeb4,68311607,0,0x0,8
tick,0x7ff8278cfeb4,68327205,0,0x0,8
tick,0x7ff8278cfeb4,68344018,0,0x0,8
tick,0x7ff8278cfeb4,68356501,0,0x0,8
tick,0x7ff8278cfeb4,68373145,0,0x0,8
tick,0x7ff8278cfeb4,68387458,0,0x0,8
tick,0x7ff8278cfeb4,68402967,0,0x0,8
tick,0x7ff8278cfeb4,68418176,0,0x0,8
tick,0x7ff8278cfeb4,68433641,0,0x0,8
tick,0x7ff8278cfeb4,68448014,0,0x0,8
tick,0x7ff8278cfeb4,68462836,0,0x0,8
tick,0x7ff8278cfeb4,68477723,0,0x0,8
tick,0x7ff8278cfeb4,68494149,0,0x0,8
tick,0x7ff8278cfeb4,68509481,0,0x0,8
tick,0x7ff8278cfeb4,68526758,0,0x0,8
tick,0x7ff8278cfeb4,68539943,0,0x0,8
tick,0x7ff8278cfeb4,68555879,0,0x0,8
tick,0x7ff8278cfeb4,68572609,0,0x0,8
tick,0x7ff8278cfeb4,68587735,0,0x0,8
tick,0x7ff8278cfeb4,68603947,0,0x0,8
tick,0x7ff8278cfeb4,68619119,0,0x0,8
tick,0x7ff8278cfeb4,68633918,0,0x0,8
tick,0x7ff8278cfeb4,68649761,0,0x0,8
tick,0x7ff8278cfeb4,68665817,0,0x0,8
tick,0x7ff8278cfeb4,68681893,0,0x0,8
tick,0x7ff8278cfeb4,68697881,0,0x0,8
tick,0x7ff8278cfeb4,68712827,0,0x0,8
tick,0x7ff8278cfeb4,68728043,0,0x0,8
tick,0x7ff8278cfeb4,68742870,0,0x0,8
tick,0x7ff8278cfeb4,68758729,0,0x0,8
tick,0x7ff8278cfeb4,68774232,0,0x0,8
tick,0x7ff8278cfeb4,68789062,0,0x0,8
tick,0x7ff8278cfeb4,68804556,0,0x0,8
tick,0x7ff8278cfeb4,68819663,0,0x0,8
tick,0x7ff8278cfeb4,68835906,0,0x0,8
tick,0x7ff8278cfeb4,68851521,0,0x0,8
tick,0x7ff8278cfeb4,68867529,0,0x0,8
tick,0x7ff8278cfeb4,68883759,0,0x0,8
tick,0x7ff8278cfeb4,68898695,0,0x0,8
tick,0x7ff8278cfeb4,68913720,0,0x0,8
tick,0x7ff8278cfeb4,68928908,0,0x0,8
tick,0x7ff8278cfeb4,68944578,0,0x0,8
tick,0x7ff8278cfeb4,68961974,0,0x0,8
tick,0x7ff8278cfeb4,68977360,0,0x0,8
tick,0x7ff8278cfeb4,68990828,0,0x0,8
tick,0x7ff8278cfeb4,69006583,0,0x0,8
tick,0x7ff8278cfeb4,69022744,0,0x0,8
tick,0x7ff8278cfeb4,69039532,0,0x0,8
tick,0x7ff8278cfeb4,69053491,0,0x0,8
tick,0x7ff8278cfeb4,69068600,0,0x0,8
tick,0x7ff8278cfeb4,69084475,0,0x0,8
tick,0x7ff8278cfeb4,69100615,0,0x0,8
tick,0x7ff8278cfeb4,69116464,0,0x0,8
tick,0x7ff8278cfeb4,69133015,0,0x0,8
tick,0x7ff8278cfeb4,69148375,0,0x0,8
tick,0x7ff8278cfeb4,69163585,0,0x0,8
tick,0x7ff8278cfeb4,69179757,0,0x0,8
tick,0x7ff8278cfeb4,69195349,0,0x0,8
tick,0x7ff8278cfeb4,69212182,0,0x0,8
tick,0x7ff8278cfeb4,69228243,0,0x0,8
tick,0x7ff8278cfeb4,69241694,0,0x0,8
tick,0x7ff8278cfeb4,69256453,0,0x0,8
tick,0x7ff8278cfeb4,69273148,0,0x0,8
tick,0x7ff8278cfeb4,69287559,0,0x0,8
tick,0x7ff8278cfeb4,69302003,0,0x0,8
tick,0x7ff8278cfeb4,69317554,0,0x0,8
tick,0x7ff8278cfeb4,69337264,0,0x0,8
tick,0x7ff8278cfeb4,69351287,0,0x0,8
tick,0x7ff8278cfeb4,69363273,0,0x0,8
tick,0x7ff8278cfeb4,69379366,0,0x0,8
tick,0x7ff8278cfeb4,69395423,0,0x0,8
tick,0x7ff8278cfeb4,69415779,0,0x0,8
tick,0x7ff8278cfeb4,69434256,0,0x0,8
tick,0x7ff8278cfeb4,69444892,0,0x0,8
tick,0x7ff8278cfeb4,69463292,0,0x0,8
tick,0x7ff8278cfeb4,69474058,0,0x0,8
tick,0x7ff8278cfeb4,69487044,0,0x0,8
tick,0x7ff8278cfeb4,69504475,0,0x0,8
tick,0x7ff8278cfeb4,69529250,0,0x0,8
tick,0x7ff8278cfeb4,69534077,0,0x0,8
tick,0x7ff8278cfeb4,69548081,0,0x0,8
tick,0x7ff8278cfeb4,69562171,0,0x0,8
tick,0x7ff8278cfeb4,69577589,0,0x0,8
tick,0x7ff8278cfeb4,69595563,0,0x0,8
tick,0x7ff8278cfeb4,69613314,0,0x0,8
tick,0x7ff8278cfeb4,69630639,0,0x0,8
tick,0x7ff8278cfeb4,69662884,0,0x0,8
tick,0x7ff8278cfeb4,69669304,0,0x0,8
tick,0x7ff8278cfeb4,69688045,0,0x0,8
tick,0x7ff8278cfeb4,69714351,0,0x0,8
tick,0x7ff8278cfeb4,69729405,0,0x0,8
tick,0x7ff8278cfeb4,69747895,0,0x0,8
tick,0x7ff8278cfeb4,69762332,0,0x0,8
tick,0x7ff8278cfeb4,69776674,0,0x0,8
tick,0x7ff8278cfeb4,69791510,0,0x0,8
tick,0x7ff8278cfeb4,69808426,0,0x0,8
tick,0x7ff8278cfeb4,69832913,0,0x0,8
tick,0x7ff8278cfeb4,69845454,0,0x0,8
tick,0x7ff8278cfeb4,69854945,0,0x0,8
tick,0x7ff8278cfeb4,69878985,0,0x0,8
tick,0x7ff8278cfeb4,69888191,0,0x0,8
tick,0x7ff8278cfeb4,69898934,0,0x0,8
tick,0x7ff8278cfeb4,69912976,0,0x0,8
tick,0x7ff8278cfeb4,69931171,0,0x0,8
tick,0x7ff8278cfeb4,69956340,0,0x0,8
tick,0x7ff8278cfeb4,69967096,0,0x0,8
tick,0x7ff8278cfeb4,69981592,0,0x0,8
tick,0x7ff8278cfeb4,70001931,0,0x0,8
tick,0x7ff8278cfeb4,70007759,0,0x0,8
tick,0x7ff8278cfeb4,70024401,0,0x0,8
tick,0x7ff8278cfeb4,70036733,0,0x0,8
tick,0x7ff8278cfeb4,70074471,0,0x0,8
tick,0x7ff8278cfeb4,70083947,0,0x0,8
tick,0x7ff8278cfeb4,70099662,0,0x0,8
tick,0x7ff8278cfeb4,70114241,0,0x0,8
tick,0x7ff8278cfeb4,70129709,0,0x0,8
tick,0x7ff8278cfeb4,70145858,0,0x0,8
tick,0x7ff8278cfeb4,70162895,0,0x0,8
tick,0x7ff8278cfeb4,70186303,0,0x0,8
tick,0x7ff8278cfeb4,70191779,0,0x0,8
tick,0x7ff8278cfeb4,70207438,0,0x0,8
tick,0x7ff8278cfeb4,70224303,0,0x0,8
tick,0x7ff8278cfeb4,70239177,0,0x0,8
tick,0x7ff8278cfeb4,70252012,0,0x0,8
tick,0x7ff8278cfeb4,70266754,0,0x0,8
tick,0x7ff8278cfeb4,70281622,0,0x0,8
tick,0x7ff8278cfeb4,70297700,0,0x0,8
tick,0x7ff8278cfeb4,70314173,0,0x0,8
tick,0x7ff8278cfeb4,70329707,0,0x0,8
tick,0x7ff8278cfeb4,70351948,0,0x0,8
tick,0x7ff8278cfeb4,70362863,0,0x0,8
tick,0x7ff8278cfeb4,70375922,0,0x0,8
tick,0x7ff8278cfeb4,70391322,0,0x0,8
tick,0x7ff8278cfeb4,70407202,0,0x0,8
tick,0x7ff8278cfeb4,70422185,0,0x0,8
tick,0x7ff8278cfeb4,70437284,0,0x0,8
tick,0x7ff8278cfeb4,70458822,0,0x0,8
tick,0x7ff8278cfeb4,70468272,0,0x0,8
tick,0x7ff8278cfeb4,70489349,0,0x0,8
tick,0x7ff8278cfeb4,70513704,0,0x0,8
tick,0x7ff8278cfeb4,70515795,0,0x0,8
tick,0x7ff8278cfeb4,70542834,0,0x0,8
tick,0x7ff8278cfeb4,70548812,0,0x0,8
tick,0x7ff8278cfeb4,70588603,0,0x0,8
tick,0x7ff8278cfeb4,70598361,0,0x0,8
tick,0x7ff8278cfeb4,70608123,0,0x0,8
tick,0x7ff8278cfeb4,70630231,0,0x0,8
tick,0x7ff8278cfeb4,70646297,0,0x0,8
tick,0x7ff8278cfeb4,70657766,0,0x0,8
tick,0x7ff8278cfeb4,70687688,0,0x0,8
tick,0x7ff8278cfeb4,70703988,0,0x0,8
tick,0x7ff8278cfeb4,70714616,0,0x0,8
tick,0x7ff8278cfeb4,70734285,0,0x0,8
tick,0x7ff8278cfeb4,70755227,0,0x0,8
tick,0x7ff8278cfeb4,70763606,0,0x0,8
tick,0x7ff8278cfeb4,70783927,0,0x0,8
tick,0x7ff8278cfeb4,70806150,0,0x0,8
tick,0x7ff8278cfeb4,70828796,0,0x0,8
tick,0x7ff8278cfeb4,70838975,0,0x0,8
tick,0x7ff8278cfeb4,70859119,0,0x0,8
tick,0x7ff8278cfeb4,70887004,0,0x0,8
tick,0x7ff8278cfeb4,70920231,0,0x0,8
tick,0x7ff8278cfeb4,70934404,0,0x0,8
tick,0x7ff8278cfeb4,70975809,0,0x0,8
tick,0x7ff8278cfeb4,71009202,0,0x0,8
tick,0x7ff8278cfeb4,71029687,0,0x0,8
tick,0x7ff8278cfeb4,71048654,0,0x0,8
tick,0x7ff8278cfeb4,71076781,0,0x0,8
tick,0x7ff8278cfeb4,71084567,0,0x0,8
tick,0x7ff8278cfeb4,71104872,0,0x0,8
tick,0x7ff8278cfeb4,71123911,0,0x0,8
tick,0x7ff8278cfeb4,71133489,0,0x0,8
tick,0x7ff8278cfeb4,71147362,0,0x0,8
tick,0x7ff8278cfeb4,71163735,0,0x0,8
tick,0x7ff8278cfeb4,71177176,0,0x0,8
tick,0x7ff8278cfeb4,71191331,0,0x0,8
tick,0x7ff8278cfeb4,71216387,0,0x0,8
tick,0x7ff8278cfeb4,71237864,0,0x0,8
tick,0x7ff8278cfeb4,71256536,0,0x0,8
tick,0x7ff8278cfeb4,71269840,0,0x0,8
tick,0x7ff8278cfeb4,71299078,0,0x0,8
tick,0x7ff8278cfeb4,71315564,0,0x0,8
tick,0x7ff8278cfeb4,71333900,0,0x0,8
tick,0x7ff8278cfeb4,71383804,0,0x0,8
tick,0x7ff8278cfeb4,71400987,0,0x0,8
tick,0x7ff8278cfeb4,71415394,0,0x0,8
tick,0x7ff8278cfeb4,71433933,0,0x0,8
tick,0x7ff8278cfeb4,71439660,0,0x0,8
tick,0x7ff8278cfeb4,71454861,0,0x0,8
tick,0x7ff8278cfeb4,71471436,0,0x0,8
tick,0x7ff8278cfeb4,71499042,0,0x0,8
tick,0x7ff8278cfeb4,71515359,0,0x0,8
tick,0x7ff8278cfeb4,71531218,0,0x0,8
tick,0x7ff8278cfeb4,71547736,0,0x0,8
tick,0x7ff8278cfeb4,71568018,0,0x0,8
tick,0x7ff8278cfeb4,71581160,0,0x0,8
tick,0x7ff8278cfeb4,71597526,0,0x0,8
tick,0x7ff8278cfeb4,71609235,0,0x0,8
tick,0x7ff8278cfeb4,71624732,0,0x0,8
tick,0x7ff8278cfeb4,71640217,0,0x0,8
tick,0x7ff8278cfeb4,71655243,0,0x0,8
tick,0x7ff8278cfeb4,71669545,0,0x0,8
tick,0x7ff8278cfeb4,71689405,0,0x0,8
tick,0x7ff8278cfeb4,71702785,0,0x0,8
tick,0x7ff8278cfeb4,71715963,0,0x0,8
tick,0x7ff8278cfeb4,71739477,0,0x0,8
tick,0x7ff8278cfeb4,71749039,0,0x0,8
tick,0x7ff8278cfeb4,71764328,0,0x0,8
tick,0x7ff8278cfeb4,71782284,0,0x0,8
tick,0x7ff8278cfeb4,71796799,0,0x0,8
tick,0x7ff8278cfeb4,71809603,0,0x0,8
tick,0x7ff8278cfeb4,71825427,0,0x0,8
tick,0x7ff8278cfeb4,71851960,0,0x0,8
tick,0x7ff8278cfeb4,71854110,0,0x0,8
tick,0x7ff8278cfeb4,71870281,0,0x0,8
tick,0x7ff8278cfeb4,71884915,0,0x0,8
tick,0x7ff8278cfeb4,71901941,0,0x0,8
tick,0x7ff8278cfeb4,71916084,0,0x0,8
tick,0x7ff8278cfeb4,71932153,0,0x0,8
tick,0x7ff8278cfeb4,71948260,0,0x0,8
tick,0x7ff8278cfeb4,71974176,0,0x0,8
tick,0x7ff8278cfeb4,71987424,0,0x0,8
tick,0x7ff8278cfeb4,71998785,0,0x0,8
tick,0x7ff8278cfeb4,72027232,0,0x0,8
tick,0x7ff8278cfeb4,72042124,0,0x0,8
tick,0x7ff8278cfeb4,72065534,0,0x0,8
tick,0x7ff8278cfeb4,72072250,0,0x0,8
tick,0x7ff8278cfeb4,72109035,0,0x0,8
tick,0x7ff8278cfeb4,72133720,0,0x0,8
tick,0x7ff8278cfeb4,72156867,0,0x0,8
tick,0x7ff8278cfeb4,72177180,0,0x0,8
tick,0x7ff8278cfeb4,72193983,0,0x0,8
tick,0x7ff8278cfeb4,72208340,0,0x0,8
tick,0x7ff8278cfeb4,72224049,0,0x0,8
tick,0x7ff8278cfeb4,72239189,0,0x0,8
tick,0x7ff8278cfeb4,72255708,0,0x0,8
tick,0x7ff8278cfeb4,72269429,0,0x0,8
tick,0x7ff8278cfeb4,72286099,0,0x0,8
tick,0x7ff8278cfeb4,72299280,0,0x0,8
tick,0x7ff8278cfeb4,72316031,0,0x0,8
tick,0x7ff8278cfeb4,72331895,0,0x0,8
tick,0x7ff8278cfeb4,72349266,0,0x0,8
tick,0x7ff8278cfeb4,72367129,0,0x0,8
tick,0x7ff8278cfeb4,72377434,0,0x0,8
tick,0x7ff8278cfeb4,72394117,0,0x0,8
tick,0x7ff8278cfeb4,72411019,0,0x0,8
tick,0x7ff8278cfeb4,72426816,0,0x0,8
tick,0x7ff8278cfeb4,72441673,0,0x0,8
tick,0x7ff8278cfeb4,72458425,0,0x0,8
tick,0x7ff8278cfeb4,72474026,0,0x0,8
tick,0x7ff8278cfeb4,72488260,0,0x0,8
tick,0x7ff8278cfeb4,72504310,0,0x0,8
tick,0x7ff8278cfeb4,72519277,0,0x0,8
tick,0x7ff8278cfeb4,72537669,0,0x0,8
tick,0x7ff8278cfeb4,72556405,0,0x0,8
tick,0x7ff8278cfeb4,72567611,0,0x0,8
tick,0x7ff8278cfeb4,72598862,0,0x0,8
tick,0x7ff8278cfeb4,72633454,0,0x0,8
tick,0x7ff8278cfeb4,72649522,0,0x0,8
tick,0x7ff8278cfeb4,72669387,0,0x0,8
tick,0x7ff8278cfeb4,72683822,0,0x0,8
tick,0x7ff8278cfeb4,72703064,0,0x0,8
tick,0x7ff8278cfeb4,72707690,0,0x0,8
tick,0x7ff8278cfeb4,72724717,0,0x0,8
tick,0x7ff8278cfeb4,72738688,0,0x0,8
tick,0x7ff8278cfeb4,72762039,0,0x0,8
tick,0x7ff8278cfeb4,72769859,0,0x0,8
tick,0x7ff8278cfeb4,72785174,0,0x0,8
tick,0x7ff8278cfeb4,72801603,0,0x0,8
tick,0x7ff8278cfeb4,72818445,0,0x0,8
tick,0x7ff8278cfeb4,72844345,0,0x0,8
tick,0x7ff8278cfeb4,72853454,0,0x0,8
tick,0x7ff8278cfeb4,72881858,0,0x0,8
tick,0x7ff8278cfeb4,72893265,0,0x0,8
tick,0x7ff8278cfeb4,72925923,0,0x0,8
tick,0x7ff8278cfeb4,72952815,0,0x0,8
tick,0x7ff8278cfeb4,72960320,0,0x0,8
tick,0x7ff8278cfeb4,72982927,0,0x0,8
tick,0x7ff8278cfeb4,73011498,0,0x0,8
tick,0x7ff8278cfeb4,73018027,0,0x0,8
tick,0x7ff8278cfeb4,73053442,0,0x0,8
tick,0x7ff8278cfeb4,73077405,0,0x0,8
tick,0x7ff8278cfeb4,73109102,0,0x0,8
tick,0x7ff8278cfeb4,73124859,0,0x0,8
tick,0x7ff8278cfeb4,73140016,0,0x0,8
tick,0x7ff8278cfeb4,73156439,0,0x0,8
tick,0x7ff8278cfeb4,73175239,0,0x0,8
tick,0x7ff8278cfeb4,73185077,0,0x0,8
tick,0x7ff8278cfeb4,73200243,0,0x0,8
tick,0x7ff8278cfeb4,73215326,0,0x0,8
tick,0x7ff8278cfeb4,73234414,0,0x0,8
tick,0x7ff8278cfeb4,73249466,0,0x0,8
tick,0x7ff8278cfeb4,73267774,0,0x0,8
tick,0x7ff8278cfeb4,73289343,0,0x0,8
tick,0x7ff8278cfeb4,73294142,0,0x0,8
tick,0x7ff8278cfeb4,73308960,0,0x0,8
tick,0x7ff8278cfeb4,73323326,0,0x0,8
tick,0x7ff8278cfeb4,73338392,0,0x0,8
tick,0x7ff8278cfeb4,73353320,0,0x0,8
tick,0x7ff8278cfeb4,73369094,0,0x0,8
tick,0x7ff8278cfeb4,73385398,0,0x0,8
tick,0x7ff8278cfeb4,73416278,0,0x0,8
tick,0x7ff8278cfeb4,73433347,0,0x0,8
tick,0x7ff8278cfeb4,73450044,0,0x0,8
tick,0x7ff8278cfeb4,73465505,0,0x0,8
tick,0x7ff8278cfeb4,73480366,0,0x0,8
tick,0x7ff8278cfeb4,73499443,0,0x0,8
tick,0x7ff8278cfeb4,73511566,0,0x0,8
tick,0x7ff8278cfeb4,73525177,0,0x0,8
tick,0x7ff8278cfeb4,73548927,0,0x0,8
tick,0x7ff8278cfeb4,73557409,0,0x0,8
tick,0x7ff8278cfeb4,73574262,0,0x0,8
tick,0x7ff8278cfeb4,73587694,0,0x0,8
tick,0x7ff8278cfeb4,73603019,0,0x0,8
tick,0x7ff8278cfeb4,73619633,0,0x0,8
tick,0x7ff8278cfeb4,73634714,0,0x0,8
tick,0x7ff8278cfeb4,73650573,0,0x0,8
tick,0x7ff8278cfeb4,73677933,0,0x0,8
tick,0x7ff8278cfeb4,73684982,0,0x0,8
tick,0x7ff8278cfeb4,73695459,0,0x0,8
tick,0x7ff8278cfeb4,73717797,0,0x0,8
tick,0x7ff8278cfeb4,73727293,0,0x0,8
tick,0x7ff8278cfeb4,73747351,0,0x0,8
tick,0x7ff8278cfeb4,73759937,0,0x0,8
tick,0x7ff8278cfeb4,73775118,0,0x0,8
tick,0x7ff8278cfeb4,73790532,0,0x0,8
tick,0x7ff8278cfeb4,73806310,0,0x0,8
tick,0x7ff8278cfeb4,73822759,0,0x0,8
tick,0x7ff8278cfeb4,73836537,0,0x0,8
tick,0x7ff8278cfeb4,73851834,0,0x0,8
tick,0x7ff8278cfeb4,73868125,0,0x0,8
tick,0x7ff8278cfeb4,73883442,0,0x0,8
tick,0x7ff8278cfeb4,73906354,0,0x0,8
tick,0x7ff8278cfeb4,73912255,0,0x0,8
tick,0x7ff8278cfeb4,73927816,0,0x0,8
tick,0x7ff8278cfeb4,73943920,0,0x0,8
tick,0x7ff8278cfeb4,73958210,0,0x0,8
tick,0x7ff8278cfeb4,73977375,0,0x0,8
tick,0x7ff8278cfeb4,74015953,0,0x0,8
tick,0x7ff8278cfeb4,74019813,0,0x0,8
tick,0x7ff8278cfeb4,74035715,0,0x0,8
tick,0x7ff8278cfeb4,74055052,0,0x0,8
tick,0x7ff8278cfeb4,74082744,0,0x0,8
tick,0x7ff8278cfeb4,74105761,0,0x0,8
tick,0x7ff8278cfeb4,74134888,0,0x0,8
tick,0x7ff8278cfeb4,74150606,0,0x0,8
tick,0x7ff8278cfeb4,74176711,0,0x0,8
tick,0x7ff8278cfeb4,74195378,0,0x0,8
tick,0x7ff8278cfeb4,74227485,0,0x0,8
tick,0x7ff8278cfeb4,74246381,0,0x0,8
tick,0x7ff8278cfeb4,74251084,0,0x0,8
tick,0x7ff8278cfeb4,74285290,0,0x0,8
tick,0x7ff8278cfeb4,74303248,0,0x0,8
tick,0x7ff8278cfeb4,74323688,0,0x0,8
tick,0x7ff8278cfeb4,74348893,0,0x0,8
tick,0x7ff8278cfeb4,74360014,0,0x0,8
tick,0x7ff8278cfeb4,74383866,0,0x0,8
tick,0x7ff8278cfeb4,74399124,0,0x0,8
tick,0x7ff8278cfeb4,74405011,0,0x0,8
tick,0x7ff8278cfeb4,74420414,0,0x0,8
tick,0x7ff8278cfeb4,74437725,0,0x0,8
tick,0x7ff8278cfeb4,74452539,0,0x0,8
tick,0x7ff8278cfeb4,74471353,0,0x0,8
tick,0x7ff8278cfeb4,74489161,0,0x0,8
tick,0x7ff8278cfeb4,74506505,0,0x0,8
tick,0x7ff8278cfeb4,74521269,0,0x0,8
tick,0x7ff8278cfeb4,74534891,0,0x0,8
tick,0x7ff8278cfeb4,74546186,0,0x0,8
tick,0x7ff8278cfeb4,74570996,0,0x0,8
tick,0x7ff8278cfeb4,74588802,0,0x0,8
tick,0x7ff8278cfeb4,74602689,0,0x0,8
tick,0x7ff8278cfeb4,74607709,0,0x0,8
tick,0x7ff8278cfeb4,74626574,0,0x0,8
tick,0x7ff8278cfeb4,74642442,0,0x0,8
tick,0x7ff8278cfeb4,74653443,0,0x0,8
tick,0x7ff8278cfeb4,74668440,0,0x0,8
tick,0x7ff8278cfeb4,74684423,0,0x0,8
tick,0x7ff8278cfeb4,74712294,0,0x0,8
tick,0x7ff8278cfeb4,74728447,0,0x0,8
tick,0x7ff8278cfeb4,74744564,0,0x0,8
tick,0x7ff8278cfeb4,74761108,0,0x0,8
tick,0x7ff8278cfeb4,74775589,0,0x0,8
tick,0x7ff8278cfeb4,74792438,0,0x0,8
tick,0x7ff8278cfeb4,74807939,0,0x0,8
tick,0x7ff8278cfeb4,74822956,0,0x0,8
tick,0x7ff8278cfeb4,74838855,0,0x0,8
tick,0x7ff8278cfeb4,74860668,0,0x0,8
tick,0x7ff8278cfeb4,74872956,0,0x0,8
tick,0x7ff8278cfeb4,74886853,0,0x0,8
tick,0x7ff8278cfeb4,74903795,0,0x0,8
tick,0x7ff8278cfeb4,74939158,0,0x0,8
tick,0x7ff8278cfeb4,74951328,0,0x0,8
tick,0x7ff8278cfeb4,74967475,0,0x0,8
tick,0x7ff8278cfeb4,75008990,0,0x0,8
tick,0x7ff8278cfeb4,75017673,0,0x0,8
tick,0x7ff8278cfeb4,75041343,0,0x0,8
tick,0x7ff8278cfeb4,75059351,0,0x0,8
tick,0x7ff8278cfeb4,75076925,0,0x0,8
tick,0x7ff8278cfeb4,75095114,0,0x0,8
tick,0x7ff8278cfeb4,75105342,0,0x0,8
tick,0x7ff8278cfeb4,75122972,0,0x0,8
tick,0x7ff8278cfeb4,75136767,0,0x0,8
tick,0x7ff8278cfeb4,75153324,0,0x0,8
tick,0x7ff8278cfeb4,75167803,0,0x0,8
tick,0x7ff8278cfeb4,75184074,0,0x0,8
tick,0x7ff8278cfeb4,75201291,0,0x0,8
tick,0x7ff8278cfeb4,75212197,0,0x0,8
tick,0x7ff8278cfeb4,75227478,0,0x0,8
tick,0x7ff8278cfeb4,75242784,0,0x0,8
tick,0x7ff8278cfeb4,75258857,0,0x0,8
tick,0x7ff8278cfeb4,75274832,0,0x0,8
tick,0x7ff8278cfeb4,75292771,0,0x0,8
tick,0x7ff8278cfeb4,75305413,0,0x0,8
tick,0x7ff8278cfeb4,75321383,0,0x0,8
tick,0x7ff8278cfeb4,75338632,0,0x0,8
tick,0x7ff8278cfeb4,75353101,0,0x0,8
tick,0x7ff8278cfeb4,75371527,0,0x0,8
tick,0x7ff8278cfeb4,75388036,0,0x0,8
tick,0x7ff8278cfeb4,75399637,0,0x0,8
tick,0x7ff8278cfeb4,75417631,0,0x0,8
tick,0x7ff8278cfeb4,75428661,0,0x0,8
tick,0x7ff8278cfeb4,75448337,0,0x0,8
tick,0x7ff8278cfeb4,75460262,0,0x0,8
tick,0x7ff8278cfeb4,75476663,0,0x0,8
tick,0x7ff8278cfeb4,75497017,0,0x0,8
tick,0x7ff8278cfeb4,75506439,0,0x0,8
tick,0x7ff8278cfeb4,75522392,0,0x0,8
tick,0x7ff8278cfeb4,75537848,0,0x0,8
tick,0x7ff8278cfeb4,75551592,0,0x0,8
tick,0x7ff8278cfeb4,75569232,0,0x0,8
tick,0x7ff8278cfeb4,75585577,0,0x0,8
tick,0x7ff8278cfeb4,75598195,0,0x0,8
tick,0x7ff8278cfeb4,75616498,0,0x0,8
tick,0x7ff8278cfeb4,75628131,0,0x0,8
tick,0x7ff8278cfeb4,75645199,0,0x0,8
tick,0x7ff8278cfeb4,75660470,0,0x0,8
tick,0x7ff8278cfeb4,75674514,0,0x0,8
tick,0x7ff8278cfeb4,75691564,0,0x0,8
tick,0x7ff8278cfeb4,75707409,0,0x0,8
tick,0x7ff8278cfeb4,75727975,0,0x0,8
tick,0x7ff8278cfeb4,75736911,0,0x0,8
tick,0x7ff8278cfeb4,75752517,0,0x0,8
tick,0x7ff8278cfeb4,75780291,0,0x0,8
tick,0x7ff8278cfeb4,75784226,0,0x0,8
tick,0x7ff8278cfeb4,75811835,0,0x0,8
tick,0x7ff8278cfeb4,75814500,0,0x0,8
tick,0x7ff8278cfeb4,75838503,0,0x0,8
tick,0x7ff8278cfeb4,75861829,0,0x0,8
tick,0x7ff8278cfeb4,75875118,0,0x0,8
tick,0x7ff8278cfeb4,75894920,0,0x0,8
tick,0x7ff8278cfeb4,75909440,0,0x0,8
tick,0x7ff8278cfeb4,75935485,0,0x0,8
tick,0x7ff8278cfeb4,75969473,0,0x0,8
tick,0x7ff8278cfeb4,75997340,0,0x0,8
tick,0x7ff8278cfeb4,76008123,0,0x0,8
tick,0x7ff8278cfeb4,76019106,0,0x0,8
tick,0x7ff8278cfeb4,76029899,0,0x0,8
tick,0x7ff8278cfeb4,76053620,0,0x0,8
tick,0x7ff8278cfeb4,76065141,0,0x0,8
tick,0x7ff8278cfeb4,76076488,0,0x0,8
tick,0x7ff8278cfeb4,76093914,0,0x0,8
tick,0x7ff8278cfeb4,76109501,0,0x0,8
tick,0x7ff8278cfeb4,76136873,0,0x0,8
tick,0x7ff8278cfeb4,76140149,0,0x0,8
tick,0x7ff8278cfeb4,76156945,0,0x0,8
tick,0x7ff8278cfeb4,76172491,0,0x0,8
tick,0x7ff8278cfeb4,76187019,0,0x0,8
tick,0x7ff8278cfeb4,76202717,0,0x0,8
tick,0x7ff8278cfeb4,76219071,0,0x0,8
tick,0x7ff8278cfeb4,76235476,0,0x0,8
tick,0x7ff8278cfeb4,76248418,0,0x0,8
tick,0x7ff8278cfeb4,76264467,0,0x0,8
tick,0x7ff8278cfeb4,76279040,0,0x0,8
tick,0x7ff8278cfeb4,76294592,0,0x0,8
tick,0x7ff8278cfeb4,76311766,0,0x0,8
tick,0x7ff8278cfeb4,76325893,0,0x0,8
tick,0x7ff8278cfeb4,76342647,0,0x0,8
tick,0x7ff8278cfeb4,76358990,0,0x0,8
tick,0x7ff8278cfeb4,76374739,0,0x0,8
tick,0x7ff8278cfeb4,76392704,0,0x0,8
tick,0x7ff8278cfeb4,76406867,0,0x0,8
tick,0x7ff8278cfeb4,76422887,0,0x0,8
tick,0x7ff8278cfeb4,76440398,0,0x0,8
tick,0x7ff8278cfeb4,76453827,0,0x0,8
tick,0x7ff8278cfeb4,76474162,0,0x0,8
tick,0x7ff8278cfeb4,76486582,0,0x0,8
tick,0x7ff8278cfeb4,76503535,0,0x0,8
tick,0x7ff8278cfeb4,76520498,0,0x0,8
tick,0x7ff8278cfeb4,76536344,0,0x0,8
tick,0x7ff8278cfeb4,76550593,0,0x0,8
tick,0x7ff8278cfeb4,76569616,0,0x0,8
tick,0x7ff8278cfeb4,76582064,0,0x0,8
tick,0x7ff8278cfeb4,76596696,0,0x0,8
tick,0x7ff8278cfeb4,76613238,0,0x0,8
tick,0x7ff8278cfeb4,76627788,0,0x0,8
tick,0x7ff8278cfeb4,76642736,0,0x0,8
tick,0x7ff8278cfeb4,76658696,0,0x0,8
tick,0x7ff8278cfeb4,76676625,0,0x0,8
tick,0x7ff8278cfeb4,76689038,0,0x0,8
tick,0x7ff8278cfeb4,76706167,0,0x0,8
tick,0x7ff8278cfeb4,76720044,0,0x0,8
tick,0x7ff8278cfeb4,76738548,0,0x0,8
tick,0x7ff8278cfeb4,76753821,0,0x0,8
tick,0x7ff8278cfeb4,76766576,0,0x0,8
tick,0x7ff8278cfeb4,76781748,0,0x0,8
tick,0x7ff8278cfeb4,76798947,0,0x0,8
tick,0x7ff8278cfeb4,76814652,0,0x0,8
tick,0x7ff8278cfeb4,76829669,0,0x0,8
tick,0x7ff8278cfeb4,76845331,0,0x0,8
tick,0x7ff8278cfeb4,76861599,0,0x0,8
tick,0x7ff8278cfeb4,76875314,0,0x0,8
tick,0x7ff8278cfeb4,76892801,0,0x0,8
tick,0x7ff8278cfeb4,76907298,0,0x0,8
tick,0x7ff8278cfeb4,76925416,0,0x0,8
tick,0x7ff8278cfeb4,76939594,0,0x0,8
tick,0x7ff8278cfeb4,76958786,0,0x0,8
tick,0x7ff8278cfeb4,76971761,0,0x0,8
tick,0x7ff8278cfeb4,76993107,0,0x0,8
tick,0x7ff8278cfeb4,77005940,0,0x0,8
tick,0x7ff8278cfeb4,77019494,0,0x0,8
tick,0x7ff8278cfeb4,77040445,0,0x0,8
tick,0x7ff8278cfeb4,77048499,0,0x0,8
tick,0x7ff8278cfeb4,77082192,0,0x0,8
tick,0x7ff8278cfeb4,77093801,0,0x0,8
tick,0x7ff8278cfeb4,77108353,0,0x0,8
tick,0x7ff8278cfeb4,77123898,0,0x0,8
tick,0x7ff8278cfeb4,77141262,0,0x0,8
tick,0x7ff8278cfeb4,77156403,0,0x0,8
tick,0x7ff8278cfeb4,77173405,0,0x0,8
tick,0x7ff8278cfeb4,77190470,0,0x0,8
tick,0x7ff8278cfeb4,77203037,0,0x0,8
tick,0x7ff8278cfeb4,77216319,0,0x0,8
tick,0x7ff8278cfeb4,77242053,0,0x0,8
tick,0x7ff8278cfeb4,77253929,0,0x0,8
tick,0x7ff8278cfeb4,77265279,0,0x0,8
tick,0x7ff8278cfeb4,77290295,0,0x0,8
tick,0x7ff8278cfeb4,77293205,0,0x0,8
tick,0x7ff8278cfeb4,77313311,0,0x0,8
tick,0x7ff8278cfeb4,77326159,0,0x0,8
tick,0x7ff8278cfeb4,77338446,0,0x0,8
tick,0x7ff8278cfeb4,77364763,0,0x0,8
tick,0x7ff8278cfeb4,77371143,0,0x0,8
tick,0x7ff8278cfeb4,77390174,0,0x0,8
tick,0x7ff8278cfeb4,77405068,0,0x0,8
tick,0x7ff8278cfeb4,77420397,0,0x0,8
tick,0x7ff8278cfeb4,77431105,0,0x0,8
tick,0x7ff8278cfeb4,77454245,0,0x0,8
tick,0x7ff8278cfeb4,77463089,0,0x0,8
tick,0x7ff8278cfeb4,77479806,0,0x0,8
tick,0x7ff8278cfeb4,77509857,0,0x0,8
tick,0x7ff8278cfeb4,77547410,0,0x0,8
tick,0x7ff8278cfeb4,77557537,0,0x0,8
tick,0x7ff8278cfeb4,77575322,0,0x0,8
tick,0x7ff8278cfeb4,77608233,0,0x0,8
tick,0x7ff8278cfeb4,77628551,0,0x0,8
tick,0x7ff8278cfeb4,77644580,0,0x0,8
tick,0x7ff8278cfeb4,77647387,0,0x0,8
tick,0x7ff8278cfeb4,77670700,0,0x0,8
tick,0x7ff8278cfeb4,77687715,0,0x0,8
tick,0x7ff8278cfeb4,77695460,0,0x0,8
tick,0x7ff8278cfeb4,77710590,0,0x0,8
tick,0x7ff8278cfeb4,77728833,0,0x0,8
tick,0x7ff8278cfeb4,77749063,0,0x0,8
tick,0x7ff8278cfeb4,77773110,0,0x0,8
tick,0x7ff8278cfeb4,77790424,0,0x0,8
tick,0x7ff8278cfeb4,77806538,0,0x0,8
tick,0x7ff8278cfeb4,77824907,0,0x0,8
tick,0x7ff8278cfeb4,77844092,0,0x0,8
tick,0x7ff8278cfeb4,77875085,0,0x0,8
tick,0x7ff8278cfeb4,77894783,0,0x0,8
tick,0x7ff8278cfeb4,77911036,0,0x0,8
tick,0x7ff8278cfeb4,77913192,0,0x0,8
tick,0x7ff8278cfeb4,77929835,0,0x0,8
tick,0x7ff8278cfeb4,77944313,0,0x0,8
tick,0x7ff8278cfeb4,77959957,0,0x0,8
tick,0x7ff8278cfeb4,77974924,0,0x0,8
tick,0x7ff8278cfeb4,77998193,0,0x0,8
tick,0x7ff8278cfeb4,78007143,0,0x0,8
tick,0x7ff8278cfeb4,78024558,0,0x0,8
tick,0x7ff8278cfeb4,78041416,0,0x0,8
tick,0x7ff8278cfeb4,78069999,0,0x0,8
tick,0x7ff8278cfeb4,78088206,0,0x0,8
tick,0x7ff8278cfeb4,78104750,0,0x0,8
tick,0x7ff8278cfeb4,78116516,0,0x0,8
tick,0x7ff8278cfeb4,78133033,0,0x0,8
tick,0x7ff8278cfeb4,78149747,0,0x0,8
tick,0x7ff8278cfeb4,78163610,0,0x0,8
tick,0x7ff8278cfeb4,78178812,0,0x0,8
tick,0x7ff8278cfeb4,78194477,0,0x0,8
tick,0x7ff8278cfeb4,78222984,0,0x0,8
tick,0x7ff8278cfeb4,78226612,0,0x0,8
tick,0x7ff8278cfeb4,78243418,0,0x0,8
tick,0x7ff8278cfeb4,78256433,0,0x0,8
tick,0x7ff8278cfeb4,78273635,0,0x0,8
tick,0x7ff8278cfeb4,78287896,0,0x0,8
tick,0x7ff8278cfeb4,78306542,0,0x0,8
tick,0x7ff8278cfeb4,78316805,0,0x0,8
tick,0x7ff8278cfeb4,78338859,0,0x0,8
tick,0x7ff8278cfeb4,78348218,0,0x0,8
tick,0x7ff8278cfeb4,78365049,0,0x0,8
tick,0x7ff8278cfeb4,78380110,0,0x0,8
tick,0x7ff8278cfeb4,78396399,0,0x0,8
tick,0x7ff8278cfeb4,78411872,0,0x0,8
tick,0x7ff8278cfeb4,78428506,0,0x0,8
tick,0x7ff8278cfeb4,78442832,0,0x0,8
tick,0x7ff8278cfeb4,78459275,0,0x0,8
tick,0x7ff8278cfeb4,78473738,0,0x0,8
tick,0x7ff8278cfeb4,78489041,0,0x0,8
tick,0x7ff8278cfeb4,78504742,0,0x0,8
tick,0x7ff8278cfeb4,78529556,0,0x0,8
tick,0x7ff8278cfeb4,78538784,0,0x0,8
tick,0x7ff8278cfeb4,78555688,0,0x0,8
tick,0x7ff8278cfeb4,78566688,0,0x0,8
tick,0x7ff8278cfeb4,78583070,0,0x0,8
tick,0x7ff8278cfeb4,78596473,0,0x0,8
tick,0x7ff8278cfeb4,78612560,0,0x0,8
tick,0x7ff8278cfeb4,78632143,0,0x0,8
tick,0x7ff8278cfeb4,78644189,0,0x0,8
tick,0x7ff8278cfeb4,78658939,0,0x0,8
tick,0x7ff8278cfeb4,78673513,0,0x0,8
tick,0x7ff8278cfeb4,78690132,0,0x0,8
tick,0x7ff8278cfeb4,78705796,0,0x0,8
tick,0x7ff8278cfeb4,78726590,0,0x0,8
tick,0x7ff8278cfeb4,78734659,0,0x0,8
tick,0x7ff8278cfeb4,78756148,0,0x0,8
tick,0x7ff8278cfeb4,78775176,0,0x0,8
tick,0x7ff8278cfeb4,78782527,0,0x0,8
tick,0x7ff8278cfeb4,78801337,0,0x0,8
tick,0x7ff8278cfeb4,78813211,0,0x0,8
tick,0x7ff8278cfeb4,78828828,0,0x0,8
tick,0x7ff8278cfeb4,78844646,0,0x0,8
tick,0x7ff8278cfeb4,78865163,0,0x0,8
tick,0x7ff8278cfeb4,78878642,0,0x0,8
tick,0x7ff8278cfeb4,78891987,0,0x0,8
tick,0x7ff8278cfeb4,78909317,0,0x0,8
tick,0x7ff8278cfeb4,78926248,0,0x0,8
tick,0x7ff8278cfeb4,78940440,0,0x0,8
tick,0x7ff8278cfeb4,78955653,0,0x0,8
tick,0x7ff8278cfeb4,78973273,0,0x0,8
tick,0x7ff8278cfeb4,78987307,0,0x0,8
tick,0x7ff8278cfeb4,79018053,0,0x0,8
tick,0x7ff8278cfeb4,79043664,0,0x0,8
tick,0x7ff8278cfeb4,79046428,0,0x0,8
tick,0x7ff8278cfeb4,79066951,0,0x0,8
tick,0x7ff8278cfeb4,79084746,0,0x0,8
tick,0x7ff8278cfeb4,79096837,0,0x0,8
tick,0x7ff8278cfeb4,79114687,0,0x0,8
tick,0x7ff8278cfeb4,79128207,0,0x0,8
tick,0x7ff8278cfeb4,79140591,0,0x0,8
tick,0x7ff8278cfeb4,79159640,0,0x0,8
tick,0x7ff8278cfeb4,79179373,0,0x0,8
tick,0x7ff8278cfeb4,79192925,0,0x0,8
tick,0x7ff8278cfeb4,79223583,0,0x0,8
tick,0x7ff8278cfeb4,79238000,0,0x0,8
tick,0x7ff8278cfeb4,79248321,0,0x0,8
tick,0x7ff8278cfeb4,79278398,0,0x0,8
tick,0x7ff8278cfeb4,79305059,0,0x0,8
tick,0x7ff8278cfeb4,79312479,0,0x0,8
tick,0x7ff8278cfeb4,79327809,0,0x0,8
tick,0x7ff8278cfeb4,79346787,0,0x0,8
tick,0x7ff8278cfeb4,79357819,0,0x0,8
tick,0x7ff8278cfeb4,79374876,0,0x0,8
tick,0x7ff8278cfeb4,79392993,0,0x0,8
tick,0x7ff8278cfeb4,79418557,0,0x0,8
tick,0x7ff8278cfeb4,79432137,0,0x0,8
tick,0x7ff8278cfeb4,79454386,0,0x0,8
tick,0x7ff8278cfeb4,79463497,0,0x0,8
tick,0x7ff8278cfeb4,79478880,0,0x0,8
tick,0x7ff8278cfeb4,79495338,0,0x0,8
tick,0x7ff8278cfeb4,79507789,0,0x0,8
tick,0x7ff8278cfeb4,79523971,0,0x0,8
tick,0x7ff8278cfeb4,79540380,0,0x0,8
tick,0x7ff8278cfeb4,79560407,0,0x0,8
tick,0x7ff8278cfeb4,79573115,0,0x0,8
tick,0x7ff8278cfeb4,79589307,0,0x0,8
tick,0x7ff8278cfeb4,79607116,0,0x0,8
tick,0x7ff8278cfeb4,79617431,0,0x0,8
tick,0x7ff8278cfeb4,79635066,0,0x0,8
tick,0x7ff8278cfeb4,79649091,0,0x0,8
tick,0x7ff8278cfeb4,79662966,0,0x0,8
tick,0x7ff8278cfeb4,79678124,0,0x0,8
tick,0x7ff8278cfeb4,79693356,0,0x0,8
tick,0x7ff8278cfeb4,79708975,0,0x0,8
tick,0x7ff8278cfeb4,79729430,0,0x0,8
tick,0x7ff8278cfeb4,79742503,0,0x0,8
tick,0x7ff8278cfeb4,79756482,0,0x0,8
tick,0x7ff8278cfeb4,79775972,0,0x0,8
tick,0x7ff8278cfeb4,79789847,0,0x0,8
tick,0x7ff8278cfeb4,79815695,0,0x0,8
tick,0x7ff8278cfeb4,79832650,0,0x0,8
tick,0x7ff8278cfeb4,79850378,0,0x0,8
tick,0x7ff8278cfeb4,79864237,0,0x0,8
tick,0x7ff8278cfeb4,79877748,0,0x0,8
tick,0x7ff8278cfeb4,79893855,0,0x0,8
tick,0x7ff8278cfeb4,79912276,0,0x0,8
tick,0x7ff8278cfeb4,79924911,0,0x0,8
tick,0x7ff8278cfeb4,79942072,0,0x0,8
tick,0x7ff8278cfeb4,79955731,0,0x0,8
tick,0x7ff8278cfeb4,79977065,0,0x0,8
tick,0x7ff8278cfeb4,79985848,0,0x0,8
tick,0x7ff8278cfeb4,80008147,0,0x0,8
tick,0x7ff8278cfeb4,80035943,0,0x0,8
tick,0x7ff8278cfeb4,80062139,0,0x0,8
tick,0x7ff8278cfeb4,80092803,0,0x0,8
tick,0x7ff8278cfeb4,80107541,0,0x0,8
tick,0x7ff8278cfeb4,80127108,0,0x0,8
tick,0x7ff8278cfeb4,80142964,0,0x0,8
tick,0x7ff8278cfeb4,80156555,0,0x0,8
tick,0x7ff8278cfeb4,80169468,0,0x0,8
tick,0x7ff8278cfeb4,80189911,0,0x0,8
tick,0x7ff8278cfeb4,80202125,0,0x0,8
tick,0x7ff8278cfeb4,80216679,0,0x0,8
tick,0x7ff8278cfeb4,80233115,0,0x0,8
tick,0x7ff8278cfeb4,80248453,0,0x0,8
tick,0x7ff8278cfeb4,80263161,0,0x0,8
tick,0x7ff8278cfeb4,80278477,0,0x0,8
tick,0x7ff8278cfeb4,80293331,0,0x0,8
tick,0x7ff8278cfeb4,80309464,0,0x0,8
tick,0x7ff8278cfeb4,80327473,0,0x0,8
tick,0x7ff8278cfeb4,80340238,0,0x0,8
tick,0x7ff8278cfeb4,80357933,0,0x0,8
tick,0x7ff8278cfeb4,80374040,0,0x0,8
tick,0x7ff8278cfeb4,80390302,0,0x0,8
tick,0x7ff8278cfeb4,80407365,0,0x0,8
tick,0x7ff8278cfeb4,80429191,0,0x0,8
tick,0x7ff8278cfeb4,80434775,0,0x0,8
tick,0x7ff8278cfeb4,80449024,0,0x0,8
tick,0x7ff8278cfeb4,80464924,0,0x0,8
tick,0x7ff8278cfeb4,80479922,0,0x0,8
tick,0x7ff8278cfeb4,80505942,0,0x0,8
tick,0x7ff8278cfeb4,80528557,0,0x0,8
tick,0x7ff8278cfeb4,80544224,0,0x0,8
tick,0x7ff8278cfeb4,80560417,0,0x0,8
tick,0x7ff8278cfeb4,80582010,0,0x0,8
tick,0x7ff8278cfeb4,80591237,0,0x0,8
tick,0x7ff8278cfeb4,80607091,0,0x0,8
tick,0x7ff8278cfeb4,80625279,0,0x0,8
tick,0x7ff8278cfeb4,80634298,0,0x0,8
tick,0x7ff8278cfeb4,80659991,0,0x0,8
tick,0x7ff8278cfeb4,80666992,0,0x0,8
tick,0x7ff8278cfeb4,80681603,0,0x0,8
tick,0x7ff8278cfeb4,80696283,0,0x0,8
tick,0x7ff8278cfeb4,80713423,0,0x0,8
tick,0x7ff8278cfeb4,80726011,0,0x0,8
tick,0x7ff8278cfeb4,80744461,0,0x0,8
tick,0x7ff8278cfeb4,80765749,0,0x0,8
tick,0x7ff8278cfeb4,80773620,0,0x0,8
tick,0x7ff8278cfeb4,80790918,0,0x0,8
tick,0x7ff8278cfeb4,80808471,0,0x0,8
tick,0x7ff8278cfeb4,80824351,0,0x0,8
tick,0x7ff8278cfeb4,80858850,0,0x0,8
tick,0x7ff8278cfeb4,80875350,0,0x0,8
tick,0x7ff8278cfeb4,80877727,0,0x0,8
tick,0x7ff8278cfeb4,80900464,0,0x0,8
tick,0x7ff8278cfeb4,80935494,0,0x0,8
tick,0x7ff8278cfeb4,80961397,0,0x0,8
tick,0x7ff8278cfeb4,80991322,0,0x0,8
tick,0x7ff8278cfeb4,81006231,0,0x0,8
tick,0x7ff8278cfeb4,81030304,0,0x0,8
tick,0x7ff8278cfeb4,81082032,0,0x0,8
tick,0x7ff8278cfeb4,81130842,0,0x0,8
tick,0x7ff8278cfeb4,81149083,0,0x0,8
tick,0x7ff8278cfeb4,81159711,0,0x0,8
tick,0x7ff8278cfeb4,81179215,0,0x0,8
tick,0x7ff8278cfeb4,81184510,0,0x0,8
tick,0x7ff8278cfeb4,81198036,0,0x0,8
tick,0x7ff8278cfeb4,81214833,0,0x0,8
tick,0x7ff8278cfeb4,81227598,0,0x0,8
tick,0x7ff8278cfeb4,81249562,0,0x0,8
tick,0x7ff8278cfeb4,81260932,0,0x0,8
tick,0x7ff8278cfeb4,81276534,0,0x0,8
tick,0x7ff8278cfeb4,81292475,0,0x0,8
tick,0x7ff8278cfeb4,81310773,0,0x0,8
tick,0x7ff8278cfeb4,81324566,0,0x0,8
tick,0x7ff8278cfeb4,81343778,0,0x0,8
tick,0x7ff8278cfeb4,81351954,0,0x0,8
tick,0x7ff8278cfeb4,81366713,0,0x0,8
tick,0x7ff8278cfeb4,81385473,0,0x0,8
tick,0x7ff8278cfeb4,81399613,0,0x0,8
tick,0x7ff8278cfeb4,81415168,0,0x0,8
tick,0x7ff8278cfeb4,81430381,0,0x0,8
tick,0x7ff8278cfeb4,81445344,0,0x0,8
tick,0x7ff8278cfeb4,81459307,0,0x0,8
tick,0x7ff8278cfeb4,81475906,0,0x0,8
tick,0x7ff8278cfeb4,81493097,0,0x0,8
tick,0x7ff8278cfeb4,81507860,0,0x0,8
tick,0x7ff8278cfeb4,81527026,0,0x0,8
tick,0x7ff8278cfeb4,81544689,0,0x0,8
tick,0x7ff8278cfeb4,81553489,0,0x0,8
tick,0x7ff8278cfeb4,81566999,0,0x0,8
tick,0x7ff8278cfeb4,81595821,0,0x0,8
tick,0x7ff8278cfeb4,81597951,0,0x0,8
tick,0x7ff8278cfeb4,81614668,0,0x0,8
tick,0x7ff8278cfeb4,81631803,0,0x0,8
tick,0x7ff8278cfeb4,81646600,0,0x0,8
tick,0x7ff8278cfeb4,81659428,0,0x0,8
tick,0x7ff8278cfeb4,81676557,0,0x0,8
tick,0x7ff8278cfeb4,81692811,0,0x0,8
tick,0x7ff8278cfeb4,81708781,0,0x0,8
tick,0x7ff8278cfeb4,81718789,0,0x0,8
tick,0x7ff8278cfeb4,81734300,0,0x0,8
tick,0x7ff8278cfeb4,81750093,0,0x0,8
tick,0x7ff8278cfeb4,81765047,0,0x0,8
tick,0x7ff8278cfeb4,81779342,0,0x0,8
tick,0x7ff8278cfeb4,81795289,0,0x0,8
tick,0x7ff8278cfeb4,81813443,0,0x0,8
tick,0x7ff8278cfeb4,81825570,0,0x0,8
tick,0x7ff8278cfeb4,81845180,0,0x0,8
tick,0x7ff8278cfeb4,81866734,0,0x0,8
tick,0x7ff8278cfeb4,81873448,0,0x0,8
tick,0x7ff8278cfeb4,81892422,0,0x0,8
tick,0x7ff8278cfeb4,81907175,0,0x0,8
tick,0x7ff8278cfeb4,81919697,0,0x0,8
tick,0x7ff8278cfeb4,81934779,0,0x0,8
tick,0x7ff8278cfeb4,81949458,0,0x0,8
tick,0x7ff8278cfeb4,81965903,0,0x0,8
tick,0x7ff8278cfeb4,81981813,0,0x0,8
tick,0x7ff8278cfeb4,81996691,0,0x0,8
tick,0x7ff8278cfeb4,82013444,0,0x0,8
tick,0x7ff8278cfeb4,82029814,0,0x0,8
tick,0x7ff8278cfeb4,82058658,0,0x0,8
tick,0x7ff8278cfeb4,82078088,0,0x0,8
tick,0x7ff8278cfeb4,82094887,0,0x0,8
tick,0x7ff8278cfeb4,82116290,0,0x0,8
tick,0x7ff8278cfeb4,82125698,0,0x0,8
tick,0x7ff8278cfeb4,82136264,0,0x0,8
tick,0x7ff8278cfeb4,82152199,0,0x0,8
tick,0x7ff8278cfeb4,82166936,0,0x0,8
tick,0x7ff8278cfeb4,82183884,0,0x0,8
tick,0x7ff8278cfeb4,82198160,0,0x0,8
tick,0x7ff8278cfeb4,82214788,0,0x0,8
tick,0x7ff8278cfeb4,82229992,0,0x0,8
tick,0x7ff8278cfeb4,82245246,0,0x0,8
tick,0x7ff8278cfeb4,82259890,0,0x0,8
tick,0x7ff8278cfeb4,82277030,0,0x0,8
tick,0x7ff8278cfeb4,82297803,0,0x0,8
tick,0x7ff8278cfeb4,82325190,0,0x0,8
tick,0x7ff8278cfeb4,82348077,0,0x0,8
tick,0x7ff8278cfeb4,82352059,0,0x0,8
tick,0x7ff8278cfeb4,82375659,0,0x0,8
tick,0x7ff8278cfeb4,82398852,0,0x0,8
tick,0x7ff8278cfeb4,82419628,0,0x0,8
tick,0x7ff8278cfeb4,82438610,0,0x0,8
tick,0x7ff8278cfeb4,82453771,0,0x0,8
tick,0x7ff8278cfeb4,82475452,0,0x0,8
tick,0x7ff8278cfeb4,82508397,0,0x0,8
tick,0x7ff8278cfeb4,82533648,0,0x0,8
tick,0x7ff8278cfeb4,82539109,0,0x0,8
tick,0x7ff8278cfeb4,82554116,0,0x0,8
tick,0x7ff8278cfeb4,82568918,0,0x0,8
tick,0x7ff8278cfeb4,82592362,0,0x0,8
tick,0x7ff8278cfeb4,82599087,0,0x0,8
tick,0x7ff8278cfeb4,82614512,0,0x0,8
tick,0x7ff8278cfeb4,82629058,0,0x0,8
tick,0x7ff8278cfeb4,82654520,0,0x0,8
tick,0x7ff8278cfeb4,82663297,0,0x0,8
tick,0x7ff8278cfeb4,82684898,0,0x0,8
tick,0x7ff8278cfeb4,82702833,0,0x0,8
tick,0x7ff8278cfeb4,82713792,0,0x0,8
tick,0x7ff8278cfeb4,82725859,0,0x0,8
tick,0x7ff8278cfeb4,82737564,0,0x0,8
tick,0x7ff8278cfeb4,82759134,0,0x0,8
tick,0x7ff8278cfeb4,82768304,0,0x0,8
tick,0x7ff8278cfeb4,82783468,0,0x0,8
tick,0x7ff8278cfeb4,82797790,0,0x0,8
tick,0x7ff8278cfeb4,82812599,0,0x0,8
tick,0x7ff8278cfeb4,82827197,0,0x0,8
tick,0x7ff8278cfeb4,82844198,0,0x0,8
tick,0x7ff8278cfeb4,82859781,0,0x0,8
tick,0x7ff8278cfeb4,82876715,0,0x0,8
tick,0x7ff8278cfeb4,82894260,0,0x0,8
tick,0x7ff8278cfeb4,82914070,0,0x0,8
tick,0x7ff8278cfeb4,82919854,0,0x0,8
tick,0x7ff8278cfeb4,82935009,0,0x0,8
tick,0x7ff8278cfeb4,82950119,0,0x0,8
tick,0x7ff8278cfeb4,82966231,0,0x0,8
tick,0x7ff8278cfeb4,82982117,0,0x0,8
tick,0x7ff8278cfeb4,82997961,0,0x0,8
tick,0x7ff8278cfeb4,83014321,0,0x0,8
tick,0x7ff8278cfeb4,83028300,0,0x0,8
tick,0x7ff8278cfeb4,83045299,0,0x0,8
tick,0x7ff8278cfeb4,83062108,0,0x0,8
tick,0x7ff8278cfeb4,83077369,0,0x0,8
tick,0x7ff8278cfeb4,83094132,0,0x0,8
tick,0x7ff8278cfeb4,83115362,0,0x0,8
tick,0x7ff8278cfeb4,83127809,0,0x0,8
tick,0x7ff8278cfeb4,83143178,0,0x0,8
tick,0x7ff8278cfeb4,83152401,0,0x0,8
tick,0x7ff8278cfeb4,83189841,0,0x0,8
tick,0x7ff8278cfeb4,83198232,0,0x0,8
tick,0x7ff8278cfeb4,83213851,0,0x0,8
tick,0x7ff8278cfeb4,83229206,0,0x0,8
tick,0x7ff8278cfeb4,83268504,0,0x0,8
tick,0x7ff8278cfeb4,83276763,0,0x0,8
tick,0x7ff8278cfeb4,83296225,0,0x0,8
tick,0x7ff8278cfeb4,83304055,0,0x0,8
tick,0x7ff8278cfeb4,83320263,0,0x0,8
tick,0x7ff8278cfeb4,83346476,0,0x0,8
tick,0x7ff8278cfeb4,83363853,0,0x0,8
tick,0x7ff8278cfeb4,83368453,0,0x0,8
tick,0x7ff8278cfeb4,83388739,0,0x0,8
tick,0x7ff8278cfeb4,83400368,0,0x0,8
tick,0x7ff8278cfeb4,83415854,0,0x0,8
tick,0x7ff8278cfeb4,83433485,0,0x0,8
tick,0x7ff8278cfeb4,83447759,0,0x0,8
tick,0x7ff8278cfeb4,83483208,0,0x0,8
tick,0x7ff8278cfeb4,83493737,0,0x0,8
tick,0x7ff8278cfeb4,83504961,0,0x0,8
tick,0x7ff8278cfeb4,83529364,0,0x0,8
tick,0x7ff8278cfeb4,83536127,0,0x0,8
tick,0x7ff8278cfeb4,83555796,0,0x0,8
tick,0x7ff8278cfeb4,83566076,0,0x0,8
tick,0x7ff8278cfeb4,83589126,0,0x0,8
tick,0x7ff8278cfeb4,83597512,0,0x0,8
tick,0x7ff8278cfeb4,83617109,0,0x0,8
tick,0x7ff8278cfeb4,83629090,0,0x0,8
tick,0x7ff8278cfeb4,83649773,0,0x0,8
tick,0x7ff8278cfeb4,83663631,0,0x0,8
tick,0x7ff8278cfeb4,83693498,0,0x0,8
tick,0x7ff8278cfeb4,83712326,0,0x0,8
tick,0x7ff8278cfeb4,83730412,0,0x0,8
tick,0x7ff8278cfeb4,83739030,0,0x0,8
tick,0x7ff8278cfeb4,83754921,0,0x0,8
tick,0x7ff8278cfeb4,83766749,0,0x0,8
tick,0x7ff8278cfeb4,83781901,0,0x0,8
tick,0x7ff8278cfeb4,83814585,0,0x0,8
tick,0x7ff8278cfeb4,83829444,0,0x0,8
tick,0x7ff8278cfeb4,83849967,0,0x0,8
tick,0x7ff8278cfeb4,83869395,0,0x0,8
tick,0x7ff8278cfeb4,83875107,0,0x0,8
tick,0x7ff8278cfeb4,83906921,0,0x0,8
tick,0x7ff8278cfeb4,83944287,0,0x0,8
tick,0x7ff8278cfeb4,83967428,0,0x0,8
tick,0x7ff8278cfeb4,84006084,0,0x0,8
tick,0x7ff8278cfeb4,84027520,0,0x0,8
tick,0x7ff8278cfeb4,84039866,0,0x0,8
tick,0x7ff8278cfeb4,84063378,0,0x0,8
tick,0x7ff8278cfeb4,84099857,0,0x0,8
tick,0x7ff8278cfeb4,84112411,0,0x0,8
tick,0x7ff8278cfeb4,84136102,0,0x0,8
tick,0x7ff8278cfeb4,84156785,0,0x0,8
tick,0x7ff8278cfeb4,84180216,0,0x0,8
tick,0x7ff8278cfeb4,84187450,0,0x0,8
tick,0x7ff8278cfeb4,84206722,0,0x0,8
tick,0x7ff8278cfeb4,84215644,0,0x0,8
tick,0x7ff8278cfeb4,84232794,0,0x0,8
tick,0x7ff8278cfeb4,84255271,0,0x0,8
tick,0x7ff8278cfeb4,84263013,0,0x0,8
tick,0x7ff8278cfeb4,84281662,0,0x0,8
tick,0x7ff8278cfeb4,84298398,0,0x0,8
tick,0x7ff8278cfeb4,84316303,0,0x0,8
tick,0x7ff8278cfeb4,84340682,0,0x0,8
tick,0x7ff8278cfeb4,84376695,0,0x0,8
tick,0x7ff8278cfeb4,84394234,0,0x0,8
tick,0x7ff8278cfeb4,84405908,0,0x0,8
tick,0x7ff8278cfeb4,84419109,0,0x0,8
tick,0x7ff8278cfeb4,84435662,0,0x0,8
tick,0x7ff8278cfeb4,84449079,0,0x0,8
tick,0x7ff8278cfeb4,84465676,0,0x0,8
tick,0x7ff8278cfeb4,84483307,0,0x0,8
tick,0x7ff8278cfeb4,84497376,0,0x0,8
tick,0x7ff8278cfeb4,84512828,0,0x0,8
tick,0x7ff8278cfeb4,84529091,0,0x0,8
tick,0x7ff8278cfeb4,84545369,0,0x0,8
tick,0x7ff8278cfeb4,84561451,0,0x0,8
tick,0x7ff8278cfeb4,84574108,0,0x0,8
tick,0x7ff8278cfeb4,84588624,0,0x0,8
tick,0x7ff8278cfeb4,84605998,0,0x0,8
tick,0x7ff8278cfeb4,84629407,0,0x0,8
tick,0x7ff8278cfeb4,84635703,0,0x0,8
tick,0x7ff8278cfeb4,84651263,0,0x0,8
tick,0x7ff8278cfeb4,84668402,0,0x0,8
tick,0x7ff8278cfeb4,84683321,0,0x0,8
tick,0x7ff8278cfeb4,84698595,0,0x0,8
tick,0x7ff8278cfeb4,84734661,0,0x0,8
tick,0x7ff8278cfeb4,84746196,0,0x0,8
tick,0x7ff8278cfeb4,84758905,0,0x0,8
tick,0x7ff8278cfeb4,84774196,0,0x0,8
tick,0x7ff8278cfeb4,84789325,0,0x0,8
tick,0x7ff8278cfeb4,84806758,0,0x0,8
tick,0x7ff8278cfeb4,84823425,0,0x0,8
tick,0x7ff8278cfeb4,84836913,0,0x0,8
tick,0x7ff8278cfeb4,84852469,0,0x0,8
tick,0x7ff8278cfeb4,84867031,0,0x0,8
tick,0x7ff8278cfeb4,84881910,0,0x0,8
tick,0x7ff8278cfeb4,84905045,0,0x0,8
tick,0x7ff8278cfeb4,84915026,0,0x0,8
tick,0x7ff8278cfeb4,84929963,0,0x0,8
tick,0x7ff8278cfeb4,84945167,0,0x0,8
tick,0x7ff8278cfeb4,84962701,0,0x0,8
tick,0x7ff8278cfeb4,84978708,0,0x0,8
tick,0x7ff8278cfeb4,84994699,0,0x0,8
tick,0x7ff8278cfeb4,85007414,0,0x0,8
tick,0x7ff8278cfeb4,85029352,0,0x0,8
tick,0x7ff8278cfeb4,85039441,0,0x0,8
tick,0x7ff8278cfeb4,85055854,0,0x0,8
tick,0x7ff8278cfeb4,85078981,0,0x0,8
tick,0x7ff8278cfeb4,85107013,0,0x0,8
tick,0x7ff8278cfeb4,85122677,0,0x0,8
tick,0x7ff8278cfeb4,85137709,0,0x0,8
tick,0x7ff8278cfeb4,85149300,0,0x0,8
tick,0x7ff8278cfeb4,85162550,0,0x0,8
tick,0x7ff8278cfeb4,85177968,0,0x0,8
tick,0x7ff8278cfeb4,85193171,0,0x0,8
tick,0x7ff8278cfeb4,85211732,0,0x0,8
tick,0x7ff8278cfeb4,85224046,0,0x0,8
tick,0x7ff8278cfeb4,85240452,0,0x0,8
tick,0x7ff8278cfeb4,85255973,0,0x0,8
tick,0x7ff8278cfeb4,85270623,0,0x0,8
tick,0x7ff8278cfeb4,85285892,0,0x0,8
tick,0x7ff8278cfeb4,85302671,0,0x0,8
tick,0x7ff8278cfeb4,85315784,0,0x0,8
tick,0x7ff8278cfeb4,85333261,0,0x0,8
tick,0x7ff8278cfeb4,85345644,0,0x0,8
tick,0x7ff8278cfeb4,85362343,0,0x0,8
tick,0x7ff8278cfeb4,85377874,0,0x0,8
tick,0x7ff8278cfeb4,85395411,0,0x0,8
tick,0x7ff8278cfeb4,85412959,0,0x0,8
tick,0x7ff8278cfeb4,85429225,0,0x0,8
tick,0x7ff8278cfeb4,85439816,0,0x0,8
tick,0x7ff8278cfeb4,85464105,0,0x0,8
tick,0x7ff8278cfeb4,85473791,0,0x0,8
tick,0x7ff8278cfeb4,85487632,0,0x0,8
tick,0x7ff8278cfeb4,85502959,0,0x0,8
tick,0x7ff8278cfeb4,85517789,0,0x0,8
tick,0x7ff8278cfeb4,85538459,0,0x0,8
tick,0x7ff8278cfeb4,85548969,0,0x0,8
tick,0x7ff8278cfeb4,85573996,0,0x0,8
tick,0x7ff8278cfeb4,85580423,0,0x0,8
tick,0x7ff8278cfeb4,85602837,0,0x0,8
tick,0x7ff8278cfeb4,85625316,0,0x0,8
tick,0x7ff8278cfeb4,85663978,0,0x0,8
tick,0x7ff8278cfeb4,85679871,0,0x0,8
tick,0x7ff8278cfeb4,85690506,0,0x0,8
tick,0x7ff8278cfeb4,85704182,0,0x0,8
tick,0x7ff8278cfeb4,85716295,0,0x0,8
tick,0x7ff8278cfeb4,85732077,0,0x0,8
tick,0x7ff8278cfeb4,85747357,0,0x0,8
tick,0x7ff8278cfeb4,85765385,0,0x0,8
tick,0x7ff8278cfeb4,85783166,0,0x0,8
tick,0x7ff8278cfeb4,85795805,0,0x0,8
tick,0x7ff8278cfeb4,85815296,0,0x0,8
tick,0x7ff8278cfeb4,85831823,0,0x0,8
tick,0x7ff8278cfeb4,85839749,0,0x0,8
tick,0x7ff8278cfeb4,85853927,0,0x0,8
tick,0x7ff8278cfeb4,85875413,0,0x0,8
tick,0x7ff8278cfeb4,85889883,0,0x0,8
tick,0x7ff8278cfeb4,85906626,0,0x0,8
tick,0x7ff8278cfeb4,85917980,0,0x0,8
tick,0x7ff8278cfeb4,85933233,0,0x0,8
tick,0x7ff8278cfeb4,85949912,0,0x0,8
tick,0x7ff8278cfeb4,85965671,0,0x0,8
tick,0x7ff8278cfeb4,85982711,0,0x0,8
tick,0x7ff8278cfeb4,85999605,0,0x0,8
tick,0x7ff8278cfeb4,86013271,0,0x0,8
tick,0x7ff8278cfeb4,86025272,0,0x0,8
tick,0x7ff8278cfeb4,86045675,0,0x0,8
tick,0x7ff8278cfeb4,86066290,0,0x0,8
tick,0x7ff8278cfeb4,86073741,0,0x0,8
tick,0x7ff8278cfeb4,86088830,0,0x0,8
tick,0x7ff8278cfeb4,86108807,0,0x0,8
tick,0x7ff8278cfeb4,86119757,0,0x0,8
tick,0x7ff8278cfeb4,86137707,0,0x0,8
tick,0x7ff8278cfeb4,86152540,0,0x0,8
tick,0x7ff8278cfeb4,86166885,0,0x0,8
tick,0x7ff8278cfeb4,86181979,0,0x0,8
tick,0x7ff8278cfeb4,86196524,0,0x0,8
tick,0x7ff8278cfeb4,86212603,0,0x0,8
tick,0x7ff8278cfeb4,86225781,0,0x0,8
tick,0x7ff8278cfeb4,86242357,0,0x0,8
tick,0x7ff8278cfeb4,86257257,0,0x0,8
tick,0x7ff8278cfeb4,86272695,0,0x0,8
tick,0x7ff8278cfeb4,86289683,0,0x0,8
tick,0x7ff8278cfeb4,86304568,0,0x0,8
tick,0x7ff8278cfeb4,86321975,0,0x0,8
tick,0x7ff8278cfeb4,86335611,0,0x0,8
tick,0x7ff8278cfeb4,86351564,0,0x0,8
tick,0x7ff8278cfeb4,86367292,0,0x0,8
tick,0x7ff8278cfeb4,86383594,0,0x0,8
tick,0x7ff8278cfeb4,86399429,0,0x0,8
tick,0x7ff8278cfeb4,86414859,0,0x0,8
tick,0x7ff8278cfeb4,86431822,0,0x0,8
tick,0x7ff8278cfeb4,86447263,0,0x0,8
tick,0x7ff8278cfeb4,86463608,0,0x0,8
tick,0x7ff8278cfeb4,86479128,0,0x0,8
tick,0x7ff8278cfeb4,86498006,0,0x0,8
tick,0x7ff8278cfeb4,86508716,0,0x0,8
tick,0x7ff8278cfeb4,86524870,0,0x0,8
tick,0x7ff8278cfeb4,86542494,0,0x0,8
tick,0x7ff8278cfeb4,86555851,0,0x0,8
tick,0x7ff8278cfeb4,86572302,0,0x0,8
tick,0x7ff8278cfeb4,86587885,0,0x0,8
tick,0x7ff8278cfeb4,86602866,0,0x0,8
tick,0x7ff8278cfeb4,86619611,0,0x0,8
tick,0x7ff8278cfeb4,86634953,0,0x0,8
tick,0x7ff8278cfeb4,86651273,0,0x0,8
tick,0x7ff8278cfeb4,86666342,0,0x0,8
tick,0x7ff8278cfeb4,86679892,0,0x0,8
tick,0x7ff8278cfeb4,86697156,0,0x0,8
tick,0x7ff8278cfeb4,86713132,0,0x0,8
tick,0x7ff8278cfeb4,86725041,0,0x0,8
tick,0x7ff8278cfeb4,86742795,0,0x0,8
tick,0x7ff8278cfeb4,86755755,0,0x0,8
tick,0x7ff8278cfeb4,86772513,0,0x0,8
tick,0x7ff8278cfeb4,86789762,0,0x0,8
tick,0x7ff8278cfeb4,86802809,0,0x0,8
tick,0x7ff8278cfeb4,86819224,0,0x0,8
tick,0x7ff8278cfeb4,86833782,0,0x0,8
tick,0x7ff8278cfeb4,86849086,0,0x0,8
tick,0x7ff8278cfeb4,86867650,0,0x0,8
tick,0x7ff8278cfeb4,86879901,0,0x0,8
tick,0x7ff8278cfeb4,86897848,0,0x0,8
tick,0x7ff8278cfeb4,86913067,0,0x0,8
tick,0x7ff8278cfeb4,86948019,0,0x0,8
tick,0x7ff8278cfeb4,86974670,0,0x0,8
tick,0x7ff8278cfeb4,86992975,0,0x0,8
tick,0x7ff8278cfeb4,87007470,0,0x0,8
tick,0x7ff8278cfeb4,87039458,0,0x0,8
tick,0x7ff8278cfeb4,87059062,0,0x0,8
tick,0x7ff8278cfeb4,87092439,0,0x0,8
tick,0x7ff8278cfeb4,87107429,0,0x0,8
tick,0x7ff8278cfeb4,87132028,0,0x0,8
tick,0x7ff8278cfeb4,87170623,0,0x0,8
tick,0x7ff8278cfeb4,87188804,0,0x0,8
tick,0x7ff8278cfeb4,87225965,0,0x0,8
tick,0x7ff8278cfeb4,87250295,0,0x0,8
tick,0x7ff8278cfeb4,87275010,0,0x0,8
tick,0x7ff8278cfeb4,87291869,0,0x0,8
tick,0x7ff8278cfeb4,87299984,0,0x0,8
tick,0x7ff8278cfeb4,87316388,0,0x0,8
tick,0x7ff8278cfeb4,87347526,0,0x0,8
tick,0x7ff8278cfeb4,87373994,0,0x0,8
tick,0x7ff8278cfeb4,87393767,0,0x0,8
tick,0x7ff8278cfeb4,87414552,0,0x0,8
tick,0x7ff8278cfeb4,87424979,0,0x0,8
tick,0x7ff8278cfeb4,87439409,0,0x0,8
tick,0x7ff8278cfeb4,87467337,0,0x0,8
tick,0x7ff8278cfeb4,87485484,0,0x0,8
tick,0x7ff8278cfeb4,87514902,0,0x0,8
tick,0x7ff8278cfeb4,87531318,0,0x0,8
tick,0x7ff8278cfeb4,87553375,0,0x0,8
tick,0x7ff8278cfeb4,87560085,0,0x0,8
tick,0x7ff8278cfeb4,87605407,0,0x0,8
tick,0x7ff8278cfeb4,87651428,0,0x0,8
tick,0x7ff8278cfeb4,87666308,0,0x0,8
tick,0x7ff8278cfeb4,87675184,0,0x0,8
tick,0x7ff8278cfeb4,87690540,0,0x0,8
tick,0x7ff8278cfeb4,87722391,0,0x0,8
tick,0x7ff8278cfeb4,87743663,0,0x0,8
tick,0x7ff8278cfeb4,87748534,0,0x0,8
tick,0x7ff8278cfeb4,87767508,0,0x0,8
tick,0x7ff8278cfeb4,87791895,0,0x0,8
tick,0x7ff8278cfeb4,87810185,0,0x0,8
tick,0x7ff8278cfeb4,87835126,0,0x0,8
tick,0x7ff8278cfeb4,87839871,0,0x0,8
tick,0x7ff8278cfeb4,87855824,0,0x0,8
tick,0x7ff8278cfeb4,87874296,0,0x0,8
tick,0x7ff8278cfeb4,87889137,0,0x0,8
tick,0x7ff8278cfeb4,87902080,0,0x0,8
tick,0x7ff8278cfeb4,87926731,0,0x0,8
tick,0x7ff8278cfeb4,87932259,0,0x0,8
tick,0x7ff8278cfeb4,87955451,0,0x0,8
tick,0x7ff8278cfeb4,87965817,0,0x0,8
tick,0x7ff8278cfeb4,87979300,0,0x0,8
tick,0x7ff8278cfeb4,87998412,0,0x0,8
tick,0x7ff8278cfeb4,88010670,0,0x0,8
tick,0x7ff8278cfeb4,88025335,0,0x0,8
tick,0x7ff8278cfeb4,88041118,0,0x0,8
tick,0x7ff8278cfeb4,88054757,0,0x0,8
tick,0x7ff8278cfeb4,88069555,0,0x0,8
tick,0x7ff8278cfeb4,88103564,0,0x0,8
tick,0x7ff8278cfeb4,88116545,0,0x0,8
tick,0x7ff8278cfeb4,88133580,0,0x0,8
tick,0x7ff8278cfeb4,88148765,0,0x0,8
tick,0x7ff8278cfeb4,88165372,0,0x0,8
tick,0x7ff8278cfeb4,88182484,0,0x0,8
tick,0x7ff8278cfeb4,88194079,0,0x0,8
tick,0x7ff8278cfeb4,88209166,0,0x0,8
tick,0x7ff8278cfeb4,88224103,0,0x0,8
tick,0x7ff8278cfeb4,88244104,0,0x0,8
tick,0x7ff8278cfeb4,88257162,0,0x0,8
tick,0x7ff8278cfeb4,88272278,0,0x0,8
tick,0x7ff8278cfeb4,88288810,0,0x0,8
tick,0x7ff8278cfeb4,88303703,0,0x0,8
tick,0x7ff8278cfeb4,88317783,0,0x0,8
tick,0x7ff8278cfeb4,88333767,0,0x0,8
tick,0x7ff8278cfeb4,88350211,0,0x0,8
tick,0x7ff8278cfeb4,88365174,0,0x0,8
tick,0x7ff8278cfeb4,88382561,0,0x0,8
tick,0x7ff8278cfeb4,88402597,0,0x0,8
tick,0x7ff8278cfeb4,88415280,0,0x0,8
tick,0x7ff8278cfeb4,88431818,0,0x0,8
tick,0x7ff8278cfeb4,88444115,0,0x0,8
tick,0x7ff8278cfeb4,88459861,0,0x0,8
tick,0x7ff8278cfeb4,88476604,0,0x0,8
tick,0x7ff8278cfeb4,88493030,0,0x0,8
tick,0x7ff8278cfeb4,88510232,0,0x0,8
tick,0x7ff8278cfeb4,88523846,0,0x0,8
tick,0x7ff8278cfeb4,88537883,0,0x0,8
tick,0x7ff8278cfeb4,88553158,0,0x0,8
tick,0x7ff8278cfeb4,88572640,0,0x0,8
tick,0x7ff8278cfeb4,88582725,0,0x0,8
tick,0x7ff8278cfeb4,88598868,0,0x0,8
tick,0x7ff8278cfeb4,88615329,0,0x0,8
tick,0x7ff8278cfeb4,88632151,0,0x0,8
tick,0x7ff8278cfeb4,88645158,0,0x0,8
tick,0x7ff8278cfeb4,88659761,0,0x0,8
tick,0x7ff8278cfeb4,88676169,0,0x0,8
tick,0x7ff8278cfeb4,88709708,0,0x0,8
tick,0x7ff8278cfeb4,88722166,0,0x0,8
tick,0x7ff8278cfeb4,88739268,0,0x0,8
tick,0x7ff8278cfeb4,88754124,0,0x0,8
tick,0x7ff8278cfeb4,88769424,0,0x0,8
tick,0x7ff8278cfeb4,88785602,0,0x0,8
tick,0x7ff8278cfeb4,88803806,0,0x0,8
tick,0x7ff8278cfeb4,88822854,0,0x0,8
tick,0x7ff8278cfeb4,88833184,0,0x0,8
tick,0x7ff8278cfeb4,88849682,0,0x0,8
tick,0x7ff8278cfeb4,88865865,0,0x0,8
tick,0x7ff8278cfeb4,88882139,0,0x0,8
tick,0x7ff8278cfeb4,88898194,0,0x0,8
tick,0x7ff8278cfeb4,88915911,0,0x0,8
tick,0x7ff8278cfeb4,88926347,0,0x0,8
tick,0x7ff8278cfeb4,88942469,0,0x0,8
tick,0x7ff8278cfeb4,88956902,0,0x0,8
tick,0x7ff8278cfeb4,88973852,0,0x0,8
tick,0x7ff8278cfeb4,88989713,0,0x0,8
tick,0x7ff8278cfeb4,89004075,0,0x0,8
tick,0x7ff8278cfeb4,89026908,0,0x0,8
tick,0x7ff8278cfeb4,89033943,0,0x0,8
tick,0x7ff8278cfeb4,89052564,0,0x0,8
tick,0x7ff8278cfeb4,89072797,0,0x0,8
tick,0x7ff8278cfeb4,89092382,0,0x0,8
tick,0x7ff8278cfeb4,89108091,0,0x0,8
tick,0x7ff8278cfeb4,89125041,0,0x0,8
tick,0x7ff8278cfeb4,89129767,0,0x0,8
tick,0x7ff8278cfeb4,89154490,0,0x0,8
tick,0x7ff8278cfeb4,89178055,0,0x0,8
tick,0x7ff8278cfeb4,89224295,0,0x0,8
tick,0x7ff8278cfeb4,89282406,0,0x0,8
tick,0x7ff8278cfeb4,89339074,0,0x0,8
tick,0x7ff8278cfeb4,89369299,0,0x0,8
tick,0x7ff8278cfeb4,89376230,0,0x0,8
tick,0x7ff8278cfeb4,89412285,0,0x0,8
tick,0x7ff8278cfeb4,89424121,0,0x0,8
tick,0x7ff8278cfeb4,89436205,0,0x0,8
tick,0x7ff8278cfeb4,89457141,0,0x0,8
tick,0x7ff8278cfeb4,89473043,0,0x0,8
tick,0x7ff8278cfeb4,89482458,0,0x0,8
tick,0x7ff8278cfeb4,89500599,0,0x0,8
tick,0x7ff8278cfeb4,89535309,0,0x0,8
tick,0x7ff8278cfeb4,89558441,0,0x0,8
tick,0x7ff8278cfeb4,89574500,0,0x0,8
tick,0x7ff8278cfeb4,89590179,0,0x0,8
tick,0x7ff8278cfeb4,89605777,0,0x0,8
tick,0x7ff8278cfeb4,89622447,0,0x0,8
tick,0x7ff8278cfeb4,89636266,0,0x0,8
tick,0x7ff8278cfeb4,89651927,0,0x0,8
tick,0x7ff8278cfeb4,89666670,0,0x0,8
tick,0x7ff8278cfeb4,89684249,0,0x0,8
tick,0x7ff8278cfeb4,89699676,0,0x0,8
tick,0x7ff8278cfeb4,89712889,0,0x0,8
tick,0x7ff8278cfeb4,89739258,0,0x0,8
tick,0x7ff8278cfeb4,89744086,0,0x0,8
tick,0x7ff8278cfeb4,89759411,0,0x0,8
tick,0x7ff8278cfeb4,89774796,0,0x0,8
tick,0x7ff8278cfeb4,89790594,0,0x0,8
tick,0x7ff8278cfeb4,89805759,0,0x0,8
tick,0x7ff8278cfeb4,89822658,0,0x0,8
tick,0x7ff8278cfeb4,89835986,0,0x0,8
tick,0x7ff8278cfeb4,89855136,0,0x0,8
tick,0x7ff8278cfeb4,89869592,0,0x0,8
tick,0x7ff8278cfeb4,89888738,0,0x0,8
tick,0x7ff8278cfeb4,89909239,0,0x0,8
tick,0x7ff8278cfeb4,89912926,0,0x0,8
tick,0x7ff8278cfeb4,89933921,0,0x0,8
tick,0x7ff8278cfeb4,89970287,0,0x0,8
tick,0x7ff8278cfeb4,89984403,0,0x0,8
tick,0x7ff8278cfeb4,90001715,0,0x0,8
tick,0x7ff8278cfeb4,90015893,0,0x0,8
tick,0x7ff8278cfeb4,90037698,0,0x0,8
tick,0x7ff8278cfeb4,90053690,0,0x0,8
tick,0x7ff8278cfeb4,90073870,0,0x0,8
tick,0x7ff8278cfeb4,90090156,0,0x0,8
tick,0x7ff8278cfeb4,90118006,0,0x0,8
tick,0x7ff8278cfeb4,90128114,0,0x0,8
tick,0x7ff8278cfeb4,90156384,0,0x0,8
tick,0x7ff8278cfeb4,90167057,0,0x0,8
tick,0x7ff8278cfeb4,90176985,0,0x0,8
tick,0x7ff8278cfeb4,90192626,0,0x0,8
tick,0x7ff8278cfeb4,90203947,0,0x0,8
tick,0x7ff8278cfeb4,90219711,0,0x0,8
tick,0x7ff8278cfeb4,90235560,0,0x0,8
tick,0x7ff8278cfeb4,90250047,0,0x0,8
tick,0x7ff8278cfeb4,90266140,0,0x0,8
tick,0x7ff8278cfeb4,90280148,0,0x0,8
tick,0x7ff8278cfeb4,90296192,0,0x0,8
tick,0x7ff8278cfeb4,90312225,0,0x0,8
tick,0x7ff8278cfeb4,90328164,0,0x0,8
tick,0x7ff8278cfeb4,90342682,0,0x0,8
tick,0x7ff8278cfeb4,90358449,0,0x0,8
tick,0x7ff8278cfeb4,90374058,0,0x0,8
tick,0x7ff8278cfeb4,90390067,0,0x0,8
tick,0x7ff8278cfeb4,90406306,0,0x0,8
tick,0x7ff8278cfeb4,90421088,0,0x0,8
tick,0x7ff8278cfeb4,90436482,0,0x0,8
tick,0x7ff8278cfeb4,90452116,0,0x0,8
tick,0x7ff8278cfeb4,90468618,0,0x0,8
tick,0x7ff8278cfeb4,90482903,0,0x0,8
tick,0x7ff8278cfeb4,90498491,0,0x0,8
tick,0x7ff8278cfeb4,90514619,0,0x0,8
tick,0x7ff8278cfeb4,90528961,0,0x0,8
tick,0x7ff8278cfeb4,90544613,0,0x0,8
tick,0x7ff8278cfeb4,90559903,0,0x0,8
tick,0x7ff8278cfeb4,90574861,0,0x0,8
tick,0x7ff8278cfeb4,90590116,0,0x0,8
tick,0x7ff8278cfeb4,90605923,0,0x0,8
tick,0x7ff8278cfeb4,90621150,0,0x0,8
tick,0x7ff8278cfeb4,90636362,0,0x0,8
tick,0x7ff8278cfeb4,90652326,0,0x0,8
tick,0x7ff8278cfeb4,90668219,0,0x0,8
tick,0x7ff8278cfeb4,90687177,0,0x0,8
tick,0x7ff8278cfeb4,90702444,0,0x0,8
tick,0x7ff8278cfeb4,90714323,0,0x0,8
tick,0x7ff8278cfeb4,90740300,0,0x0,8
tick,0x7ff8278cfeb4,90745485,0,0x0,8
tick,0x7ff8278cfeb4,90760162,0,0x0,8
tick,0x7ff8278cfeb4,90775942,0,0x0,8
tick,0x7ff8278cfeb4,90792221,0,0x0,8
tick,0x7ff8278cfeb4,90806095,0,0x0,8
tick,0x7ff8278cfeb4,90822526,0,0x0,8
tick,0x7ff8278cfeb4,90836680,0,0x0,8
tick,0x7ff8278cfeb4,90851807,0,0x0,8
tick,0x7ff8278cfeb4,90868325,0,0x0,8
tick,0x7ff8278cfeb4,90887430,0,0x0,8
tick,0x7ff8278cfeb4,90901508,0,0x0,8
tick,0x7ff8278cfeb4,90914131,0,0x0,8
tick,0x7ff8278cfeb4,90928294,0,0x0,8
tick,0x7ff8278cfeb4,90953143,0,0x0,8
tick,0x7ff8278cfeb4,90960197,0,0x0,8
tick,0x7ff8278cfeb4,90975840,0,0x0,8
tick,0x7ff8278cfeb4,90992570,0,0x0,8
tick,0x7ff8278cfeb4,91008383,0,0x0,8
tick,0x7ff8278cfeb4,91023976,0,0x0,8
tick,0x7ff8278cfeb4,91039887,0,0x0,8
tick,0x7ff8278cfeb4,91054895,0,0x0,8
tick,0x7ff8278cfeb4,91072001,0,0x0,8
tick,0x7ff8278cfeb4,91097567,0,0x0,8
tick,0x7ff8278cfeb4,91103468,0,0x0,8
tick,0x7ff8278cfeb4,91119960,0,0x0,8
tick,0x7ff8278cfeb4,91135074,0,0x0,8
tick,0x7ff8278cfeb4,91162567,0,0x0,8
tick,0x7ff8278cfeb4,91181404,0,0x0,8
tick,0x7ff8278cfeb4,91194884,0,0x0,8
tick,0x7ff8278cfeb4,91210082,0,0x0,8
tick,0x7ff8278cfeb4,91224639,0,0x0,8
tick,0x7ff8278cfeb4,91245154,0,0x0,8
tick,0x7ff8278cfeb4,91255556,0,0x0,8
tick,0x7ff8278cfeb4,91271433,0,0x0,8
tick,0x7ff8278cfeb4,91287149,0,0x0,8
tick,0x7ff8278cfeb4,91303401,0,0x0,8
tick,0x7ff8278cfeb4,91318353,0,0x0,8
tick,0x7ff8278cfeb4,91334907,0,0x0,8
tick,0x7ff8278cfeb4,91349815,0,0x0,8
tick,0x7ff8278cfeb4,91366135,0,0x0,8
tick,0x7ff8278cfeb4,91383300,0,0x0,8
tick,0x7ff8278cfeb4,91397281,0,0x0,8
tick,0x7ff8278cfeb4,91412015,0,0x0,8
tick,0x7ff8278cfeb4,91428293,0,0x0,8
tick,0x7ff8278cfeb4,91443146,0,0x0,8
tick,0x7ff8278cfeb4,91458544,0,0x0,8
tick,0x7ff8278cfeb4,91474344,0,0x0,8
tick,0x7ff8278cfeb4,91488976,0,0x0,8
tick,0x7ff8278cfeb4,91505204,0,0x0,8
tick,0x7ff8278cfeb4,91521903,0,0x0,8
tick,0x7ff8278cfeb4,91536964,0,0x0,8
tick,0x7ff8278cfeb4,91552090,0,0x0,8
tick,0x7ff8278cfeb4,91567000,0,0x0,8
tick,0x7ff8278cfeb4,91586162,0,0x0,8
tick,0x7ff8278cfeb4,91601948,0,0x0,8
tick,0x7ff8278cfeb4,91613257,0,0x0,8
tick,0x7ff8278cfeb4,91628441,0,0x0,8
tick,0x7ff8278cfeb4,91643959,0,0x0,8
tick,0x7ff8278cfeb4,91659239,0,0x0,8
tick,0x7ff8278cfeb4,91674210,0,0x0,8
tick,0x7ff8278cfeb4,91689837,0,0x0,8
tick,0x7ff8278cfeb4,91704946,0,0x0,8
tick,0x7ff8278cfeb4,91719939,0,0x0,8
tick,0x7ff8278cfeb4,91738606,0,0x0,8
tick,0x7ff8278cfeb4,91752254,0,0x0,8
tick,0x7ff8278cfeb4,91770208,0,0x0,8
tick,0x7ff8278cfeb4,91782435,0,0x0,8
tick,0x7ff8278cfeb4,91796985,0,0x0,8
tick,0x7ff8278cfeb4,91812032,0,0x0,8
tick,0x7ff8278cfeb4,91827178,0,0x0,8
tick,0x7ff8278cfeb4,91842314,0,0x0,8
tick,0x7ff8278cfeb4,91857836,0,0x0,8
tick,0x7ff8278cfeb4,91874212,0,0x0,8
tick,0x7ff8278cfeb4,91888948,0,0x0,8
tick,0x7ff8278cfeb4,91903940,0,0x0,8
tick,0x7ff8278cfeb4,91919936,0,0x0,8
tick,0x7ff8278cfeb4,91936024,0,0x0,8
tick,0x7ff8278cfeb4,91951894,0,0x0,8
tick,0x7ff8278cfeb4,91968754,0,0x0,8
tick,0x7ff8278cfeb4,91983789,0,0x0,8
tick,0x7ff8278cfeb4,92000074,0,0x0,8
tick,0x7ff8278cfeb4,92014704,0,0x0,8
tick,0x7ff8278cfeb4,92029659,0,0x0,8
tick,0x7ff8278cfeb4,92045943,0,0x0,8
tick,0x7ff8278cfeb4,92062362,0,0x0,8
tick,0x7ff8278cfeb4,92077799,0,0x0,8
tick,0x7ff8278cfeb4,92094012,0,0x0,8
tick,0x7ff8278cfeb4,92108573,0,0x0,8
tick,0x7ff8278cfeb4,92123804,0,0x0,8
tick,0x7ff8278cfeb4,92139926,0,0x0,8
tick,0x7ff8278cfeb4,92155563,0,0x0,8
tick,0x7ff8278cfeb4,92172200,0,0x0,8
tick,0x7ff8278cfeb4,92188063,0,0x0,8
tick,0x7ff8278cfeb4,92203666,0,0x0,8
tick,0x7ff8278cfeb4,92218997,0,0x0,8
tick,0x7ff8278cfeb4,92236397,0,0x0,8
tick,0x7ff8278cfeb4,92249874,0,0x0,8
tick,0x7ff8278cfeb4,92265098,0,0x0,8
tick,0x7ff8278cfeb4,92279565,0,0x0,8
tick,0x7ff8278cfeb4,92295628,0,0x0,8
tick,0x7ff8278cfeb4,92312059,0,0x0,8
tick,0x7ff8278cfeb4,92326785,0,0x0,8
tick,0x7ff8278cfeb4,92342167,0,0x0,8
tick,0x7ff8278cfeb4,92357513,0,0x0,8
tick,0x7ff8278cfeb4,92374026,0,0x0,8
tick,0x7ff8278cfeb4,92388539,0,0x0,8
tick,0x7ff8278cfeb4,92403689,0,0x0,8
tick,0x7ff8278cfeb4,92419973,0,0x0,8
tick,0x7ff8278cfeb4,92435520,0,0x0,8
tick,0x7ff8278cfeb4,92451966,0,0x0,8
tick,0x7ff8278cfeb4,92469643,0,0x0,8
tick,0x7ff8278cfeb4,92487049,0,0x0,8
tick,0x7ff8278cfeb4,92502493,0,0x0,8
tick,0x7ff8278cfeb4,92514329,0,0x0,8
tick,0x7ff8278cfeb4,92529118,0,0x0,8
tick,0x7ff8278cfeb4,92544155,0,0x0,8
tick,0x7ff8278cfeb4,92560461,0,0x0,8
tick,0x7ff8278cfeb4,92575002,0,0x0,8
tick,0x7ff8278cfeb4,92591985,0,0x0,8
tick,0x7ff8278cfeb4,92607275,0,0x0,8
tick,0x7ff8278cfeb4,92623497,0,0x0,8
tick,0x7ff8278cfeb4,92637961,0,0x0,8
tick,0x7ff8278cfeb4,92653068,0,0x0,8
tick,0x7ff8278cfeb4,92669942,0,0x0,8
tick,0x7ff8278cfeb4,92684662,0,0x0,8
tick,0x7ff8278cfeb4,92699261,0,0x0,8
tick,0x7ff8278cfeb4,92715104,0,0x0,8
tick,0x7ff8278cfeb4,92731109,0,0x0,8
tick,0x7ff8278cfeb4,92747632,0,0x0,8
tick,0x7ff8278cfeb4,92762297,0,0x0,8
tick,0x7ff8278cfeb4,92778159,0,0x0,8
tick,0x7ff8278cfeb4,92792899,0,0x0,8
tick,0x7ff8278cfeb4,92807873,0,0x0,8
tick,0x7ff8278cfeb4,92822772,0,0x0,8
tick,0x7ff8278cfeb4,92837988,0,0x0,8
tick,0x7ff8278cfeb4,92853958,0,0x0,8
tick,0x7ff8278cfeb4,92869624,0,0x0,8
tick,0x7ff8278cfeb4,92884210,0,0x0,8
tick,0x7ff8278cfeb4,92898917,0,0x0,8
tick,0x7ff8278cfeb4,92913808,0,0x0,8
tick,0x7ff8278cfeb4,92929980,0,0x0,8
tick,0x7ff8278cfeb4,92945762,0,0x0,8
tick,0x7ff8278cfeb4,92961710,0,0x0,8
tick,0x7ff8278cfeb4,92978150,0,0x0,8
tick,0x7ff8278cfeb4,92993989,0,0x0,8
tick,0x7ff8278cfeb4,93009890,0,0x0,8
tick,0x7ff8278cfeb4,93026003,0,0x0,8
tick,0x7ff8278cfeb4,93040677,0,0x0,8
tick,0x7ff8278cfeb4,93056095,0,0x0,8
tick,0x7ff8278cfeb4,93072285,0,0x0,8
tick,0x7ff8278cfeb4,93087622,0,0x0,8
tick,0x7ff8278cfeb4,93103267,0,0x0,8
tick,0x7ff8278cfeb4,93119427,0,0x0,8
tick,0x7ff8278cfeb4,93140625,0,0x0,8
tick,0x7ff8278cfeb4,93149654,0,0x0,8
tick,0x7ff8278cfeb4,93166014,0,0x0,8
tick,0x7ff8278cfeb4,93182091,0,0x0,8
tick,0x7ff8278cfeb4,93197794,0,0x0,8
tick,0x7ff8278cfeb4,93213831,0,0x0,8
tick,0x7ff8278cfeb4,93228720,0,0x0,8
tick,0x7ff8278cfeb4,93243699,0,0x0,8
tick,0x7ff8278cfeb4,93258877,0,0x0,8
tick,0x7ff8278cfeb4,93273835,0,0x0,8
tick,0x7ff8278cfeb4,93288492,0,0x0,8
tick,0x7ff8278cfeb4,93304744,0,0x0,8
tick,0x7ff8278cfeb4,93319476,0,0x0,8
tick,0x7ff8278cfeb4,93335340,0,0x0,8
tick,0x7ff8278cfeb4,93351709,0,0x0,8
tick,0x7ff8278cfeb4,93364897,0,0x0,8
tick,0x7ff8278cfeb4,93381368,0,0x0,8
tick,0x7ff8278cfeb4,93397178,0,0x0,8
tick,0x7ff8278cfeb4,93412784,0,0x0,8
tick,0x7ff8278cfeb4,93427952,0,0x0,8
tick,0x7ff8278cfeb4,93443968,0,0x0,8
tick,0x7ff8278cfeb4,93458842,0,0x0,8
tick,0x7ff8278cfeb4,93473816,0,0x0,8
tick,0x7ff8278cfeb4,93489907,0,0x0,8
tick,0x7ff8278cfeb4,93505180,0,0x0,8
tick,0x7ff8278cfeb4,93520521,0,0x0,8
tick,0x7ff8278cfeb4,93535388,0,0x0,8
tick,0x7ff8278cfeb4,93549795,0,0x0,8
tick,0x7ff8278cfeb4,93564918,0,0x0,8
tick,0x7ff8278cfeb4,93582262,0,0x0,8
tick,0x7ff8278cfeb4,93595693,0,0x0,8
tick,0x7ff8278cfeb4,93611797,0,0x0,8
tick,0x7ff8278cfeb4,93626782,0,0x0,8
tick,0x7ff8278cfeb4,93641924,0,0x0,8
tick,0x7ff8278cfeb4,93656572,0,0x0,8
tick,0x7ff8278cfeb4,93672821,0,0x0,8
tick,0x7ff8278cfeb4,93687547,0,0x0,8
tick,0x7ff8278cfeb4,93703624,0,0x0,8
tick,0x7ff8278cfeb4,93719512,0,0x0,8
tick,0x7ff8278cfeb4,93738269,0,0x0,8
tick,0x7ff8278cfeb4,93749805,0,0x0,8
tick,0x7ff8278cfeb4,93765201,0,0x0,8
tick,0x7ff8278cfeb4,93780181,0,0x0,8
tick,0x7ff8278cfeb4,93795983,0,0x0,8
tick,0x7ff8278cfeb4,93812522,0,0x0,8
tick,0x7ff8278cfeb4,93827792,0,0x0,8
tick,0x7ff8278cfeb4,93843245,0,0x0,8
tick,0x7ff8278cfeb4,93858708,0,0x0,8
tick,0x7ff8278cfeb4,93874193,0,0x0,8
tick,0x7ff8278cfeb4,93889063,0,0x0,8
tick,0x7ff8278cfeb4,93905362,0,0x0,8
tick,0x7ff8278cfeb4,93920457,0,0x0,8
tick,0x7ff8278cfeb4,93937101,0,0x0,8
tick,0x7ff8278cfeb4,93952165,0,0x0,8
tick,0x7ff8278cfeb4,93967125,0,0x0,8
tick,0x7ff8278cfeb4,93983153,0,0x0,8
tick,0x7ff8278cfeb4,93999573,0,0x0,8
tick,0x7ff8278cfeb4,94014564,0,0x0,8
tick,0x7ff8278cfeb4,94030506,0,0x0,8
tick,0x7ff8278cfeb4,94045260,0,0x0,8
tick,0x7ff8278cfeb4,94060684,0,0x0,8
tick,0x7ff8278cfeb4,94075263,0,0x0,8
tick,0x7ff8278cfeb4,94090217,0,0x0,8
tick,0x7ff8278cfeb4,94106122,0,0x0,8
tick,0x7ff8278cfeb4,94124150,0,0x0,8
tick,0x7ff8278cfeb4,94139891,0,0x0,8
tick,0x7ff8278cfeb4,94154223,0,0x0,8
tick,0x7ff8278cfeb4,94168866,0,0x0,8
tick,0x7ff8278cfeb4,94184297,0,0x0,8
tick,0x7ff8278cfeb4,94200209,0,0x0,8
tick,0x7ff8278cfeb4,94215067,0,0x0,8
tick,0x7ff8278cfeb4,94231187,0,0x0,8
tick,0x7ff8278cfeb4,94245952,0,0x0,8
tick,0x7ff8278cfeb4,94262154,0,0x0,8
tick,0x7ff8278cfeb4,94278268,0,0x0,8
tick,0x7ff8278cfeb4,94294185,0,0x0,8
tick,0x7ff8278cfeb4,94310078,0,0x0,8
tick,0x7ff8278cfeb4,94324891,0,0x0,8
tick,0x7ff8278cfeb4,94341816,0,0x0,8
tick,0x7ff8278cfeb4,94356774,0,0x0,8
tick,0x7ff8278cfeb4,94371258,0,0x0,8
tick,0x7ff8278cfeb4,94387181,0,0x0,8
tick,0x7ff8278cfeb4,94402958,0,0x0,8
tick,0x7ff8278cfeb4,94416996,0,0x0,8
tick,0x7ff8278cfeb4,94433373,0,0x0,8
tick,0x7ff8278cfeb4,94447949,0,0x0,8
tick,0x7ff8278cfeb4,94463932,0,0x0,8
tick,0x7ff8278cfeb4,94479991,0,0x0,8
tick,0x7ff8278cfeb4,94495910,0,0x0,8
tick,0x7ff8278cfeb4,94511638,0,0x0,8
tick,0x7ff8278cfeb4,94525928,0,0x0,8
tick,0x7ff8278cfeb4,94541801,0,0x0,8
tick,0x7ff8278cfeb4,94557879,0,0x0,8
tick,0x7ff8278cfeb4,94573917,0,0x0,8
tick,0x7ff8278cfeb4,94589682,0,0x0,8
tick,0x7ff8278cfeb4,94605165,0,0x0,8
tick,0x7ff8278cfeb4,94621046,0,0x0,8
tick,0x7ff8278cfeb4,94637132,0,0x0,8
tick,0x7ff8278cfeb4,94653806,0,0x0,8
tick,0x7ff8278cfeb4,94667268,0,0x0,8
tick,0x7ff8278cfeb4,94682098,0,0x0,8
tick,0x7ff8278cfeb4,94697656,0,0x0,8
tick,0x7ff8278cfeb4,94713956,0,0x0,8
tick,0x7ff8278cfeb4,94728645,0,0x0,8
tick,0x7ff8278cfeb4,94744726,0,0x0,8
tick,0x7ff8278cfeb4,94760171,0,0x0,8
tick,0x7ff8278cfeb4,94775805,0,0x0,8
tick,0x7ff8278cfeb4,94792059,0,0x0,8
tick,0x7ff8278cfeb4,94806562,0,0x0,8
tick,0x7ff8278cfeb4,94822432,0,0x0,8
tick,0x7ff8278cfeb4,94837730,0,0x0,8
tick,0x7ff8278cfeb4,94853604,0,0x0,8
tick,0x7ff8278cfeb4,94867685,0,0x0,8
tick,0x7ff8278cfeb4,94883605,0,0x0,8
tick,0x7ff8278cfeb4,94899611,0,0x0,8
tick,0x7ff8278cfeb4,94914778,0,0x0,8
tick,0x7ff8278cfeb4,94929798,0,0x0,8
tick,0x7ff8278cfeb4,94945573,0,0x0,8
tick,0x7ff8278cfeb4,94962323,0,0x0,8
tick,0x7ff8278cfeb4,94977715,0,0x0,8
tick,0x7ff8278cfeb4,94993664,0,0x0,8
tick,0x7ff8278cfeb4,95008732,0,0x0,8
tick,0x7ff8278cfeb4,95024480,0,0x0,8
tick,0x7ff8278cfeb4,95039745,0,0x0,8
tick,0x7ff8278cfeb4,95055635,0,0x0,8
tick,0x7ff8278cfeb4,95071751,0,0x0,8
tick,0x7ff8278cfeb4,95087757,0,0x0,8
tick,0x7ff8278cfeb4,95102667,0,0x0,8
tick,0x7ff8278cfeb4,95117503,0,0x0,8
tick,0x7ff8278cfeb4,95133627,0,0x0,8
tick,0x7ff8278cfeb4,95149489,0,0x0,8
tick,0x7ff8278cfeb4,95165304,0,0x0,8
tick,0x7ff8278cfeb4,95181706,0,0x0,8
tick,0x7ff8278cfeb4,95195393,0,0x0,8
tick,0x7ff8278cfeb4,95211990,0,0x0,8
tick,0x7ff8278cfeb4,95229197,0,0x0,8
tick,0x7ff8278cfeb4,95243356,0,0x0,8
tick,0x7ff8278cfeb4,95259513,0,0x0,8
tick,0x7ff8278cfeb4,95281811,0,0x0,8
tick,0x7ff8278cfeb4,95290220,0,0x0,8
tick,0x7ff8278cfeb4,95305375,0,0x0,8
tick,0x7ff8278cfeb4,95322549,0,0x0,8
tick,0x7ff8278cfeb4,95339735,0,0x0,8
tick,0x7ff8278cfeb4,95353086,0,0x0,8
tick,0x7ff8278cfeb4,95370253,0,0x0,8
tick,0x7ff8278cfeb4,95383210,0,0x0,8
tick,0x7ff8278cfeb4,95399491,0,0x0,8
tick,0x7ff8278cfeb4,95415718,0,0x0,8
tick,0x7ff8278cfeb4,95431608,0,0x0,8
tick,0x7ff8278cfeb4,95446782,0,0x0,8
tick,0x7ff8278cfeb4,95462245,0,0x0,8
tick,0x7ff8278cfeb4,95477161,0,0x0,8
tick,0x7ff8278cfeb4,95493117,0,0x0,8
tick,0x7ff8278cfeb4,95508275,0,0x0,8
tick,0x7ff8278cfeb4,95524168,0,0x0,8
tick,0x7ff8278cfeb4,95539218,0,0x0,8
tick,0x7ff8278cfeb4,95555388,0,0x0,8
tick,0x7ff8278cfeb4,95570025,0,0x0,8
tick,0x7ff8278cfeb4,95585322,0,0x0,8
tick,0x7ff8278cfeb4,95601314,0,0x0,8
tick,0x7ff8278cfeb4,95616142,0,0x0,8
tick,0x7ff8278cfeb4,95631269,0,0x0,8
tick,0x7ff8278cfeb4,95647227,0,0x0,8
tick,0x7ff8278cfeb4,95663280,0,0x0,8
tick,0x7ff8278cfeb4,95679236,0,0x0,8
tick,0x7ff8278cfeb4,95694402,0,0x0,8
tick,0x7ff8278cfeb4,95708934,0,0x0,8
tick,0x7ff8278cfeb4,95725149,0,0x0,8
tick,0x7ff8278cfeb4,95741229,0,0x0,8
tick,0x7ff8278cfeb4,95756237,0,0x0,8
tick,0x7ff8278cfeb4,95772623,0,0x0,8
tick,0x7ff8278cfeb4,95788895,0,0x0,8
tick,0x7ff8278cfeb4,95803081,0,0x0,8
tick,0x7ff8278cfeb4,95819115,0,0x0,8
tick,0x7ff8278cfeb4,95835335,0,0x0,8
tick,0x7ff8278cfeb4,95852525,0,0x0,8
tick,0x7ff8278cfeb4,95866259,0,0x0,8
tick,0x7ff8278cfeb4,95881100,0,0x0,8
tick,0x7ff8278cfeb4,95895904,0,0x0,8
tick,0x7ff8278cfeb4,95911671,0,0x0,8
tick,0x7ff8278cfeb4,95926893,0,0x0,8
tick,0x7ff8278cfeb4,95941890,0,0x0,8
tick,0x7ff8278cfeb4,95957854,0,0x0,8
tick,0x7ff8278cfeb4,95974160,0,0x0,8
tick,0x7ff8278cfeb4,95989749,0,0x0,8
tick,0x7ff8278cfeb4,96006238,0,0x0,8
tick,0x7ff8278cfeb4,96023065,0,0x0,8
tick,0x7ff8278cfeb4,96037782,0,0x0,8
tick,0x7ff8278cfeb4,96054268,0,0x0,8
tick,0x7ff8278cfeb4,96069224,0,0x0,8
tick,0x7ff8278cfeb4,96083798,0,0x0,8
tick,0x7ff8278cfeb4,96098897,0,0x0,8
tick,0x7ff8278cfeb4,96115253,0,0x0,8
tick,0x7ff8278cfeb4,96129859,0,0x0,8
tick,0x7ff8278cfeb4,96151771,0,0x0,8
tick,0x7ff8278cfeb4,96166852,0,0x0,8
tick,0x7ff8278cfeb4,96175886,0,0x0,8
tick,0x7ff8278cfeb4,96191850,0,0x0,8
tick,0x7ff8278cfeb4,96207134,0,0x0,8
tick,0x7ff8278cfeb4,96222554,0,0x0,8
tick,0x7ff8278cfeb4,96237772,0,0x0,8
tick,0x7ff8278cfeb4,96252983,0,0x0,8
tick,0x7ff8278cfeb4,96267625,0,0x0,8
tick,0x7ff8278cfeb4,96283894,0,0x0,8
tick,0x7ff8278cfeb4,96298943,0,0x0,8
tick,0x7ff8278cfeb4,96313677,0,0x0,8
tick,0x7ff8278cfeb4,96329665,0,0x0,8
tick,0x7ff8278cfeb4,96345898,0,0x0,8
tick,0x7ff8278cfeb4,96360459,0,0x0,8
tick,0x7ff8278cfeb4,96377303,0,0x0,8
tick,0x7ff8278cfeb4,96391796,0,0x0,8
tick,0x7ff8278cfeb4,96406773,0,0x0,8
tick,0x7ff8278cfeb4,96423064,0,0x0,8
tick,0x7ff8278cfeb4,96437777,0,0x0,8
tick,0x7ff8278cfeb4,96452866,0,0x0,8
tick,0x7ff8278cfeb4,96468857,0,0x0,8
tick,0x7ff8278cfeb4,96484768,0,0x0,8
tick,0x7ff8278cfeb4,96499653,0,0x0,8
tick,0x7ff8278cfeb4,96514959,0,0x0,8
tick,0x7ff8278cfeb4,96529658,0,0x0,8
tick,0x7ff8278cfeb4,96546028,0,0x0,8
tick,0x7ff8278cfeb4,96562148,0,0x0,8
tick,0x7ff8278cfeb4,96577825,0,0x0,8
tick,0x7ff8278cfeb4,96592832,0,0x0,8
tick,0x7ff8278cfeb4,96608919,0,0x0,8
tick,0x7ff8278cfeb4,96624511,0,0x0,8
tick,0x7ff8278cfeb4,96641998,0,0x0,8
tick,0x7ff8278cfeb4,96657414,0,0x0,8
tick,0x7ff8278cfeb4,96674120,0,0x0,8
tick,0x7ff8278cfeb4,96688884,0,0x0,8
tick,0x7ff8278cfeb4,96702603,0,0x0,8
tick,0x7ff8278cfeb4,96719253,0,0x0,8
tick,0x7ff8278cfeb4,96735205,0,0x0,8
tick,0x7ff8278cfeb4,96750513,0,0x0,8
tick,0x7ff8278cfeb4,96766639,0,0x0,8
tick,0x7ff8278cfeb4,96783150,0,0x0,8
tick,0x7ff8278cfeb4,96796639,0,0x0,8
tick,0x7ff8278cfeb4,96816552,0,0x0,8
tick,0x7ff8278cfeb4,96827568,0,0x0,8
tick,0x7ff8278cfeb4,96843314,0,0x0,8
tick,0x7ff8278cfeb4,96858821,0,0x0,8
tick,0x7ff8278cfeb4,96875105,0,0x0,8
tick,0x7ff8278cfeb4,96891502,0,0x0,8
tick,0x7ff8278cfeb4,96907130,0,0x0,8
tick,0x7ff8278cfeb4,96925092,0,0x0,8
tick,0x7ff8278cfeb4,96940481,0,0x0,8
tick,0x7ff8278cfeb4,96955388,0,0x0,8
tick,0x7ff8278cfeb4,96974318,0,0x0,8
tick,0x7ff8278cfeb4,96990480,0,0x0,8
tick,0x7ff8278cfeb4,97002931,0,0x0,8
tick,0x7ff8278cfeb4,97017623,0,0x0,8
tick,0x7ff8278cfeb4,97033002,0,0x0,8
tick,0x7ff8278cfeb4,97047569,0,0x0,8
tick,0x7ff8278cfeb4,97063586,0,0x0,8
tick,0x7ff8278cfeb4,97078838,0,0x0,8
tick,0x7ff8278cfeb4,97095759,0,0x0,8
tick,0x7ff8278cfeb4,97110486,0,0x0,8
tick,0x7ff8278cfeb4,97125720,0,0x0,8
tick,0x7ff8278cfeb4,97142170,0,0x0,8
tick,0x7ff8278cfeb4,97157290,0,0x0,8
tick,0x7ff8278cfeb4,97173586,0,0x0,8
tick,0x7ff8278cfeb4,97187782,0,0x0,8
tick,0x7ff8278cfeb4,97202780,0,0x0,8
tick,0x7ff8278cfeb4,97217655,0,0x0,8
tick,0x7ff8278cfeb4,97232699,0,0x0,8
tick,0x7ff8278cfeb4,97248649,0,0x0,8
tick,0x7ff8278cfeb4,97266145,0,0x0,8
tick,0x7ff8278cfeb4,97280382,0,0x0,8
tick,0x7ff8278cfeb4,97296484,0,0x0,8
tick,0x7ff8278cfeb4,97312696,0,0x0,8
tick,0x7ff8278cfeb4,97328444,0,0x0,8
tick,0x7ff8278cfeb4,97344081,0,0x0,8
tick,0x7ff8278cfeb4,97360108,0,0x0,8
tick,0x7ff8278cfeb4,97375928,0,0x0,8
tick,0x7ff8278cfeb4,97392806,0,0x0,8
tick,0x7ff8278cfeb4,97406992,0,0x0,8
tick,0x7ff8278cfeb4,97424782,0,0x0,8
tick,0x7ff8278cfeb4,97437172,0,0x0,8
tick,0x7ff8278cfeb4,97453299,0,0x0,8
tick,0x7ff8278cfeb4,97467880,0,0x0,8
tick,0x7ff8278cfeb4,97483915,0,0x0,8
tick,0x7ff8278cfeb4,97499100,0,0x0,8
tick,0x7ff8278cfeb4,97514514,0,0x0,8
tick,0x7ff8278cfeb4,97529014,0,0x0,8
tick,0x7ff8278cfeb4,97544109,0,0x0,8
tick,0x7ff8278cfeb4,97558808,0,0x0,8
tick,0x7ff8278cfeb4,97574994,0,0x0,8
tick,0x7ff8278cfeb4,97591453,0,0x0,8
tick,0x7ff8278cfeb4,97606202,0,0x0,8
tick,0x7ff8278cfeb4,97622587,0,0x0,8
tick,0x7ff8278cfeb4,97636999,0,0x0,8
tick,0x7ff8278cfeb4,97652787,0,0x0,8
tick,0x7ff8278cfeb4,97668840,0,0x0,8
tick,0x7ff8278cfeb4,97685088,0,0x0,8
tick,0x7ff8278cfeb4,97700131,0,0x0,8
tick,0x7ff8278cfeb4,97714952,0,0x0,8
tick,0x7ff8278cfeb4,97729885,0,0x0,8
tick,0x7ff8278cfeb4,97746567,0,0x0,8
tick,0x7ff8278cfeb4,97762045,0,0x0,8
tick,0x7ff8278cfeb4,97775945,0,0x0,8
tick,0x7ff8278cfeb4,97791891,0,0x0,8
tick,0x7ff8278cfeb4,97808632,0,0x0,8
tick,0x7ff8278cfeb4,97823299,0,0x0,8
tick,0x7ff8278cfeb4,97836939,0,0x0,8
tick,0x7ff8278cfeb4,97852935,0,0x0,8
tick,0x7ff8278cfeb4,97868909,0,0x0,8
tick,0x7ff8278cfeb4,97884708,0,0x0,8
tick,0x7ff8278cfeb4,97902328,0,0x0,8
tick,0x7ff8278cfeb4,97916697,0,0x0,8
tick,0x7ff8278cfeb4,97931945,0,0x0,8
tick,0x7ff8278cfeb4,97947011,0,0x0,8
tick,0x7ff8278cfeb4,97963045,0,0x0,8
tick,0x7ff8278cfeb4,97978719,0,0x0,8
tick,0x7ff8278cfeb4,97994687,0,0x0,8
tick,0x7ff8278cfeb4,98009780,0,0x0,8
tick,0x7ff8278cfeb4,98025661,0,0x0,8
tick,0x7ff8278cfeb4,98042304,0,0x0,8
tick,0x7ff8278cfeb4,98058451,0,0x0,8
tick,0x7ff8278cfeb4,98074186,0,0x0,8
tick,0x7ff8278cfeb4,98087281,0,0x0,8
tick,0x7ff8278cfeb4,98103608,0,0x0,8
tick,0x7ff8278cfeb4,98118593,0,0x0,8
tick,0x7ff8278cfeb4,98135310,0,0x0,8
tick,0x7ff8278cfeb4,98153535,0,0x0,8
tick,0x7ff8278cfeb4,98171164,0,0x0,8
tick,0x7ff8278cfeb4,98182839,0,0x0,8
tick,0x7ff8278cfeb4,98198784,0,0x0,8
tick,0x7ff8278cfeb4,98212184,0,0x0,8
tick,0x7ff8278cfeb4,98228050,0,0x0,8
tick,0x7ff8278cfeb4,98242775,0,0x0,8
tick,0x7ff8278cfeb4,98258814,0,0x0,8
tick,0x7ff8278cfeb4,98273868,0,0x0,8
tick,0x7ff8278cfeb4,98292277,0,0x0,8
tick,0x7ff8278cfeb4,98304766,0,0x0,8
tick,0x7ff8278cfeb4,98325160,0,0x0,8
tick,0x7ff8278cfeb4,98334574,0,0x0,8
tick,0x7ff8278cfeb4,98349666,0,0x0,8
tick,0x7ff8278cfeb4,98364768,0,0x0,8
tick,0x7ff8278cfeb4,98381859,0,0x0,8
tick,0x7ff8278cfeb4,98397287,0,0x0,8
tick,0x7ff8278cfeb4,98412606,0,0x0,8
tick,0x7ff8278cfeb4,98428440,0,0x0,8
tick,0x7ff8278cfeb4,98444181,0,0x0,8
tick,0x7ff8278cfeb4,98459974,0,0x0,8
tick,0x7ff8278cfeb4,98475306,0,0x0,8
tick,0x7ff8278cfeb4,98492084,0,0x0,8
tick,0x7ff8278cfeb4,98505125,0,0x0,8
tick,0x7ff8278cfeb4,98521972,0,0x0,8
tick,0x7ff8278cfeb4,98536439,0,0x0,8
tick,0x7ff8278cfeb4,98552212,0,0x0,8
tick,0x7ff8278cfeb4,98568448,0,0x0,8
tick,0x7ff8278cfeb4,98584001,0,0x0,8
tick,0x7ff8278cfeb4,98599018,0,0x0,8
tick,0x7ff8278cfeb4,98614442,0,0x0,8
tick,0x7ff8278cfeb4,98629996,0,0x0,8
tick,0x7ff8278cfeb4,98645974,0,0x0,8
tick,0x7ff8278cfeb4,98662457,0,0x0,8
tick,0x7ff8278cfeb4,98678044,0,0x0,8
tick,0x7ff8278cfeb4,98694093,0,0x0,8
tick,0x7ff8278cfeb4,98709922,0,0x0,8
tick,0x7ff8278cfeb4,98725877,0,0x0,8
tick,0x7ff8278cfeb4,98742419,0,0x0,8
tick,0x7ff8278cfeb4,98756496,0,0x0,8
tick,0x7ff8278cfeb4,98772870,0,0x0,8
tick,0x7ff8278cfeb4,98787871,0,0x0,8
tick,0x7ff8278cfeb4,98808340,0,0x0,8
tick,0x7ff8278cfeb4,98820017,0,0x0,8
tick,0x7ff8278cfeb4,98836084,0,0x0,8
tick,0x7ff8278cfeb4,98851182,0,0x0,8
tick,0x7ff8278cfeb4,98866315,0,0x0,8
tick,0x7ff8278cfeb4,98881808,0,0x0,8
tick,0x7ff8278cfeb4,98897887,0,0x0,8
tick,0x7ff8278cfeb4,98912725,0,0x0,8
tick,0x7ff8278cfeb4,98929203,0,0x0,8
tick,0x7ff8278cfeb4,98943970,0,0x0,8
tick,0x7ff8278cfeb4,98959196,0,0x0,8
tick,0x7ff8278cfeb4,98975254,0,0x0,8
tick,0x7ff8278cfeb4,98990108,0,0x0,8
tick,0x7ff8278cfeb4,99005765,0,0x0,8
tick,0x7ff8278cfeb4,99021125,0,0x0,8
tick,0x7ff8278cfeb4,99035919,0,0x0,8
tick,0x7ff8278cfeb4,99051259,0,0x0,8
tick,0x7ff8278cfeb4,99065793,0,0x0,8
tick,0x7ff8278cfeb4,99081698,0,0x0,8
tick,0x7ff8278cfeb4,99096771,0,0x0,8
tick,0x7ff8278cfeb4,99111853,0,0x0,8
tick,0x7ff8278cfeb4,99126965,0,0x0,8
tick,0x7ff8278cfeb4,99142689,0,0x0,8
tick,0x7ff8278cfeb4,99159140,0,0x0,8
tick,0x7ff8278cfeb4,99178270,0,0x0,8
tick,0x7ff8278cfeb4,99194970,0,0x0,8
tick,0x7ff8278cfeb4,99203705,0,0x0,8
tick,0x7ff8278cfeb4,99218912,0,0x0,8
tick,0x7ff8278cfeb4,99234943,0,0x0,8
tick,0x7ff8278cfeb4,99250810,0,0x0,8
tick,0x7ff8278cfeb4,99266893,0,0x0,8
tick,0x7ff8278cfeb4,99282962,0,0x0,8
tick,0x7ff8278cfeb4,99298708,0,0x0,8
tick,0x7ff8278cfeb4,99314050,0,0x0,8
tick,0x7ff8278cfeb4,99328509,0,0x0,8
tick,0x7ff8278cfeb4,99344578,0,0x0,8
tick,0x7ff8278cfeb4,99360544,0,0x0,8
tick,0x7ff8278cfeb4,99376959,0,0x0,8
tick,0x7ff8278cfeb4,99392873,0,0x0,8
tick,0x7ff8278cfeb4,99407612,0,0x0,8
tick,0x7ff8278cfeb4,99426339,0,0x0,8
tick,0x7ff8278cfeb4,99439153,0,0x0,8
tick,0x7ff8278cfeb4,99454366,0,0x0,8
tick,0x7ff8278cfeb4,99470349,0,0x0,8
tick,0x7ff8278cfeb4,99487193,0,0x0,8
tick,0x7ff8278cfeb4,99504034,0,0x0,8
tick,0x7ff8278cfeb4,99518073,0,0x0,8
tick,0x7ff8278cfeb4,99534325,0,0x0,8
tick,0x7ff8278cfeb4,99551273,0,0x0,8
tick,0x7ff8278cfeb4,99566450,0,0x0,8
tick,0x7ff8278cfeb4,99582152,0,0x0,8
tick,0x7ff8278cfeb4,99598136,0,0x0,8
tick,0x7ff8278cfeb4,99613190,0,0x0,8
tick,0x7ff8278cfeb4,99629628,0,0x0,8
tick,0x7ff8278cfeb4,99644471,0,0x0,8
tick,0x7ff8278cfeb4,99660131,0,0x0,8
tick,0x7ff8278cfeb4,99676762,0,0x0,8
tick,0x7ff8278cfeb4,99693268,0,0x0,8
tick,0x7ff8278cfeb4,99706147,0,0x0,8
tick,0x7ff8278cfeb4,99722782,0,0x0,8
tick,0x7ff8278cfeb4,99738159,0,0x0,8
tick,0x7ff8278cfeb4,99754288,0,0x0,8
tick,0x7ff8278cfeb4,99769997,0,0x0,8
tick,0x7ff8278cfeb4,99786678,0,0x0,8
tick,0x7ff8278cfeb4,99800015,0,0x0,8
tick,0x7ff8278cfeb4,99817137,0,0x0,8
tick,0x7ff8278cfeb4,99831818,0,0x0,8
tick,0x7ff8278cfeb4,99845952,0,0x0,8
tick,0x7ff8278cfeb4,99861952,0,0x0,8
tick,0x7ff8278cfeb4,99877117,0,0x0,8
tick,0x7ff8278cfeb4,99892120,0,0x0,8
tick,0x7ff8278cfeb4,99908536,0,0x0,8
tick,0x7ff8278cfeb4,99925291,0,0x0,8
tick,0x7ff8278cfeb4,99940165,0,0x0,8
tick,0x7ff8278cfeb4,99954974,0,0x0,8
tick,0x7ff8278cfeb4,99969901,0,0x0,8
tick,0x7ff8278cfeb4,99984947,0,0x0,8
tick,0x7ff8278cfeb4,99999868,0,0x0,8
tick,0x7ff8278cfeb4,100015942,0,0x0,8
tick,0x7ff8278cfeb4,100031885,0,0x0,8
tick,0x7ff8278cfeb4,100047841,0,0x0,8
tick,0x7ff8278cfeb4,100063880,0,0x0,8
tick,0x7ff8278cfeb4,100080229,0,0x0,8
tick,0x7ff8278cfeb4,100095845,0,0x0,8
tick,0x7ff8278cfeb4,100111480,0,0x0,8
tick,0x7ff8278cfeb4,100126482,0,0x0,8
tick,0x7ff8278cfeb4,100141839,0,0x0,8
tick,0x7ff8278cfeb4,100155783,0,0x0,8
tick,0x7ff8278cfeb4,100172820,0,0x0,8
tick,0x7ff8278cfeb4,100187870,0,0x0,8
tick,0x7ff8278cfeb4,100203903,0,0x0,8
tick,0x7ff8278cfeb4,100219778,0,0x0,8
tick,0x7ff8278cfeb4,100236350,0,0x0,8
tick,0x7ff8278cfeb4,100251801,0,0x0,8
tick,0x7ff8278cfeb4,100267774,0,0x0,8
tick,0x7ff8278cfeb4,100284405,0,0x0,8
tick,0x7ff8278cfeb4,100300030,0,0x0,8
tick,0x7ff8278cfeb4,100316438,0,0x0,8
tick,0x7ff8278cfeb4,100331829,0,0x0,8
tick,0x7ff8278cfeb4,100347920,0,0x0,8
tick,0x7ff8278cfeb4,100362961,0,0x0,8
tick,0x7ff8278cfeb4,100378125,0,0x0,8
tick,0x7ff8278cfeb4,100393853,0,0x0,8
tick,0x7ff8278cfeb4,100414185,0,0x0,8
tick,0x7ff8278cfeb4,100427569,0,0x0,8
tick,0x7ff8278cfeb4,100439736,0,0x0,8
tick,0x7ff8278cfeb4,100454678,0,0x0,8
tick,0x7ff8278cfeb4,100469648,0,0x0,8
tick,0x7ff8278cfeb4,100485660,0,0x0,8
tick,0x7ff8278cfeb4,100501374,0,0x0,8
tick,0x7ff8278cfeb4,100515524,0,0x0,8
tick,0x7ff8278cfeb4,100532438,0,0x0,8
tick,0x7ff8278cfeb4,100546792,0,0x0,8
tick,0x7ff8278cfeb4,100562720,0,0x0,8
tick,0x7ff8278cfeb4,100578686,0,0x0,8
tick,0x7ff8278cfeb4,100594388,0,0x0,8
tick,0x7ff8278cfeb4,100609834,0,0x0,8
tick,0x7ff8278cfeb4,100625426,0,0x0,8
tick,0x7ff8278cfeb4,100639588,0,0x0,8
tick,0x7ff8278cfeb4,100654814,0,0x0,8
tick,0x7ff8278cfeb4,100673793,0,0x0,8
tick,0x7ff8278cfeb4,100685906,0,0x0,8
tick,0x7ff8278cfeb4,100701417,0,0x0,8
tick,0x7ff8278cfeb4,100717098,0,0x0,8
tick,0x7ff8278cfeb4,100732070,0,0x0,8
tick,0x7ff8278cfeb4,100746577,0,0x0,8
tick,0x7ff8278cfeb4,100762450,0,0x0,8
tick,0x7ff8278cfeb4,100777451,0,0x0,8
tick,0x7ff8278cfeb4,100793171,0,0x0,8
tick,0x7ff8278cfeb4,100809145,0,0x0,8
tick,0x7ff8278cfeb4,100827701,0,0x0,8
tick,0x7ff8278cfeb4,100840052,0,0x0,8
tick,0x7ff8278cfeb4,100855153,0,0x0,8
tick,0x7ff8278cfeb4,100871656,0,0x0,8
tick,0x7ff8278cfeb4,100886621,0,0x0,8
tick,0x7ff8278cfeb4,100902065,0,0x0,8
tick,0x7ff8278cfeb4,100918135,0,0x0,8
tick,0x7ff8278cfeb4,100934047,0,0x0,8
tick,0x7ff8278cfeb4,100950059,0,0x0,8
tick,0x7ff8278cfeb4,100966010,0,0x0,8
tick,0x7ff8278cfeb4,100982128,0,0x0,8
tick,0x7ff8278cfeb4,100998129,0,0x0,8
tick,0x7ff8278cfeb4,101013962,0,0x0,8
tick,0x7ff8278cfeb4,101029925,0,0x0,8
tick,0x7ff8278cfeb4,101045980,0,0x0,8
tick,0x7ff8278cfeb4,101062294,0,0x0,8
tick,0x7ff8278cfeb4,101077575,0,0x0,8
tick,0x7ff8278cfeb4,101094860,0,0x0,8
tick,0x7ff8278cfeb4,101107841,0,0x0,8
tick,0x7ff8278cfeb4,101122157,0,0x0,8
tick,0x7ff8278cfeb4,101137671,0,0x0,8
tick,0x7ff8278cfeb4,101152814,0,0x0,8
tick,0x7ff8278cfeb4,101169764,0,0x0,8
tick,0x7ff8278cfeb4,101184236,0,0x0,8
tick,0x7ff8278cfeb4,101203174,0,0x0,8
tick,0x7ff8278cfeb4,101214511,0,0x0,8
tick,0x7ff8278cfeb4,101228906,0,0x0,8
tick,0x7ff8278cfeb4,101245036,0,0x0,8
tick,0x7ff8278cfeb4,101259938,0,0x0,8
tick,0x7ff8278cfeb4,101275827,0,0x0,8
tick,0x7ff8278cfeb4,101292580,0,0x0,8
tick,0x7ff8278cfeb4,101307808,0,0x0,8
tick,0x7ff8278cfeb4,101326025,0,0x0,8
tick,0x7ff8278cfeb4,101339978,0,0x0,8
tick,0x7ff8278cfeb4,101355002,0,0x0,8
tick,0x7ff8278cfeb4,101369776,0,0x0,8
tick,0x7ff8278cfeb4,101385707,0,0x0,8
tick,0x7ff8278cfeb4,101400980,0,0x0,8
tick,0x7ff8278cfeb4,101415675,0,0x0,8
tick,0x7ff8278cfeb4,101432508,0,0x0,8
tick,0x7ff8278cfeb4,101447692,0,0x0,8
tick,0x7ff8278cfeb4,101463851,0,0x0,8
tick,0x7ff8278cfeb4,101478637,0,0x0,8
tick,0x7ff8278cfeb4,101493904,0,0x0,8
tick,0x7ff8278cfeb4,101508941,0,0x0,8
tick,0x7ff8278cfeb4,101524621,0,0x0,8
tick,0x7ff8278cfeb4,101540338,0,0x0,8
tick,0x7ff8278cfeb4,101555131,0,0x0,8
tick,0x7ff8278cfeb4,101570100,0,0x0,8
tick,0x7ff8278cfeb4,101585604,0,0x0,8
tick,0x7ff8278cfeb4,101601204,0,0x0,8
tick,0x7ff8278cfeb4,101615664,0,0x0,8
tick,0x7ff8278cfeb4,101631716,0,0x0,8
tick,0x7ff8278cfeb4,101648637,0,0x0,8
tick,0x7ff8278cfeb4,101662993,0,0x0,8
tick,0x7ff8278cfeb4,101678566,0,0x0,8
tick,0x7ff8278cfeb4,101693638,0,0x0,8
tick,0x7ff8278cfeb4,101710288,0,0x0,8
tick,0x7ff8278cfeb4,101724763,0,0x0,8
tick,0x7ff8278cfeb4,101741543,0,0x0,8
tick,0x7ff8278cfeb4,101756490,0,0x0,8
tick,0x7ff8278cfeb4,101772401,0,0x0,8
tick,0x7ff8278cfeb4,101787751,0,0x0,8
tick,0x7ff8278cfeb4,101802706,0,0x0,8
tick,0x7ff8278cfeb4,101818813,0,0x0,8
tick,0x7ff8278cfeb4,101834076,0,0x0,8
tick,0x7ff8278cfeb4,101848625,0,0x0,8
tick,0x7ff8278cfeb4,101864638,0,0x0,8
tick,0x7ff8278cfeb4,101879602,0,0x0,8
tick,0x7ff8278cfeb4,101895147,0,0x0,8
tick,0x7ff8278cfeb4,101912620,0,0x0,8
tick,0x7ff8278cfeb4,101925867,0,0x0,8
tick,0x7ff8278cfeb4,101942341,0,0x0,8
tick,0x7ff8278cfeb4,101957167,0,0x0,8
tick,0x7ff8278cfeb4,101973759,0,0x0,8
tick,0x7ff8278cfeb4,101989096,0,0x0,8
tick,0x7ff8278cfeb4,102005224,0,0x0,8
tick,0x7ff8278cfeb4,102021217,0,0x0,8
tick,0x7ff8278cfeb4,102036429,0,0x0,8
tick,0x7ff8278cfeb4,102052365,0,0x0,8
tick,0x7ff8278cfeb4,102067149,0,0x0,8
tick,0x7ff8278cfeb4,102083079,0,0x0,8
tick,0x7ff8278cfeb4,102098994,0,0x0,8
tick,0x7ff8278cfeb4,102115106,0,0x0,8
tick,0x7ff8278cfeb4,102131273,0,0x0,8
tick,0x7ff8278cfeb4,102146024,0,0x0,8
tick,0x7ff8278cfeb4,102162852,0,0x0,8
tick,0x7ff8278cfeb4,102177331,0,0x0,8
tick,0x7ff8278cfeb4,102193108,0,0x0,8
tick,0x7ff8278cfeb4,102212684,0,0x0,8
tick,0x7ff8278cfeb4,102228892,0,0x0,8
tick,0x7ff8278cfeb4,102243964,0,0x0,8
tick,0x7ff8278cfeb4,102254512,0,0x0,8
tick,0x7ff8278cfeb4,102269026,0,0x0,8
tick,0x7ff8278cfeb4,102285215,0,0x0,8
tick,0x7ff8278cfeb4,102301277,0,0x0,8
tick,0x7ff8278cfeb4,102325497,0,0x0,8
tick,0x7ff8278cfeb4,102333968,0,0x0,8
tick,0x7ff8278cfeb4,102350298,0,0x0,8
tick,0x7ff8278cfeb4,102366605,0,0x0,8
tick,0x7ff8278cfeb4,102381688,0,0x0,8
tick,0x7ff8278cfeb4,102396479,0,0x0,8
tick,0x7ff8278cfeb4,102412450,0,0x0,8
tick,0x7ff8278cfeb4,102428273,0,0x0,8
tick,0x7ff8278cfeb4,102445735,0,0x0,8
tick,0x7ff8278cfeb4,102459135,0,0x0,8
tick,0x7ff8278cfeb4,102474501,0,0x0,8
tick,0x7ff8278cfeb4,102488847,0,0x0,8
tick,0x7ff8278cfeb4,102504209,0,0x0,8
tick,0x7ff8278cfeb4,102518865,0,0x0,8
tick,0x7ff8278cfeb4,102535026,0,0x0,8
tick,0x7ff8278cfeb4,102551823,0,0x0,8
tick,0x7ff8278cfeb4,102566856,0,0x0,8
tick,0x7ff8278cfeb4,102583471,0,0x0,8
tick,0x7ff8278cfeb4,102597819,0,0x0,8
tick,0x7ff8278cfeb4,102612988,0,0x0,8
tick,0x7ff8278cfeb4,102629440,0,0x0,8
tick,0x7ff8278cfeb4,102645092,0,0x0,8
tick,0x7ff8278cfeb4,102663620,0,0x0,8
tick,0x7ff8278cfeb4,102677263,0,0x0,8
tick,0x7ff8278cfeb4,102692597,0,0x0,8
tick,0x7ff8278cfeb4,102708062,0,0x0,8
tick,0x7ff8278cfeb4,102722852,0,0x0,8
tick,0x7ff8278cfeb4,102737895,0,0x0,8
tick,0x7ff8278cfeb4,102754025,0,0x0,8
tick,0x7ff8278cfeb4,102769420,0,0x0,8
tick,0x7ff8278cfeb4,102783768,0,0x0,8
tick,0x7ff8278cfeb4,102799675,0,0x0,8
tick,0x7ff8278cfeb4,102814853,0,0x0,8
tick,0x7ff8278cfeb4,102830007,0,0x0,8
tick,0x7ff8278cfeb4,102846983,0,0x0,8
tick,0x7ff8278cfeb4,102863048,0,0x0,8
tick,0x7ff8278cfeb4,102876628,0,0x0,8
tick,0x7ff8278cfeb4,102892803,0,0x0,8
tick,0x7ff8278cfeb4,102907652,0,0x0,8
tick,0x7ff8278cfeb4,102924187,0,0x0,8
tick,0x7ff8278cfeb4,102939229,0,0x0,8
tick,0x7ff8278cfeb4,102955429,0,0x0,8
tick,0x7ff8278cfeb4,102971166,0,0x0,8
tick,0x7ff8278cfeb4,102986966,0,0x0,8
tick,0x7ff8278cfeb4,103001449,0,0x0,8
tick,0x7ff8278cfeb4,103017228,0,0x0,8
tick,0x7ff8278cfeb4,103033286,0,0x0,8
tick,0x7ff8278cfeb4,103049100,0,0x0,8
tick,0x7ff8278cfeb4,103065096,0,0x0,8
tick,0x7ff8278cfeb4,103081263,0,0x0,8
tick,0x7ff8278cfeb4,103097148,0,0x0,8
tick,0x7ff8278cfeb4,103113467,0,0x0,8
tick,0x7ff8278cfeb4,103128971,0,0x0,8
tick,0x7ff8278cfeb4,103144161,0,0x0,8
tick,0x7ff8278cfeb4,103159205,0,0x0,8
tick,0x7ff8278cfeb4,103175546,0,0x0,8
tick,0x7ff8278cfeb4,103191104,0,0x0,8
tick,0x7ff8278cfeb4,103207050,0,0x0,8
tick,0x7ff8278cfeb4,103223193,0,0x0,8
tick,0x7ff8278cfeb4,103237167,0,0x0,8
tick,0x7ff8278cfeb4,103252253,0,0x0,8
tick,0x7ff8278cfeb4,103268349,0,0x0,8
tick,0x7ff8278cfeb4,103283046,0,0x0,8
tick,0x7ff8278cfeb4,103299071,0,0x0,8
tick,0x7ff8278cfeb4,103314025,0,0x0,8
tick,0x7ff8278cfeb4,103330127,0,0x0,8
tick,0x7ff8278cfeb4,103345304,0,0x0,8
tick,0x7ff8278cfeb4,103361698,0,0x0,8
tick,0x7ff8278cfeb4,103376409,0,0x0,8
tick,0x7ff8278cfeb4,103391912,0,0x0,8
tick,0x7ff8278cfeb4,103406922,0,0x0,8
tick,0x7ff8278cfeb4,103422393,0,0x0,8
tick,0x7ff8278cfeb4,103437872,0,0x0,8
tick,0x7ff8278cfeb4,103452868,0,0x0,8
tick,0x7ff8278cfeb4,103469175,0,0x0,8
tick,0x7ff8278cfeb4,103484781,0,0x0,8
tick,0x7ff8278cfeb4,103501158,0,0x0,8
tick,0x7ff8278cfeb4,103517338,0,0x0,8
tick,0x7ff8278cfeb4,103532148,0,0x0,8
tick,0x7ff8278cfeb4,103547780,0,0x0,8
tick,0x7ff8278cfeb4,103563420,0,0x0,8
tick,0x7ff8278cfeb4,103584582,0,0x0,8
tick,0x7ff8278cfeb4,103595801,0,0x0,8
tick,0x7ff8278cfeb4,103614185,0,0x0,8
tick,0x7ff8278cfeb4,103625706,0,0x0,8
tick,0x7ff8278cfeb4,103641343,0,0x0,8
tick,0x7ff8278cfeb4,103656963,0,0x0,8
tick,0x7ff8278cfeb4,103672843,0,0x0,8
tick,0x7ff8278cfeb4,103689155,0,0x0,8
tick,0x7ff8278cfeb4,103705284,0,0x0,8
tick,0x7ff8278cfeb4,103719147,0,0x0,8
tick,0x7ff8278cfeb4,103735119,0,0x0,8
tick,0x7ff8278cfeb4,103749827,0,0x0,8
tick,0x7ff8278cfeb4,103764694,0,0x0,8
tick,0x7ff8278cfeb4,103783311,0,0x0,8
tick,0x7ff8278cfeb4,103798346,0,0x0,8
tick,0x7ff8278cfeb4,103812961,0,0x0,8
tick,0x7ff8278cfeb4,103831494,0,0x0,8
tick,0x7ff8278cfeb4,103847543,0,0x0,8
tick,0x7ff8278cfeb4,103859122,0,0x0,8
tick,0x7ff8278cfeb4,103873446,0,0x0,8
tick,0x7ff8278cfeb4,103889741,0,0x0,8
tick,0x7ff8278cfeb4,103905337,0,0x0,8
tick,0x7ff8278cfeb4,103922241,0,0x0,8
tick,0x7ff8278cfeb4,103937790,0,0x0,8
tick,0x7ff8278cfeb4,103952669,0,0x0,8
tick,0x7ff8278cfeb4,103968629,0,0x0,8
tick,0x7ff8278cfeb4,103984629,0,0x0,8
tick,0x7ff8278cfeb4,103998603,0,0x0,8
tick,0x7ff8278cfeb4,104014954,0,0x0,8
tick,0x7ff8278cfeb4,104032464,0,0x0,8
tick,0x7ff8278cfeb4,104052045,0,0x0,8
tick,0x7ff8278cfeb4,104063716,0,0x0,8
tick,0x7ff8278cfeb4,104076651,0,0x0,8
tick,0x7ff8278cfeb4,104091780,0,0x0,8
tick,0x7ff8278cfeb4,104106588,0,0x0,8
tick,0x7ff8278cfeb4,104121910,0,0x0,8
tick,0x7ff8278cfeb4,104137839,0,0x0,8
tick,0x7ff8278cfeb4,104153478,0,0x0,8
tick,0x7ff8278cfeb4,104168812,0,0x0,8
tick,0x7ff8278cfeb4,104183449,0,0x0,8
tick,0x7ff8278cfeb4,104199460,0,0x0,8
tick,0x7ff8278cfeb4,104216243,0,0x0,8
tick,0x7ff8278cfeb4,104231489,0,0x0,8
tick,0x7ff8278cfeb4,104248911,0,0x0,8
tick,0x7ff8278cfeb4,104265467,0,0x0,8
tick,0x7ff8278cfeb4,104277774,0,0x0,8
tick,0x7ff8278cfeb4,104293317,0,0x0,8
tick,0x7ff8278cfeb4,104309727,0,0x0,8
tick,0x7ff8278cfeb4,104324403,0,0x0,8
tick,0x7ff8278cfeb4,104339517,0,0x0,8
tick,0x7ff8278cfeb4,104355610,0,0x0,8
tick,0x7ff8278cfeb4,104371604,0,0x0,8
tick,0x7ff8278cfeb4,104387959,0,0x0,8
tick,0x7ff8278cfeb4,104403727,0,0x0,8
tick,0x7ff8278cfeb4,104419426,0,0x0,8
tick,0x7ff8278cfeb4,104435297,0,0x0,8
tick,0x7ff8278cfeb4,104451502,0,0x0,8
tick,0x7ff8278cfeb4,104467429,0,0x0,8
tick,0x7ff8278cfeb4,104482210,0,0x0,8
tick,0x7ff8278cfeb4,104498089,0,0x0,8
tick,0x7ff8278cfeb4,104514076,0,0x0,8
tick,0x7ff8278cfeb4,104529786,0,0x0,8
tick,0x7ff8278cfeb4,104543313,0,0x0,8
tick,0x7ff8278cfeb4,104559558,0,0x0,8
tick,0x7ff8278cfeb4,104575357,0,0x0,8
tick,0x7ff8278cfeb4,104590408,0,0x0,8
tick,0x7ff8278cfeb4,104606340,0,0x0,8
tick,0x7ff8278cfeb4,104621246,0,0x0,8
tick,0x7ff8278cfeb4,104636983,0,0x0,8
tick,0x7ff8278cfeb4,104652816,0,0x0,8
tick,0x7ff8278cfeb4,104669098,0,0x0,8
tick,0x7ff8278cfeb4,104684022,0,0x0,8
tick,0x7ff8278cfeb4,104698964,0,0x0,8
tick,0x7ff8278cfeb4,104715294,0,0x0,8
tick,0x7ff8278cfeb4,104730215,0,0x0,8
tick,0x7ff8278cfeb4,104748505,0,0x0,8
tick,0x7ff8278cfeb4,104761594,0,0x0,8
tick,0x7ff8278cfeb4,104775907,0,0x0,8
tick,0x7ff8278cfeb4,104791998,0,0x0,8
tick,0x7ff8278cfeb4,104806824,0,0x0,8
tick,0x7ff8278cfeb4,104822858,0,0x0,8
tick,0x7ff8278cfeb4,104836982,0,0x0,8
tick,0x7ff8278cfeb4,104852805,0,0x0,8
tick,0x7ff8278cfeb4,104870316,0,0x0,8
tick,0x7ff8278cfeb4,104884800,0,0x0,8
tick,0x7ff8278cfeb4,104901133,0,0x0,8
tick,0x7ff8278cfeb4,104917196,0,0x0,8
tick,0x7ff8278cfeb4,104932721,0,0x0,8
tick,0x7ff8278cfeb4,104947290,0,0x0,8
tick,0x7ff8278cfeb4,104963159,0,0x0,8
tick,0x7ff8278cfeb4,104979782,0,0x0,8
tick,0x7ff8278cfeb4,104999903,0,0x0,8
tick,0x7ff8278cfeb4,105010294,0,0x0,8
tick,0x7ff8278cfeb4,105024700,0,0x0,8
tick,0x7ff8278cfeb4,105041558,0,0x0,8
tick,0x7ff8278cfeb4,105057009,0,0x0,8
tick,0x7ff8278cfeb4,105072394,0,0x0,8
tick,0x7ff8278cfeb4,105087907,0,0x0,8
tick,0x7ff8278cfeb4,105102899,0,0x0,8
tick,0x7ff8278cfeb4,105118974,0,0x0,8
tick,0x7ff8278cfeb4,105134815,0,0x0,8
tick,0x7ff8278cfeb4,105152000,0,0x0,8
tick,0x7ff8278cfeb4,105165892,0,0x0,8
tick,0x7ff8278cfeb4,105182617,0,0x0,8
tick,0x7ff8278cfeb4,105199002,0,0x0,8
tick,0x7ff8278cfeb4,105214709,0,0x0,8
tick,0x7ff8278cfeb4,105231967,0,0x0,8
tick,0x7ff8278cfeb4,105245008,0,0x0,8
tick,0x7ff8278cfeb4,105265495,0,0x0,8
tick,0x7ff8278cfeb4,105278808,0,0x0,8
tick,0x7ff8278cfeb4,105292160,0,0x0,8
tick,0x7ff8278cfeb4,105305560,0,0x0,8
tick,0x7ff8278cfeb4,105321550,0,0x0,8
tick,0x7ff8278cfeb4,105336611,0,0x0,8
tick,0x7ff8278cfeb4,105352521,0,0x0,8
tick,0x7ff8278cfeb4,105369747,0,0x0,8
tick,0x7ff8278cfeb4,105382591,0,0x0,8
tick,0x7ff8278cfeb4,105399297,0,0x0,8
tick,0x7ff8278cfeb4,105414475,0,0x0,8
tick,0x7ff8278cfeb4,105433926,0,0x0,8
tick,0x7ff8278cfeb4,105445368,0,0x0,8
tick,0x7ff8278cfeb4,105460470,0,0x0,8
tick,0x7ff8278cfeb4,105476635,0,0x0,8
tick,0x7ff8278cfeb4,105492662,0,0x0,8
tick,0x7ff8278cfeb4,105507540,0,0x0,8
tick,0x7ff8278cfeb4,105523761,0,0x0,8
tick,0x7ff8278cfeb4,105539261,0,0x0,8
tick,0x7ff8278cfeb4,105555236,0,0x0,8
tick,0x7ff8278cfeb4,105571380,0,0x0,8
tick,0x7ff8278cfeb4,105587274,0,0x0,8
tick,0x7ff8278cfeb4,105602025,0,0x0,8
tick,0x7ff8278cfeb4,105617209,0,0x0,8
tick,0x7ff8278cfeb4,105633294,0,0x0,8
tick,0x7ff8278cfeb4,105647955,0,0x0,8
tick,0x7ff8278cfeb4,105663111,0,0x0,8
tick,0x7ff8278cfeb4,105678137,0,0x0,8
tick,0x7ff8278cfeb4,105693100,0,0x0,8
tick,0x7ff8278cfeb4,105708113,0,0x0,8
tick,0x7ff8278cfeb4,105723069,0,0x0,8
tick,0x7ff8278cfeb4,105738290,0,0x0,8
tick,0x7ff8278cfeb4,105754127,0,0x0,8
tick,0x7ff8278cfeb4,105769830,0,0x0,8
tick,0x7ff8278cfeb4,105786671,0,0x0,8
tick,0x7ff8278cfeb4,105803666,0,0x0,8
tick,0x7ff8278cfeb4,105816891,0,0x0,8
tick,0x7ff8278cfeb4,105831937,0,0x0,8
tick,0x7ff8278cfeb4,105848165,0,0x0,8
tick,0x7ff8278cfeb4,105864575,0,0x0,8
tick,0x7ff8278cfeb4,105881803,0,0x0,8
tick,0x7ff8278cfeb4,105895034,0,0x0,8
tick,0x7ff8278cfeb4,105909901,0,0x0,8
tick,0x7ff8278cfeb4,105925907,0,0x0,8
tick,0x7ff8278cfeb4,105941466,0,0x0,8
tick,0x7ff8278cfeb4,105955782,0,0x0,8
tick,0x7ff8278cfeb4,105971988,0,0x0,8
tick,0x7ff8278cfeb4,105988158,0,0x0,8
tick,0x7ff8278cfeb4,106002810,0,0x0,8
tick,0x7ff8278cfeb4,106018861,0,0x0,8
tick,0x7ff8278cfeb4,106034087,0,0x0,8
tick,0x7ff8278cfeb4,106049847,0,0x0,8
tick,0x7ff8278cfeb4,106066428,0,0x0,8
tick,0x7ff8278cfeb4,106081938,0,0x0,8
tick,0x7ff8278cfeb4,106099782,0,0x0,8
tick,0x7ff8278cfeb4,106112990,0,0x0,8
tick,0x7ff8278cfeb4,106127923,0,0x0,8
tick,0x7ff8278cfeb4,106143892,0,0x0,8
tick,0x7ff8278cfeb4,106159902,0,0x0,8
tick,0x7ff8278cfeb4,106174782,0,0x0,8
tick,0x7ff8278cfeb4,106189601,0,0x0,8
tick,0x7ff8278cfeb4,106205707,0,0x0,8
tick,0x7ff8278cfeb4,106221002,0,0x0,8
tick,0x7ff8278cfeb4,106236178,0,0x0,8
tick,0x7ff8278cfeb4,106252843,0,0x0,8
tick,0x7ff8278cfeb4,106268109,0,0x0,8
tick,0x7ff8278cfeb4,106283673,0,0x0,8
tick,0x7ff8278cfeb4,106300676,0,0x0,8
tick,0x7ff8278cfeb4,106315924,0,0x0,8
tick,0x7ff8278cfeb4,106333151,0,0x0,8
tick,0x7ff8278cfeb4,106347704,0,0x0,8
tick,0x7ff8278cfeb4,106363137,0,0x0,8
tick,0x7ff8278cfeb4,106379251,0,0x0,8
tick,0x7ff8278cfeb4,106394939,0,0x0,8
tick,0x7ff8278cfeb4,106412021,0,0x0,8
tick,0x7ff8278cfeb4,106426938,0,0x0,8
tick,0x7ff8278cfeb4,106442228,0,0x0,8
tick,0x7ff8278cfeb4,106457814,0,0x0,8
tick,0x7ff8278cfeb4,106472908,0,0x0,8
tick,0x7ff8278cfeb4,106488799,0,0x0,8
tick,0x7ff8278cfeb4,106504870,0,0x0,8
tick,0x7ff8278cfeb4,106523183,0,0x0,8
tick,0x7ff8278cfeb4,106546192,0,0x0,8
tick,0x7ff8278cfeb4,106557160,0,0x0,8
tick,0x7ff8278cfeb4,106567788,0,0x0,8
tick,0x7ff8278cfeb4,106584359,0,0x0,8
tick,0x7ff8278cfeb4,106602612,0,0x0,8
tick,0x7ff8278cfeb4,106617802,0,0x0,8
tick,0x7ff8278cfeb4,106634426,0,0x0,8
tick,0x7ff8278cfeb4,106644768,0,0x0,8
tick,0x7ff8278cfeb4,106671117,0,0x0,8
tick,0x7ff8278cfeb4,106680328,0,0x0,8
tick,0x7ff8278cfeb4,106705701,0,0x0,8
tick,0x7ff8278cfeb4,106745186,0,0x0,8
tick,0x7ff8278cfeb4,106754273,0,0x0,8
tick,0x7ff8278cfeb4,106769362,0,0x0,8
tick,0x7ff8278cfeb4,106785546,0,0x0,8
tick,0x7ff8278cfeb4,106802728,0,0x0,8
tick,0x7ff8278cfeb4,106820363,0,0x0,8
tick,0x7ff8278cfeb4,106835846,0,0x0,8
tick,0x7ff8278cfeb4,106845097,0,0x0,8
tick,0x7ff8278cfeb4,106869903,0,0x0,8
tick,0x7ff8278cfeb4,106884617,0,0x0,8
tick,0x7ff8278cfeb4,106894987,0,0x0,8
tick,0x7ff8278cfeb4,106907039,0,0x0,8
tick,0x7ff8278cfeb4,106926545,0,0x0,8
tick,0x7ff8278cfeb4,106941047,0,0x0,8
tick,0x7ff8278cfeb4,106954789,0,0x0,8
tick,0x7ff8278cfeb4,106968108,0,0x0,8
tick,0x7ff8278cfeb4,106988587,0,0x0,8
tick,0x7ff8278cfeb4,106996842,0,0x0,8
tick,0x7ff8278cfeb4,107012263,0,0x0,8
tick,0x7ff8278cfeb4,107027559,0,0x0,8
tick,0x7ff8278cfeb4,107043792,0,0x0,8
tick,0x7ff8278cfeb4,107062478,0,0x0,8
tick,0x7ff8278cfeb4,107077906,0,0x0,8
tick,0x7ff8278cfeb4,107091902,0,0x0,8
tick,0x7ff8278cfeb4,107108263,0,0x0,8
tick,0x7ff8278cfeb4,107123254,0,0x0,8
tick,0x7ff8278cfeb4,107138096,0,0x0,8
tick,0x7ff8278cfeb4,107154783,0,0x0,8
tick,0x7ff8278cfeb4,107168710,0,0x0,8
tick,0x7ff8278cfeb4,107183332,0,0x0,8
tick,0x7ff8278cfeb4,107203391,0,0x0,8
tick,0x7ff8278cfeb4,107213702,0,0x0,8
tick,0x7ff8278cfeb4,107230200,0,0x0,8
tick,0x7ff8278cfeb4,107243128,0,0x0,8
tick,0x7ff8278cfeb4,107270033,0,0x0,8
tick,0x7ff8278cfeb4,107274438,0,0x0,8
tick,0x7ff8278cfeb4,107295138,0,0x0,8
tick,0x7ff8278cfeb4,107311736,0,0x0,8
tick,0x7ff8278cfeb4,107320652,0,0x0,8
tick,0x7ff8278cfeb4,107335385,0,0x0,8
tick,0x7ff8278cfeb4,107354340,0,0x0,8
tick,0x7ff8278cfeb4,107374583,0,0x0,8
tick,0x7ff8278cfeb4,107382200,0,0x0,8
tick,0x7ff8278cfeb4,107397430,0,0x0,8
tick,0x7ff8278cfeb4,107411994,0,0x0,8
tick,0x7ff8278cfeb4,107432230,0,0x0,8
tick,0x7ff8278cfeb4,107445485,0,0x0,8
tick,0x7ff8278cfeb4,107463825,0,0x0,8
tick,0x7ff8278cfeb4,107475382,0,0x0,8
tick,0x7ff8278cfeb4,107490103,0,0x0,8
tick,0x7ff8278cfeb4,107510133,0,0x0,8
tick,0x7ff8278cfeb4,107523959,0,0x0,8
tick,0x7ff8278cfeb4,107538276,0,0x0,8
tick,0x7ff8278cfeb4,107552840,0,0x0,8
tick,0x7ff8278cfeb4,107574705,0,0x0,8
tick,0x7ff8278cfeb4,107588444,0,0x0,8
tick,0x7ff8278cfeb4,107602820,0,0x0,8
tick,0x7ff8278cfeb4,107614205,0,0x0,8
tick,0x7ff8278cfeb4,107632790,0,0x0,8
tick,0x7ff8278cfeb4,107646197,0,0x0,8
tick,0x7ff8278cfeb4,107661774,0,0x0,8
tick,0x7ff8278cfeb4,107678116,0,0x0,8
tick,0x7ff8278cfeb4,107693802,0,0x0,8
tick,0x7ff8278cfeb4,107711325,0,0x0,8
tick,0x7ff8278cfeb4,107728225,0,0x0,8
tick,0x7ff8278cfeb4,107740261,0,0x0,8
tick,0x7ff8278cfeb4,107763759,0,0x0,8
tick,0x7ff8278cfeb4,107770027,0,0x0,8
tick,0x7ff8278cfeb4,107784989,0,0x0,8
tick,0x7ff8278cfeb4,107801167,0,0x0,8
tick,0x7ff8278cfeb4,107817150,0,0x0,8
tick,0x7ff8278cfeb4,107835047,0,0x0,8
tick,0x7ff8278cfeb4,107850449,0,0x0,8
tick,0x7ff8278cfeb4,107869624,0,0x0,8
tick,0x7ff8278cfeb4,107881749,0,0x0,8
tick,0x7ff8278cfeb4,107897673,0,0x0,8
tick,0x7ff8278cfeb4,107913102,0,0x0,8
tick,0x7ff8278cfeb4,107929476,0,0x0,8
tick,0x7ff8278cfeb4,107942645,0,0x0,8
tick,0x7ff8278cfeb4,107958858,0,0x0,8
tick,0x7ff8278cfeb4,107975392,0,0x0,8
tick,0x7ff8278cfeb4,107989779,0,0x0,8
tick,0x7ff8278cfeb4,108004838,0,0x0,8
tick,0x7ff8278cfeb4,108019734,0,0x0,8
tick,0x7ff8278cfeb4,108035302,0,0x0,8
tick,0x7ff8278cfeb4,108049740,0,0x0,8
tick,0x7ff8278cfeb4,108068936,0,0x0,8
tick,0x7ff8278cfeb4,108084914,0,0x0,8
tick,0x7ff8278cfeb4,108096676,0,0x0,8
tick,0x7ff8278cfeb4,108112776,0,0x0,8
tick,0x7ff8278cfeb4,108127623,0,0x0,8
tick,0x7ff8278cfeb4,108144582,0,0x0,8
tick,0x7ff8278cfeb4,108158482,0,0x0,8
tick,0x7ff8278cfeb4,108174277,0,0x0,8
tick,0x7ff8278cfeb4,108189077,0,0x0,8
tick,0x7ff8278cfeb4,108204905,0,0x0,8
tick,0x7ff8278cfeb4,108220676,0,0x0,8
tick,0x7ff8278cfeb4,108236801,0,0x0,8
tick,0x7ff8278cfeb4,108256580,0,0x0,8
tick,0x7ff8278cfeb4,108276154,0,0x0,8
tick,0x7ff8278cfeb4,108290117,0,0x0,8
tick,0x7ff8278cfeb4,108298801,0,0x0,8
tick,0x7ff8278cfeb4,108317353,0,0x0,8
tick,0x7ff8278cfeb4,108329572,0,0x0,8
tick,0x7ff8278cfeb4,108344897,0,0x0,8
tick,0x7ff8278cfeb4,108360012,0,0x0,8
tick,0x7ff8278cfeb4,108379935,0,0x0,8
tick,0x7ff8278cfeb4,108392381,0,0x0,8
tick,0x7ff8278cfeb4,108411442,0,0x0,8
tick,0x7ff8278cfeb4,108424326,0,0x0,8
tick,0x7ff8278cfeb4,108438942,0,0x0,8
tick,0x7ff8278cfeb4,108461284,0,0x0,8
tick,0x7ff8278cfeb4,108469999,0,0x0,8
tick,0x7ff8278cfeb4,108487451,0,0x0,8
tick,0x7ff8278cfeb4,108501197,0,0x0,8
tick,0x7ff8278cfeb4,108519361,0,0x0,8
tick,0x7ff8278cfeb4,108536921,0,0x0,8
tick,0x7ff8278cfeb4,108548402,0,0x0,8
tick,0x7ff8278cfeb4,108564200,0,0x0,8
tick,0x7ff8278cfeb4,108580051,0,0x0,8
tick,0x7ff8278cfeb4,108594887,0,0x0,8
tick,0x7ff8278cfeb4,108609863,0,0x0,8
tick,0x7ff8278cfeb4,108624884,0,0x0,8
tick,0x7ff8278cfeb4,108641164,0,0x0,8
tick,0x7ff8278cfeb4,108656039,0,0x0,8
tick,0x7ff8278cfeb4,108671231,0,0x0,8
tick,0x7ff8278cfeb4,108686885,0,0x0,8
tick,0x7ff8278cfeb4,108702385,0,0x0,8
tick,0x7ff8278cfeb4,108717060,0,0x0,8
tick,0x7ff8278cfeb4,108735007,0,0x0,8
tick,0x7ff8278cfeb4,108747933,0,0x0,8
tick,0x7ff8278cfeb4,108762904,0,0x0,8
tick,0x7ff8278cfeb4,108779100,0,0x0,8
tick,0x7ff8278cfeb4,108794018,0,0x0,8
tick,0x7ff8278cfeb4,108809910,0,0x0,8
tick,0x7ff8278cfeb4,108824923,0,0x0,8
tick,0x7ff8278cfeb4,108841378,0,0x0,8
tick,0x7ff8278cfeb4,108855015,0,0x0,8
tick,0x7ff8278cfeb4,108872812,0,0x0,8
tick,0x7ff8278cfeb4,108885990,0,0x0,8
tick,0x7ff8278cfeb4,108903441,0,0x0,8
tick,0x7ff8278cfeb4,108919429,0,0x0,8
tick,0x7ff8278cfeb4,108932388,0,0x0,8
tick,0x7ff8278cfeb4,108948313,0,0x0,8
tick,0x7ff8278cfeb4,108962876,0,0x0,8
tick,0x7ff8278cfeb4,108980023,0,0x0,8
tick,0x7ff8278cfeb4,108995482,0,0x0,8
tick,0x7ff8278cfeb4,109009983,0,0x0,8
tick,0x7ff8278cfeb4,109026005,0,0x0,8
tick,0x7ff8278cfeb4,109042842,0,0x0,8
tick,0x7ff8278cfeb4,109057052,0,0x0,8
tick,0x7ff8278cfeb4,109072834,0,0x0,8
tick,0x7ff8278cfeb4,109086956,0,0x0,8
tick,0x7ff8278cfeb4,109103372,0,0x0,8
tick,0x7ff8278cfeb4,109118204,0,0x0,8
tick,0x7ff8278cfeb4,109132911,0,0x0,8
tick,0x7ff8278cfeb4,109149365,0,0x0,8
tick,0x7ff8278cfeb4,109164957,0,0x0,8
tick,0x7ff8278cfeb4,109182350,0,0x0,8
tick,0x7ff8278cfeb4,109197400,0,0x0,8
tick,0x7ff8278cfeb4,109213228,0,0x0,8
tick,0x7ff8278cfeb4,109228006,0,0x0,8
tick,0x7ff8278cfeb4,109243970,0,0x0,8
tick,0x7ff8278cfeb4,109260249,0,0x0,8
tick,0x7ff8278cfeb4,109273349,0,0x0,8
tick,0x7ff8278cfeb4,109288468,0,0x0,8
tick,0x7ff8278cfeb4,109310204,0,0x0,8
tick,0x7ff8278cfeb4,109320672,0,0x0,8
tick,0x7ff8278cfeb4,109332923,0,0x0,8
tick,0x7ff8278cfeb4,109347871,0,0x0,8
tick,0x7ff8278cfeb4,109363235,0,0x0,8
tick,0x7ff8278cfeb4,109378974,0,0x0,8
tick,0x7ff8278cfeb4,109394111,0,0x0,8
tick,0x7ff8278cfeb4,109408833,0,0x0,8
tick,0x7ff8278cfeb4,109424081,0,0x0,8
tick,0x7ff8278cfeb4,109439825,0,0x0,8
tick,0x7ff8278cfeb4,109455714,0,0x0,8
tick,0x7ff8278cfeb4,109472547,0,0x0,8
tick,0x7ff8278cfeb4,109487238,0,0x0,8
tick,0x7ff8278cfeb4,109503448,0,0x0,8
tick,0x7ff8278cfeb4,109516576,0,0x0,8
tick,0x7ff8278cfeb4,109532747,0,0x0,8
tick,0x7ff8278cfeb4,109547776,0,0x0,8
tick,0x7ff8278cfeb4,109562828,0,0x0,8
tick,0x7ff8278cfeb4,109578944,0,0x0,8
tick,0x7ff8278cfeb4,109595200,0,0x0,8
tick,0x7ff8278cfeb4,109609096,0,0x0,8
tick,0x7ff8278cfeb4,109624743,0,0x0,8
tick,0x7ff8278cfeb4,109642201,0,0x0,8
tick,0x7ff8278cfeb4,109657913,0,0x0,8
tick,0x7ff8278cfeb4,109672252,0,0x0,8
tick,0x7ff8278cfeb4,109688194,0,0x0,8
tick,0x7ff8278cfeb4,109704118,0,0x0,8
tick,0x7ff8278cfeb4,109716777,0,0x0,8
tick,0x7ff8278cfeb4,109744874,0,0x0,8
tick,0x7ff8278cfeb4,109748370,0,0x0,8
tick,0x7ff8278cfeb4,109762736,0,0x0,8
tick,0x7ff8278cfeb4,109777494,0,0x0,8
tick,0x7ff8278cfeb4,109795110,0,0x0,8
tick,0x7ff8278cfeb4,109808720,0,0x0,8
tick,0x7ff8278cfeb4,109823850,0,0x0,8
tick,0x7ff8278cfeb4,109838609,0,0x0,8
tick,0x7ff8278cfeb4,109854620,0,0x0,8
tick,0x7ff8278cfeb4,109872181,0,0x0,8
tick,0x7ff8278cfeb4,109888061,0,0x0,8
tick,0x7ff8278cfeb4,109903541,0,0x0,8
tick,0x7ff8278cfeb4,109921106,0,0x0,8
tick,0x7ff8278cfeb4,109940108,0,0x0,8
tick,0x7ff8278cfeb4,109948798,0,0x0,8
tick,0x7ff8278cfeb4,109962522,0,0x0,8
tick,0x7ff8278cfeb4,109977562,0,0x0,8
tick,0x7ff8278cfeb4,109993950,0,0x0,8
tick,0x7ff8278cfeb4,110009071,0,0x0,8
tick,0x7ff8278cfeb4,110024428,0,0x0,8
tick,0x7ff8278cfeb4,110040428,0,0x0,8
tick,0x7ff8278cfeb4,110057124,0,0x0,8
tick,0x7ff8278cfeb4,110071148,0,0x0,8
tick,0x7ff8278cfeb4,110087632,0,0x0,8
tick,0x7ff8278cfeb4,110104601,0,0x0,8
tick,0x7ff8278cfeb4,110117383,0,0x0,8
tick,0x7ff8278cfeb4,110133212,0,0x0,8
tick,0x7ff8278cfeb4,110149034,0,0x0,8
tick,0x7ff8278cfeb4,110164949,0,0x0,8
tick,0x7ff8278cfeb4,110181877,0,0x0,8
tick,0x7ff8278cfeb4,110197927,0,0x0,8
tick,0x7ff8278cfeb4,110213033,0,0x0,8
tick,0x7ff8278cfeb4,110227957,0,0x0,8
tick,0x7ff8278cfeb4,110243132,0,0x0,8
tick,0x7ff8278cfeb4,110258250,0,0x0,8
tick,0x7ff8278cfeb4,110278341,0,0x0,8
tick,0x7ff8278cfeb4,110290961,0,0x0,8
tick,0x7ff8278cfeb4,110305125,0,0x0,8
tick,0x7ff8278cfeb4,110323428,0,0x0,8
tick,0x7ff8278cfeb4,110339557,0,0x0,8
tick,0x7ff8278cfeb4,110355281,0,0x0,8
tick,0x7ff8278cfeb4,110366058,0,0x0,8
tick,0x7ff8278cfeb4,110383106,0,0x0,8
tick,0x7ff8278cfeb4,110397927,0,0x0,8
tick,0x7ff8278cfeb4,110414000,0,0x0,8
tick,0x7ff8278cfeb4,110430055,0,0x0,8
tick,0x7ff8278cfeb4,110445811,0,0x0,8
tick,0x7ff8278cfeb4,110462313,0,0x0,8
tick,0x7ff8278cfeb4,110477880,0,0x0,8
tick,0x7ff8278cfeb4,110494243,0,0x0,8
tick,0x7ff8278cfeb4,110509388,0,0x0,8
tick,0x7ff8278cfeb4,110523855,0,0x0,8
tick,0x7ff8278cfeb4,110539979,0,0x0,8
tick,0x7ff8278cfeb4,110554882,0,0x0,8
tick,0x7ff8278cfeb4,110571408,0,0x0,8
tick,0x7ff8278cfeb4,110586471,0,0x0,8
tick,0x7ff8278cfeb4,110605730,0,0x0,8
tick,0x7ff8278cfeb4,110617149,0,0x0,8
tick,0x7ff8278cfeb4,110632844,0,0x0,8
tick,0x7ff8278cfeb4,110647752,0,0x0,8
tick,0x7ff8278cfeb4,110663828,0,0x0,8
tick,0x7ff8278cfeb4,110678959,0,0x0,8
tick,0x7ff8278cfeb4,110695648,0,0x0,8
tick,0x7ff8278cfeb4,110710298,0,0x0,8
tick,0x7ff8278cfeb4,110724839,0,0x0,8
tick,0x7ff8278cfeb4,110739994,0,0x0,8
tick,0x7ff8278cfeb4,110754864,0,0x0,8
tick,0x7ff8278cfeb4,110772588,0,0x0,8
tick,0x7ff8278cfeb4,110789220,0,0x0,8
tick,0x7ff8278cfeb4,110801330,0,0x0,8
tick,0x7ff8278cfeb4,110816855,0,0x0,8
tick,0x7ff8278cfeb4,110831887,0,0x0,8
tick,0x7ff8278cfeb4,110847704,0,0x0,8
tick,0x7ff8278cfeb4,110862826,0,0x0,8
tick,0x7ff8278cfeb4,110877686,0,0x0,8
tick,0x7ff8278cfeb4,110892704,0,0x0,8
tick,0x7ff8278cfeb4,110908663,0,0x0,8
tick,0x7ff8278cfeb4,110926003,0,0x0,8
tick,0x7ff8278cfeb4,110940262,0,0x0,8
tick,0x7ff8278cfeb4,110956158,0,0x0,8
tick,0x7ff8278cfeb4,110972275,0,0x0,8
tick,0x7ff8278cfeb4,110987778,0,0x0,8
tick,0x7ff8278cfeb4,111006523,0,0x0,8
tick,0x7ff8278cfeb4,111016931,0,0x0,8
tick,0x7ff8278cfeb4,111031825,0,0x0,8
tick,0x7ff8278cfeb4,111046632,0,0x0,8
tick,0x7ff8278cfeb4,111062685,0,0x0,8
tick,0x7ff8278cfeb4,111077865,0,0x0,8
tick,0x7ff8278cfeb4,111093646,0,0x0,8
tick,0x7ff8278cfeb4,111110198,0,0x0,8
tick,0x7ff8278cfeb4,111126367,0,0x0,8
tick,0x7ff8278cfeb4,111140563,0,0x0,8
tick,0x7ff8278cfeb4,111155512,0,0x0,8
tick,0x7ff8278cfeb4,111171985,0,0x0,8
tick,0x7ff8278cfeb4,111187296,0,0x0,8
tick,0x7ff8278cfeb4,111203521,0,0x0,8
tick,0x7ff8278cfeb4,111217546,0,0x0,8
tick,0x7ff8278cfeb4,111233748,0,0x0,8
tick,0x7ff8278cfeb4,111249643,0,0x0,8
tick,0x7ff8278cfeb4,111264451,0,0x0,8
tick,0x7ff8278cfeb4,111294806,0,0x0,8
tick,0x7ff8278cfeb4,111316552,0,0x0,8
tick,0x7ff8278cfeb4,111331405,0,0x0,8
tick,0x7ff8278cfeb4,111344304,0,0x0,8
tick,0x7ff8278cfeb4,111358374,0,0x0,8
tick,0x7ff8278cfeb4,111373543,0,0x0,8
tick,0x7ff8278cfeb4,111388736,0,0x0,8
tick,0x7ff8278cfeb4,111405947,0,0x0,8
tick,0x7ff8278cfeb4,111422737,0,0x0,8
tick,0x7ff8278cfeb4,111438551,0,0x0,8
tick,0x7ff8278cfeb4,111450488,0,0x0,8
tick,0x7ff8278cfeb4,111465384,0,0x0,8
tick,0x7ff8278cfeb4,111481897,0,0x0,8
tick,0x7ff8278cfeb4,111497424,0,0x0,8
tick,0x7ff8278cfeb4,111513354,0,0x0,8
tick,0x7ff8278cfeb4,111530310,0,0x0,8
tick,0x7ff8278cfeb4,111543518,0,0x0,8
tick,0x7ff8278cfeb4,111558301,0,0x0,8
tick,0x7ff8278cfeb4,111573322,0,0x0,8
tick,0x7ff8278cfeb4,111589308,0,0x0,8
tick,0x7ff8278cfeb4,111605595,0,0x0,8
tick,0x7ff8278cfeb4,111623009,0,0x0,8
tick,0x7ff8278cfeb4,111638848,0,0x0,8
tick,0x7ff8278cfeb4,111650395,0,0x0,8
tick,0x7ff8278cfeb4,111666300,0,0x0,8
tick,0x7ff8278cfeb4,111681561,0,0x0,8
tick,0x7ff8278cfeb4,111697915,0,0x0,8
tick,0x7ff8278cfeb4,111712819,0,0x0,8
tick,0x7ff8278cfeb4,111727364,0,0x0,8
tick,0x7ff8278cfeb4,111743278,0,0x0,8
tick,0x7ff8278cfeb4,111759151,0,0x0,8
tick,0x7ff8278cfeb4,111775184,0,0x0,8
tick,0x7ff8278cfeb4,111790397,0,0x0,8
tick,0x7ff8278cfeb4,111805859,0,0x0,8
tick,0x7ff8278cfeb4,111821661,0,0x0,8
tick,0x7ff8278cfeb4,111837563,0,0x0,8
tick,0x7ff8278cfeb4,111851611,0,0x0,8
tick,0x7ff8278cfeb4,111867142,0,0x0,8
tick,0x7ff8278cfeb4,111882396,0,0x0,8
tick,0x7ff8278cfeb4,111897704,0,0x0,8
tick,0x7ff8278cfeb4,111912914,0,0x0,8
tick,0x7ff8278cfeb4,111927799,0,0x0,8
tick,0x7ff8278cfeb4,111942170,0,0x0,8
tick,0x7ff8278cfeb4,111958052,0,0x0,8
tick,0x7ff8278cfeb4,111974093,0,0x0,8
tick,0x7ff8278cfeb4,111989180,0,0x0,8
tick,0x7ff8278cfeb4,112005998,0,0x0,8
tick,0x7ff8278cfeb4,112022688,0,0x0,8
tick,0x7ff8278cfeb4,112035792,0,0x0,8
tick,0x7ff8278cfeb4,112051202,0,0x0,8
tick,0x7ff8278cfeb4,112066114,0,0x0,8
tick,0x7ff8278cfeb4,112082082,0,0x0,8
tick,0x7ff8278cfeb4,112098229,0,0x0,8
tick,0x7ff8278cfeb4,112115066,0,0x0,8
tick,0x7ff8278cfeb4,112129151,0,0x0,8
tick,0x7ff8278cfeb4,112144048,0,0x0,8
tick,0x7ff8278cfeb4,112160214,0,0x0,8
tick,0x7ff8278cfeb4,112176007,0,0x0,8
tick,0x7ff8278cfeb4,112190915,0,0x0,8
tick,0x7ff8278cfeb4,112207200,0,0x0,8
tick,0x7ff8278cfeb4,112222720,0,0x0,8
tick,0x7ff8278cfeb4,112237550,0,0x0,8
tick,0x7ff8278cfeb4,112254070,0,0x0,8
tick,0x7ff8278cfeb4,112268164,0,0x0,8
tick,0x7ff8278cfeb4,112282956,0,0x0,8
tick,0x7ff8278cfeb4,112300008,0,0x0,8
tick,0x7ff8278cfeb4,112314990,0,0x0,8
tick,0x7ff8278cfeb4,112331370,0,0x0,8
tick,0x7ff8278cfeb4,112346319,0,0x0,8
tick,0x7ff8278cfeb4,112361977,0,0x0,8
tick,0x7ff8278cfeb4,112376927,0,0x0,8
tick,0x7ff8278cfeb4,112392261,0,0x0,8
tick,0x7ff8278cfeb4,112407204,0,0x0,8
tick,0x7ff8278cfeb4,112423423,0,0x0,8
tick,0x7ff8278cfeb4,112439055,0,0x0,8
tick,0x7ff8278cfeb4,112452797,0,0x0,8
tick,0x7ff8278cfeb4,112468869,0,0x0,8
tick,0x7ff8278cfeb4,112483795,0,0x0,8
tick,0x7ff8278cfeb4,112500397,0,0x0,8
tick,0x7ff8278cfeb4,112514944,0,0x0,8
tick,0x7ff8278cfeb4,112530515,0,0x0,8
tick,0x7ff8278cfeb4,112552862,0,0x0,8
tick,0x7ff8278cfeb4,112562753,0,0x0,8
tick,0x7ff8278cfeb4,112576365,0,0x0,8
tick,0x7ff8278cfeb4,112591933,0,0x0,8
tick,0x7ff8278cfeb4,112606877,0,0x0,8
tick,0x7ff8278cfeb4,112623666,0,0x0,8
tick,0x7ff8278cfeb4,112642360,0,0x0,8
tick,0x7ff8278cfeb4,112653090,0,0x0,8
tick,0x7ff8278cfeb4,112668667,0,0x0,8
tick,0x7ff8278cfeb4,112685098,0,0x0,8
tick,0x7ff8278cfeb4,112700011,0,0x0,8
tick,0x7ff8278cfeb4,112716272,0,0x0,8
tick,0x7ff8278cfeb4,112735167,0,0x0,8
tick,0x7ff8278cfeb4,112746522,0,0x0,8
tick,0x7ff8278cfeb4,112763199,0,0x0,8
tick,0x7ff8278cfeb4,112777137,0,0x0,8
tick,0x7ff8278cfeb4,112791977,0,0x0,8
tick,0x7ff8278cfeb4,112806907,0,0x0,8
tick,0x7ff8278cfeb4,112824010,0,0x0,8
tick,0x7ff8278cfeb4,112841522,0,0x0,8
tick,0x7ff8278cfeb4,112852576,0,0x0,8
tick,0x7ff8278cfeb4,112868918,0,0x0,8
tick,0x7ff8278cfeb4,112883519,0,0x0,8
tick,0x7ff8278cfeb4,112899574,0,0x0,8
tick,0x7ff8278cfeb4,112915089,0,0x0,8
tick,0x7ff8278cfeb4,112932470,0,0x0,8
tick,0x7ff8278cfeb4,112946026,0,0x0,8
tick,0x7ff8278cfeb4,112960540,0,0x0,8
tick,0x7ff8278cfeb4,112976235,0,0x0,8
tick,0x7ff8278cfeb4,112992244,0,0x0,8
tick,0x7ff8278cfeb4,113008368,0,0x0,8
tick,0x7ff8278cfeb4,113023903,0,0x0,8
tick,0x7ff8278cfeb4,113039191,0,0x0,8
tick,0x7ff8278cfeb4,113056846,0,0x0,8
tick,0x7ff8278cfeb4,113069021,0,0x0,8
tick,0x7ff8278cfeb4,113085309,0,0x0,8
tick,0x7ff8278cfeb4,113100296,0,0x0,8
tick,0x7ff8278cfeb4,113115544,0,0x0,8
tick,0x7ff8278cfeb4,113130521,0,0x0,8
tick,0x7ff8278cfeb4,113147604,0,0x0,8
tick,0x7ff8278cfeb4,113161822,0,0x0,8
tick,0x7ff8278cfeb4,113177402,0,0x0,8
tick,0x7ff8278cfeb4,113192501,0,0x0,8
tick,0x7ff8278cfeb4,113208659,0,0x0,8
tick,0x7ff8278cfeb4,113223890,0,0x0,8
tick,0x7ff8278cfeb4,113239863,0,0x0,8
tick,0x7ff8278cfeb4,113252921,0,0x0,8
tick,0x7ff8278cfeb4,113269103,0,0x0,8
tick,0x7ff8278cfeb4,113284300,0,0x0,8
tick,0x7ff8278cfeb4,113300000,0,0x0,8
tick,0x7ff8278cfeb4,113315069,0,0x0,8
tick,0x7ff8278cfeb4,113330401,0,0x0,8
tick,0x7ff8278cfeb4,113345011,0,0x0,8
tick,0x7ff8278cfeb4,113361682,0,0x0,8
tick,0x7ff8278cfeb4,113376088,0,0x0,8
tick,0x7ff8278cfeb4,113391918,0,0x0,8
tick,0x7ff8278cfeb4,113410159,0,0x0,8
tick,0x7ff8278cfeb4,113424286,0,0x0,8
tick,0x7ff8278cfeb4,113443505,0,0x0,8
tick,0x7ff8278cfeb4,113456311,0,0x0,8
tick,0x7ff8278cfeb4,113475655,0,0x0,8
tick,0x7ff8278cfeb4,113486263,0,0x0,8
tick,0x7ff8278cfeb4,113501959,0,0x0,8
tick,0x7ff8278cfeb4,113516897,0,0x0,8
tick,0x7ff8278cfeb4,113531897,0,0x0,8
tick,0x7ff8278cfeb4,113547978,0,0x0,8
tick,0x7ff8278cfeb4,113565079,0,0x0,8
tick,0x7ff8278cfeb4,113583794,0,0x0,8
tick,0x7ff8278cfeb4,113596366,0,0x0,8
tick,0x7ff8278cfeb4,113611992,0,0x0,8
tick,0x7ff8278cfeb4,113626540,0,0x0,8
tick,0x7ff8278cfeb4,113642017,0,0x0,8
tick,0x7ff8278cfeb4,113656765,0,0x0,8
tick,0x7ff8278cfeb4,113674672,0,0x0,8
tick,0x7ff8278cfeb4,113690098,0,0x0,8
tick,0x7ff8278cfeb4,113704123,0,0x0,8
tick,0x7ff8278cfeb4,113718597,0,0x0,8
tick,0x7ff8278cfeb4,113733875,0,0x0,8
tick,0x7ff8278cfeb4,113749897,0,0x0,8
tick,0x7ff8278cfeb4,113764806,0,0x0,8
tick,0x7ff8278cfeb4,113780416,0,0x0,8
tick,0x7ff8278cfeb4,113796327,0,0x0,8
tick,0x7ff8278cfeb4,113812422,0,0x0,8
tick,0x7ff8278cfeb4,113828315,0,0x0,8
tick,0x7ff8278cfeb4,113843442,0,0x0,8
tick,0x7ff8278cfeb4,113858319,0,0x0,8
tick,0x7ff8278cfeb4,113873358,0,0x0,8
tick,0x7ff8278cfeb4,113889391,0,0x0,8
tick,0x7ff8278cfeb4,113903433,0,0x0,8
tick,0x7ff8278cfeb4,113921544,0,0x0,8
tick,0x7ff8278cfeb4,113935680,0,0x0,8
tick,0x7ff8278cfeb4,113954803,0,0x0,8
tick,0x7ff8278cfeb4,113978021,0,0x0,8
tick,0x7ff8278cfeb4,113982573,0,0x0,8
tick,0x7ff8278cfeb4,113996217,0,0x0,8
tick,0x7ff8278cfeb4,114023781,0,0x0,8
tick,0x7ff8278cfeb4,114036008,0,0x0,8
tick,0x7ff8278cfeb4,114045792,0,0x0,8
tick,0x7ff8278cfeb4,114060205,0,0x0,8
tick,0x7ff8278cfeb4,114079769,0,0x0,8
tick,0x7ff8278cfeb4,114091522,0,0x0,8
tick,0x7ff8278cfeb4,114104102,0,0x0,8
tick,0x7ff8278cfeb4,114120292,0,0x0,8
tick,0x7ff8278cfeb4,114135707,0,0x0,8
tick,0x7ff8278cfeb4,114150734,0,0x0,8
tick,0x7ff8278cfeb4,114166834,0,0x0,8
tick,0x7ff8278cfeb4,114181747,0,0x0,8
tick,0x7ff8278cfeb4,114196227,0,0x0,8
tick,0x7ff8278cfeb4,114211885,0,0x0,8
tick,0x7ff8278cfeb4,114226102,0,0x0,8
tick,0x7ff8278cfeb4,114242690,0,0x0,8
tick,0x7ff8278cfeb4,114258343,0,0x0,8
tick,0x7ff8278cfeb4,114275897,0,0x0,8
tick,0x7ff8278cfeb4,114294844,0,0x0,8
tick,0x7ff8278cfeb4,114317134,0,0x0,8
tick,0x7ff8278cfeb4,114324697,0,0x0,8
tick,0x7ff8278cfeb4,114344081,0,0x0,8
tick,0x7ff8278cfeb4,114358389,0,0x0,8
tick,0x7ff8278cfeb4,114377125,0,0x0,8
tick,0x7ff8278cfeb4,114382935,0,0x0,8
tick,0x7ff8278cfeb4,114399463,0,0x0,8
tick,0x7ff8278cfeb4,114413363,0,0x0,8
tick,0x7ff8278cfeb4,114429126,0,0x0,8
tick,0x7ff8278cfeb4,114444974,0,0x0,8
tick,0x7ff8278cfeb4,114460547,0,0x0,8
tick,0x7ff8278cfeb4,114475523,0,0x0,8
tick,0x7ff8278cfeb4,114492586,0,0x0,8
tick,0x7ff8278cfeb4,114507598,0,0x0,8
tick,0x7ff8278cfeb4,114522832,0,0x0,8
tick,0x7ff8278cfeb4,114538453,0,0x0,8
tick,0x7ff8278cfeb4,114553646,0,0x0,8
tick,0x7ff8278cfeb4,114569650,0,0x0,8
tick,0x7ff8278cfeb4,114585170,0,0x0,8
tick,0x7ff8278cfeb4,114599328,0,0x0,8
tick,0x7ff8278cfeb4,114614302,0,0x0,8
tick,0x7ff8278cfeb4,114630295,0,0x0,8
tick,0x7ff8278cfeb4,114645670,0,0x0,8
tick,0x7ff8278cfeb4,114661785,0,0x0,8
tick,0x7ff8278cfeb4,114677260,0,0x0,8
tick,0x7ff8278cfeb4,114692322,0,0x0,8
tick,0x7ff8278cfeb4,114708720,0,0x0,8
tick,0x7ff8278cfeb4,114723587,0,0x0,8
tick,0x7ff8278cfeb4,114739374,0,0x0,8
tick,0x7ff8278cfeb4,114753381,0,0x0,8
tick,0x7ff8278cfeb4,114769475,0,0x0,8
tick,0x7ff8278cfeb4,114785452,0,0x0,8
tick,0x7ff8278cfeb4,114801129,0,0x0,8
tick,0x7ff8278cfeb4,114817304,0,0x0,8
tick,0x7ff8278cfeb4,114832169,0,0x0,8
tick,0x7ff8278cfeb4,114847161,0,0x0,8
tick,0x7ff8278cfeb4,114863071,0,0x0,8
tick,0x7ff8278cfeb4,114878361,0,0x0,8
tick,0x7ff8278cfeb4,114893009,0,0x0,8
tick,0x7ff8278cfeb4,114909016,0,0x0,8
tick,0x7ff8278cfeb4,114924605,0,0x0,8
tick,0x7ff8278cfeb4,114941709,0,0x0,8
tick,0x7ff8278cfeb4,114954384,0,0x0,8
tick,0x7ff8278cfeb4,114970248,0,0x0,8
tick,0x7ff8278cfeb4,114985613,0,0x0,8
tick,0x7ff8278cfeb4,115000671,0,0x0,8
tick,0x7ff8278cfeb4,115015561,0,0x0,8
tick,0x7ff8278cfeb4,115030133,0,0x0,8
tick,0x7ff8278cfeb4,115046134,0,0x0,8
tick,0x7ff8278cfeb4,115062432,0,0x0,8
tick,0x7ff8278cfeb4,115078222,0,0x0,8
tick,0x7ff8278cfeb4,115094441,0,0x0,8
tick,0x7ff8278cfeb4,115109460,0,0x0,8
tick,0x7ff8278cfeb4,115125712,0,0x0,8
tick,0x7ff8278cfeb4,115141209,0,0x0,8
tick,0x7ff8278cfeb4,115155958,0,0x0,8
tick,0x7ff8278cfeb4,115171798,0,0x0,8
tick,0x7ff8278cfeb4,115186480,0,0x0,8
tick,0x7ff8278cfeb4,115202116,0,0x0,8
tick,0x7ff8278cfeb4,115217043,0,0x0,8
tick,0x7ff8278cfeb4,115232224,0,0x0,8
tick,0x7ff8278cfeb4,115247888,0,0x0,8
tick,0x7ff8278cfeb4,115263933,0,0x0,8
tick,0x7ff8278cfeb4,115279538,0,0x0,8
tick,0x7ff8278cfeb4,115293966,0,0x0,8
tick,0x7ff8278cfeb4,115310535,0,0x0,8
tick,0x7ff8278cfeb4,115325842,0,0x0,8
tick,0x7ff8278cfeb4,115343046,0,0x0,8
tick,0x7ff8278cfeb4,115358940,0,0x0,8
tick,0x7ff8278cfeb4,115374660,0,0x0,8
tick,0x7ff8278cfeb4,115388013,0,0x0,8
tick,0x7ff8278cfeb4,115402829,0,0x0,8
tick,0x7ff8278cfeb4,115418184,0,0x0,8
tick,0x7ff8278cfeb4,115433820,0,0x0,8
tick,0x7ff8278cfeb4,115449781,0,0x0,8
tick,0x7ff8278cfeb4,115465349,0,0x0,8
tick,0x7ff8278cfeb4,115480565,0,0x0,8
tick,0x7ff8278cfeb4,115495623,0,0x0,8
tick,0x7ff8278cfeb4,115512240,0,0x0,8
tick,0x7ff8278cfeb4,115526394,0,0x0,8
tick,0x7ff8278cfeb4,115543356,0,0x0,8
tick,0x7ff8278cfeb4,115559086,0,0x0,8
tick,0x7ff8278cfeb4,115576470,0,0x0,8
tick,0x7ff8278cfeb4,115592343,0,0x0,8
tick,0x7ff8278cfeb4,115605321,0,0x0,8
tick,0x7ff8278cfeb4,115619846,0,0x0,8
tick,0x7ff8278cfeb4,115634432,0,0x0,8
tick,0x7ff8278cfeb4,115649132,0,0x0,8
tick,0x7ff8278cfeb4,115664880,0,0x0,8
tick,0x7ff8278cfeb4,115680332,0,0x0,8
tick,0x7ff8278cfeb4,115696571,0,0x0,8
tick,0x7ff8278cfeb4,115712069,0,0x0,8
tick,0x7ff8278cfeb4,115729538,0,0x0,8
tick,0x7ff8278cfeb4,115743528,0,0x0,8
tick,0x7ff8278cfeb4,115762899,0,0x0,8
tick,0x7ff8278cfeb4,115777106,0,0x0,8
tick,0x7ff8278cfeb4,115794595,0,0x0,8
tick,0x7ff8278cfeb4,115807785,0,0x0,8
tick,0x7ff8278cfeb4,115826399,0,0x0,8
tick,0x7ff8278cfeb4,115839312,0,0x0,8
tick,0x7ff8278cfeb4,115855104,0,0x0,8
tick,0x7ff8278cfeb4,115872748,0,0x0,8
tick,0x7ff8278cfeb4,115886986,0,0x0,8
tick,0x7ff8278cfeb4,115903089,0,0x0,8
tick,0x7ff8278cfeb4,115917952,0,0x0,8
tick,0x7ff8278cfeb4,115932162,0,0x0,8
tick,0x7ff8278cfeb4,115947235,0,0x0,8
tick,0x7ff8278cfeb4,115963605,0,0x0,8
tick,0x7ff8278cfeb4,115978171,0,0x0,8
tick,0x7ff8278cfeb4,115993919,0,0x0,8
tick,0x7ff8278cfeb4,116009297,0,0x0,8
tick,0x7ff8278cfeb4,116026696,0,0x0,8
tick,0x7ff8278cfeb4,116039131,0,0x0,8
tick,0x7ff8278cfeb4,116054007,0,0x0,8
tick,0x7ff8278cfeb4,116070401,0,0x0,8
tick,0x7ff8278cfeb4,116084985,0,0x0,8
tick,0x7ff8278cfeb4,116101850,0,0x0,8
tick,0x7ff8278cfeb4,116117541,0,0x0,8
tick,0x7ff8278cfeb4,116132026,0,0x0,8
tick,0x7ff8278cfeb4,116148493,0,0x0,8
tick,0x7ff8278cfeb4,116162900,0,0x0,8
tick,0x7ff8278cfeb4,116179202,0,0x0,8
tick,0x7ff8278cfeb4,116195077,0,0x0,8
tick,0x7ff8278cfeb4,116211986,0,0x0,8
tick,0x7ff8278cfeb4,116226729,0,0x0,8
tick,0x7ff8278cfeb4,116244019,0,0x0,8
tick,0x7ff8278cfeb4,116256322,0,0x0,8
tick,0x7ff8278cfeb4,116271436,0,0x0,8
tick,0x7ff8278cfeb4,116288148,0,0x0,8
tick,0x7ff8278cfeb4,116301949,0,0x0,8
tick,0x7ff8278cfeb4,116316830,0,0x0,8
tick,0x7ff8278cfeb4,116332134,0,0x0,8
tick,0x7ff8278cfeb4,116347629,0,0x0,8
tick,0x7ff8278cfeb4,116363288,0,0x0,8
tick,0x7ff8278cfeb4,116380453,0,0x0,8
tick,0x7ff8278cfeb4,116393248,0,0x0,8
tick,0x7ff8278cfeb4,116408817,0,0x0,8
tick,0x7ff8278cfeb4,116425438,0,0x0,8
tick,0x7ff8278cfeb4,116439779,0,0x0,8
tick,0x7ff8278cfeb4,116455413,0,0x0,8
tick,0x7ff8278cfeb4,116469881,0,0x0,8
tick,0x7ff8278cfeb4,116485678,0,0x0,8
tick,0x7ff8278cfeb4,116500673,0,0x0,8
tick,0x7ff8278cfeb4,116515847,0,0x0,8
tick,0x7ff8278cfeb4,116531835,0,0x0,8
tick,0x7ff8278cfeb4,116546770,0,0x0,8
tick,0x7ff8278cfeb4,116562480,0,0x0,8
tick,0x7ff8278cfeb4,116576707,0,0x0,8
tick,0x7ff8278cfeb4,116593171,0,0x0,8
tick,0x7ff8278cfeb4,116612350,0,0x0,8
tick,0x7ff8278cfeb4,116628093,0,0x0,8
tick,0x7ff8278cfeb4,116638625,0,0x0,8
tick,0x7ff8278cfeb4,116653739,0,0x0,8
tick,0x7ff8278cfeb4,116668813,0,0x0,8
tick,0x7ff8278cfeb4,116684713,0,0x0,8
tick,0x7ff8278cfeb4,116699939,0,0x0,8
tick,0x7ff8278cfeb4,116715623,0,0x0,8
tick,0x7ff8278cfeb4,116732150,0,0x0,8
tick,0x7ff8278cfeb4,116747500,0,0x0,8
tick,0x7ff8278cfeb4,116762818,0,0x0,8
tick,0x7ff8278cfeb4,116778848,0,0x0,8
tick,0x7ff8278cfeb4,116794346,0,0x0,8
tick,0x7ff8278cfeb4,116809353,0,0x0,8
tick,0x7ff8278cfeb4,116827925,0,0x0,8
tick,0x7ff8278cfeb4,116852204,0,0x0,8
tick,0x7ff8278cfeb4,116855229,0,0x0,8
tick,0x7ff8278cfeb4,116870401,0,0x0,8
tick,0x7ff8278cfeb4,116884918,0,0x0,8
tick,0x7ff8278cfeb4,116899519,0,0x0,8
tick,0x7ff8278cfeb4,116915435,0,0x0,8
tick,0x7ff8278cfeb4,116931507,0,0x0,8
tick,0x7ff8278cfeb4,116952091,0,0x0,8
tick,0x7ff8278cfeb4,116962446,0,0x0,8
tick,0x7ff8278cfeb4,116977479,0,0x0,8
tick,0x7ff8278cfeb4,116991037,0,0x0,8
tick,0x7ff8278cfeb4,117006482,0,0x0,8
tick,0x7ff8278cfeb4,117022198,0,0x0,8
tick,0x7ff8278cfeb4,117036314,0,0x0,8
tick,0x7ff8278cfeb4,117053304,0,0x0,8
tick,0x7ff8278cfeb4,117066448,0,0x0,8
tick,0x7ff8278cfeb4,117083004,0,0x0,8
tick,0x7ff8278cfeb4,117098184,0,0x0,8
tick,0x7ff8278cfeb4,117113467,0,0x0,8
tick,0x7ff8278cfeb4,117134049,0,0x0,8
tick,0x7ff8278cfeb4,117149002,0,0x0,8
tick,0x7ff8278cfeb4,117163522,0,0x0,8
tick,0x7ff8278cfeb4,117174499,0,0x0,8
tick,0x7ff8278cfeb4,117190215,0,0x0,8
tick,0x7ff8278cfeb4,117206749,0,0x0,8
tick,0x7ff8278cfeb4,117222985,0,0x0,8
tick,0x7ff8278cfeb4,117240462,0,0x0,8
tick,0x7ff8278cfeb4,117252679,0,0x0,8
tick,0x7ff8278cfeb4,117269199,0,0x0,8
tick,0x7ff8278cfeb4,117283266,0,0x0,8
tick,0x7ff8278cfeb4,117303637,0,0x0,8
tick,0x7ff8278cfeb4,117323400,0,0x0,8
tick,0x7ff8278cfeb4,117337857,0,0x0,8
tick,0x7ff8278cfeb4,117349749,0,0x0,8
tick,0x7ff8278cfeb4,117378007,0,0x0,8
tick,0x7ff8278cfeb4,117391190,0,0x0,8
tick,0x7ff8278cfeb4,117419249,0,0x0,8
tick,0x7ff8278cfeb4,117437225,0,0x0,8
tick,0x7ff8278cfeb4,117455085,0,0x0,8
tick,0x7ff8278cfeb4,117467132,0,0x0,8
tick,0x7ff8278cfeb4,117485567,0,0x0,8
tick,0x7ff8278cfeb4,117496871,0,0x0,8
tick,0x7ff8278cfeb4,117513698,0,0x0,8
tick,0x7ff8278cfeb4,117528835,0,0x0,8
tick,0x7ff8278cfeb4,117545307,0,0x0,8
tick,0x7ff8278cfeb4,117561711,0,0x0,8
tick,0x7ff8278cfeb4,117574520,0,0x0,8
tick,0x7ff8278cfeb4,117590485,0,0x0,8
tick,0x7ff8278cfeb4,117606411,0,0x0,8
tick,0x7ff8278cfeb4,117622164,0,0x0,8
tick,0x7ff8278cfeb4,117636739,0,0x0,8
tick,0x7ff8278cfeb4,117652080,0,0x0,8
tick,0x7ff8278cfeb4,117668195,0,0x0,8
tick,0x7ff8278cfeb4,117684004,0,0x0,8
tick,0x7ff8278cfeb4,117700315,0,0x0,8
tick,0x7ff8278cfeb4,117716046,0,0x0,8
tick,0x7ff8278cfeb4,117732179,0,0x0,8
tick,0x7ff8278cfeb4,117748289,0,0x0,8
tick,0x7ff8278cfeb4,117762617,0,0x0,8
tick,0x7ff8278cfeb4,117778295,0,0x0,8
tick,0x7ff8278cfeb4,117794284,0,0x0,8
tick,0x7ff8278cfeb4,117813137,0,0x0,8
tick,0x7ff8278cfeb4,117828909,0,0x0,8
tick,0x7ff8278cfeb4,117840449,0,0x0,8
tick,0x7ff8278cfeb4,117856184,0,0x0,8
tick,0x7ff8278cfeb4,117871182,0,0x0,8
tick,0x7ff8278cfeb4,117886138,0,0x0,8
tick,0x7ff8278cfeb4,117901132,0,0x0,8
tick,0x7ff8278cfeb4,117919246,0,0x0,8
tick,0x7ff8278cfeb4,117933584,0,0x0,8
tick,0x7ff8278cfeb4,117948402,0,0x0,8
tick,0x7ff8278cfeb4,117965416,0,0x0,8
tick,0x7ff8278cfeb4,117980359,0,0x0,8
tick,0x7ff8278cfeb4,117998608,0,0x0,8
tick,0x7ff8278cfeb4,118009034,0,0x0,8
tick,0x7ff8278cfeb4,118024899,0,0x0,8
tick,0x7ff8278cfeb4,118040188,0,0x0,8
tick,0x7ff8278cfeb4,118055118,0,0x0,8
tick,0x7ff8278cfeb4,118070198,0,0x0,8
tick,0x7ff8278cfeb4,118086271,0,0x0,8
tick,0x7ff8278cfeb4,118102176,0,0x0,8
tick,0x7ff8278cfeb4,118117080,0,0x0,8
tick,0x7ff8278cfeb4,118134187,0,0x0,8
tick,0x7ff8278cfeb4,118149104,0,0x0,8
tick,0x7ff8278cfeb4,118165292,0,0x0,8
tick,0x7ff8278cfeb4,118181359,0,0x0,8
tick,0x7ff8278cfeb4,118193727,0,0x0,8
tick,0x7ff8278cfeb4,118208150,0,0x0,8
tick,0x7ff8278cfeb4,118223959,0,0x0,8
tick,0x7ff8278cfeb4,118238794,0,0x0,8
tick,0x7ff8278cfeb4,118255064,0,0x0,8
tick,0x7ff8278cfeb4,118269792,0,0x0,8
tick,0x7ff8278cfeb4,118284900,0,0x0,8
tick,0x7ff8278cfeb4,118300745,0,0x0,8
tick,0x7ff8278cfeb4,118315712,0,0x0,8
tick,0x7ff8278cfeb4,118331131,0,0x0,8
tick,0x7ff8278cfeb4,118347851,0,0x0,8
tick,0x7ff8278cfeb4,118363110,0,0x0,8
tick,0x7ff8278cfeb4,118377897,0,0x0,8
tick,0x7ff8278cfeb4,118395052,0,0x0,8
tick,0x7ff8278cfeb4,118412349,0,0x0,8
tick,0x7ff8278cfeb4,118424639,0,0x0,8
tick,0x7ff8278cfeb4,118440812,0,0x0,8
tick,0x7ff8278cfeb4,118456213,0,0x0,8
tick,0x7ff8278cfeb4,118471389,0,0x0,8
tick,0x7ff8278cfeb4,118486780,0,0x0,8
tick,0x7ff8278cfeb4,118501329,0,0x0,8
tick,0x7ff8278cfeb4,118516229,0,0x0,8
tick,0x7ff8278cfeb4,118532158,0,0x0,8
tick,0x7ff8278cfeb4,118547836,0,0x0,8
tick,0x7ff8278cfeb4,118563945,0,0x0,8
tick,0x7ff8278cfeb4,118579603,0,0x0,8
tick,0x7ff8278cfeb4,118598703,0,0x0,8
tick,0x7ff8278cfeb4,118608844,0,0x0,8
tick,0x7ff8278cfeb4,118624006,0,0x0,8
tick,0x7ff8278cfeb4,118639827,0,0x0,8
tick,0x7ff8278cfeb4,118655613,0,0x0,8
tick,0x7ff8278cfeb4,118679968,0,0x0,8
tick,0x7ff8278cfeb4,118685265,0,0x0,8
tick,0x7ff8278cfeb4,118700515,0,0x0,8
tick,0x7ff8278cfeb4,118715681,0,0x0,8
tick,0x7ff8278cfeb4,118731974,0,0x0,8
tick,0x7ff8278cfeb4,118746471,0,0x0,8
tick,0x7ff8278cfeb4,118764095,0,0x0,8
tick,0x7ff8278cfeb4,118776414,0,0x0,8
tick,0x7ff8278cfeb4,118792364,0,0x0,8
tick,0x7ff8278cfeb4,118807485,0,0x0,8
tick,0x7ff8278cfeb4,118824058,0,0x0,8
tick,0x7ff8278cfeb4,118838598,0,0x0,8
tick,0x7ff8278cfeb4,118854217,0,0x0,8
tick,0x7ff8278cfeb4,118869389,0,0x0,8
